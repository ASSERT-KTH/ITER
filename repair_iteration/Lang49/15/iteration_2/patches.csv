bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  t  =(u  -  v)/2;  T  =(v  -  u)/2;  [CE]  while  expected  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(u  -  v)/2;  T  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(u  -  v)/2;  T  =(v  -  u)/2;	          t    =(v    -    u)/2;    T    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	80	None	replace
2	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(u/2)/*B3*/);	  int    k    =((    v&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	126	None	replace
3	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  -1  :  -(u/2)/*B3*/);	  int    k    =((    v&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	126	None	replace
4	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
5	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
6	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  while  expected	114	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	67	8	add
8	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;  t  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	67	8	add
9	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  int  t  =(v  -  u)/2;  t  =(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  int  t  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    int  t  =(v  -  u)/2;  t  =(v  -  u)/2;	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	67	None	add
10	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  (v  -  u)/2;  t  =(v  -  u)/2;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  (v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    (v  -  u)/2;  t  =(v  -  u)/2;	  	non-compiled	[CE]  not  a  statement	67	None	add
11	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	111	None	replace
12	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/  1;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/    1;    	non-compiled	[CE]  while  expected	102	None	replace
13	[BUG]  [BUGGY]  int  t  =(v  -  u)/2;  [CE]  while  expected  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  t  =(v  -  u)/2;	          t    =(v    -    u)/2;    int    t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	69	None	replace
14	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  3;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  3;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/    1;    	non-compiled	[CE]  while  expected	57	None	replace
15	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  4;  [CE]  while  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  4;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  4;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/    1;    	non-compiled	[CE]  while  expected	57	None	replace
16	[BUG]  [BUGGY]  if(t  <  0)  {  while(v  <  0)  {  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  0)  {  while(v  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  0)  {  while(v  <  0)  {	  if(v    <    0)    {    while(v    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
17	[BUG]  [BUGGY]  while(t  <  0)  {  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  while(t  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	while(t  <  0)  {	  if(v    <    0)    {    while(v    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
18	[BUG]  [BUGGY]  while(t  >=  0)  {  [CE]  'else'  without  'if'  [FE]                          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  while(t  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	while(t  >=  0)  {	  if(v    <    0)    {    while(v    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
19	[BUG]  [BUGGY]  if(t  <  0)  {  while(v  >=  0)  {  [CE]  'else'  without  'if'  [FE]                            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  0)  {  while(v  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  0)  {  while(v  >=  0)  {	  if(v    <    0)    {    while(v    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
20	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  2  +  1;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  2  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  2  +  1;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	55	None	replace
21	[BUG]  [BUGGY]  t  =  -(u  -  v)/2;  t  =  -(v  -  u)/1;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  -(u  -  v)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  -(u  -  v)/2;  t  =  -(v  -  u)/1;	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/1;    timeout    	non-compiled	[CE]  while  expected	25	None	replace
22	[BUG]  [BUGGY]  t  =  -(u  -  1)/2;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  -(u  -  1)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  -(u  -  1)/2;	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/1;    timeout    	non-compiled	[CE]  while  expected	25	None	replace
23	[BUG]  [BUGGY]  if(t  ==  0)  {  if(t  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  if(t  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    ==    0)    {    if(t  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
24	[BUG]  [BUGGY]  if(t  ==  0)  {  if(t  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  if(t  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    ==    0)    {    if(t  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
25	[BUG]  [BUGGY]  if(t  ==  0)  {  if(t!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  if(t!=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    ==    0)    {    if(t!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
26	[BUG]  [BUGGY]  if(t  ==  0)  {  if(t  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  if(t  >>  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    ==    0)    {    if(t  >>  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
27	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  v  :  -(a1&2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  v  :  -(a1&2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  v  :  -(a1&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    v    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	58	None	replace
28	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    v    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	58	None	replace
29	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	100	None	replace
30	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	100	None	replace
31	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  B3;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  B3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  B3;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	53	None	replace
32	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  3;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  3;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	53	None	replace
33	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a/2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	99	None	replace
34	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a2/2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a2/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a2/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	99	None	replace
35	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	8	None	replace
36	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	8	None	replace
37	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  0  :  -(a1&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(a1&2)/*B3*/;    	non-compiled	[CE]  while  expected	110	None	replace
38	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1/2)/*B3*/;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(a1&2)/*B3*/;    	non-compiled	[CE]  while  expected	110	None	replace
39	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	113	None	replace
40	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	113	None	replace
41	[BUG]  [BUGGY]  t  =(u  -  v)/2  +  1;  [CE]  while  expected  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(u  -  v)/2  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(u  -  v)/2  +  1;	  t    =(v    -    u)/2    +    1;    	non-compiled	[CE]  while  expected	79	None	replace
42	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  t  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =(v        -        u)/2;        t    =(v    -    u)/1;    t  =(v  -  u)/2;  t  =(v  -  u)/1;	  timeout    	compilable	timeout	117	1	add
43	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  t  =(v  -  u)/2;  t  =(v  -  u)/1;  timeout  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  t  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/1;    t  =(v  -  u)/2;  t  =(v  -  u)/1;	  timeout    	compilable	timeout	117	1	add
44	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  int  t  =(v  -  u)/2;  t  =(v  -  u)/1;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  int  t  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/1;    int  t  =(v  -  u)/2;  t  =(v  -  u)/1;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	117	None	add
45	[BUG]  [BUGGY]  t  =(v  -  u)/  2.0;  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  u)/  2.0;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u)/  2.0;	          t    =    -(v    -    u)/2;    t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	27	None	replace
46	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v/2)/*B3*/);	  int    k    =((    v&1)    ==    1)?    -1    :    -(v/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	71	None	replace
47	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/  2;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/    2;    	non-compiled	[CE]  while  expected	104	None	replace
48	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/  2;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/    2;    	non-compiled	[CE]  while  expected	104	None	replace
49	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  t);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  t);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  t);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	86	None	replace
50	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	77	1	add
51	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	77	1	add
52	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	77	None	add
53	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    t  =(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	77	1	add
54	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =(v  -  u)/2;  t  =  -(v  -  u)/3;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    t  =(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	77	1	add
55	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u/2)/*B3;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u/2)/*B3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(u/2)/*B3;	  int    k    =(u    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
56	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u  +  1)/  B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u  +  1)/  B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(u  +  1)/  B3*/;	  int    k    =(u    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
57	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;	  timeout    	compilable	timeout	21	1	add
58	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;	  timeout    	compilable	timeout	21	1	add
59	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	21	None	add
60	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u)/2;	  timeout    	compilable	timeout	21	1	add
61	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  t  =  -(v  -  u)/2;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u)/2;	  timeout    	compilable	timeout	21	1	add
62	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =  -(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u);	  timeout    	compilable	timeout	21	1	add
63	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =  -(v  -  u);  timeout  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =  -(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =  -(v  -  u);	  timeout    	compilable	timeout	21	1	add
64	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(u&2)/*B3*/;	  int    k    =(v    <    <    1)?    u    :    -(v&1)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	107	None	replace
65	[BUG]  [BUGGY]  while(t!=  0)  {  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  while(t!=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	while(t!=  0)  {	  if(t    <    0)    {    while(t    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
66	[BUG]  [BUGGY]  while(t  ==  0)  {  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  while(t  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	while(t  ==  0)  {	  if(t    <    0)    {    while(t    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
67	[BUG]  [BUGGY]  if(t  ==  0)  {  If(v  <  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  If(v  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  If(v  <  0)  {	  if(v    <    0)    {    If(v    <    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
68	[BUG]  [BUGGY]  if(t  >=  0)  {  If(v  <  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  >=  0)  {  If(v  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  >=  0)  {  If(v  <  0)  {	  if(v    <    0)    {    If(v    <    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
69	[BUG]  [BUGGY]  if(t  <  0)  {  If(v  >  0)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  0)  {  If(v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  0)  {  If(v  >  0)  {	  if(v    <    0)    {    If(v    <    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
70	[BUG]  [BUGGY]  if(v  ==  0)  {  If(v  <  0)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  ==  0)  {  If(v  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  ==  0)  {  If(v  <  0)  {	  if(v    <    0)    {    If(v    <    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
71	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	95	None	replace
72	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  numerator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	95	None	replace
73	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	76	None	replace
74	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	76	None	replace
75	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	28	None	replace
76	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator  +  1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator  +  1;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  ';'  expected	28	None	replace
77	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  power;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  power;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  power;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	28	None	replace
78	[BUG]  [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	43	None	replace
79	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  4;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  4;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  4;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/    1;    	non-compiled	[CE]  while  expected	56	None	replace
80	[BUG]  [BUGGY]  if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/2;    timeout    	non-compiled	[CE]  while  expected	22	None	replace
81	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	11	None	replace
82	[BUG]  [BUGGY]  t  =(v  -  n)/2;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  n)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  n)/2;	  t    =(v    -    wholeNumber)/2;    	non-compiled	[CE]  while  expected	103	None	replace
83	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  1  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  1  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	127	None	replace
84	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  1  :  -(u&2)/*B3*/;	  int    k    =(v    <    <    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	127	None	replace
85	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u%2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u%2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  1  :  -(u%2)/*B3*/;	  int    k    =(v    <    <    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	127	None	replace
86	[BUG]  [BUGGY]  u  =  -(v  -  u)/2;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	u  =  -(v  -  u)/2;	          t    =    -(v    -    u)/2;    u    =    -(v    -    u)/2;    timeout    	non-compiled	[CE]  while  expected	116	None	replace
87	[BUG]  [BUGGY]  t  =  -(u  -  1)/2;  u  =  -(v  -  u)/2;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  -(u  -  1)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  -(u  -  1)/2;  u  =  -(v  -  u)/2;	          t    =    -(v    -    u)/2;    u    =    -(v    -    u)/2;    timeout    	non-compiled	[CE]  while  expected	116	None	replace
88	[BUG]  [BUGGY]  while(t  >  0)  {  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  while(t  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	while(t  >  0)  {	  if(v    >    0)    {    while(v    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
89	[BUG]  [BUGGY]  if(t  <  0)  {  while(v  >  0)  {  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  0)  {  while(v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  0)  {  while(v  >  0)  {	  if(v    >    0)    {    while(v    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
90	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	115	1	add
91	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	115	1	add
92	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  int  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  int  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    int  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	115	None	add
93	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	115	1	add
94	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	115	1	add
95	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  u  =  -(v  -  u);	  timeout    	compilable	timeout	115	1	add
96	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u);  timeout  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  u  =  -(v  -  u);	  timeout    	compilable	timeout	115	1	add
97	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  (v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  (v  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	115	1	add
98	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  (v  -  u)/2;  u  =  -(v  -  u)/2;  timeout  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  (v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  (v  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	115	1	add
99	[BUG]  [BUGGY]  int  t  =  -(v  -  u)/2;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  t  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  t  =  -(v  -  u)/2;	          t    =    -(v    -    u)/2;    int    t    =    -(v    -    u)/2;    	non-compiled	[CE]  while  expected	23	None	replace
100	[BUG]  [BUGGY]  t  =(u  -  v)/2;  t  =(v  -  u)/2;  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(u  -  v)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(u  -  v)/2;  t  =(v  -  u)/2;	          t    =(v    -    u)/2;    t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	68	None	replace
101	[BUG]  [BUGGY]  int  u  =(u  <  <  1)?  v  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(u  <  <  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(u  <  <  1)?  v  :  -(u/2)/*B3*/;	  int    k    =(u    <    <    1)?    u    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
102	[BUG]  [BUGGY]  int  k  =(u  >=  1)?  u  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  >=  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  >=  1)?  u  :  -(u/2)/*B3*/;	  int    k    =(u    <    <    1)?    u    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	62	None	replace
103	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  0  :  -(v/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  0  :  -(v/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  0  :  -(v/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	108	None	replace
104	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  -1  :  -(v/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  -1  :  -(v/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  -1  :  -(v/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	108	None	replace
105	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	7	None	replace
106	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
107	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -1  -(u/2)/*B3*/,  denom);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -1  -(u/2)/*B3*/,  denom);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -1  -(u/2)/*B3*/,  denom);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  ';'  expected	12	None	replace
108	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  ';'  expected	12	None	replace
109	[BUG]  [BUGGY]  if(t  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  =  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  =  0)  {	  if(v    >    0)    {    if(v    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
110	[BUG]  [BUGGY]  int  u  =(u  <  <  1)?  u  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(u  <  <  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(u  <  <  1)?  u  :  -(u/2)/*B3*/;	  int    u    =(v    <    <    1)?    u    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
111	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(u&1)/*B3*/;	  int    k    =(v    <    <    1)?    0    :    -(u&1)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
112	[BUG]  [BUGGY]  int  k  =(v  >=  1)?  0  :  -(u&1)/*B3*/;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  >=  1)?  0  :  -(u&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  >=  1)?  0  :  -(u&1)/*B3*/;	  int    k    =(v    <    <    1)?    0    :    -(u&1)/*B3*/;    	non-compiled	[CE]  while  expected	42	None	replace
113	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B4*/;    	non-compiled	[CE]  while  expected	91	None	replace
114	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(u&2)/*B3*/;	  int    k    =(v    <    <    1)?    0    :    -(u&2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
115	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u2/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u2/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(u2/2)/*B3*/;	  int    k    =(v    <    <    1)?    0    :    -(u&2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
116	[BUG]  [BUGGY]  if(v  ==  0)  {  If(v  >  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  ==  0)  {  If(v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  ==  0)  {  If(v  >  0)  {	  if(v    >    0)    {    If(v    >    0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
117	[BUG]  [BUGGY]  if(t  ==  0)  {  If(v  >  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  If(v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  If(v  >  0)  {	  if(v    >    0)    {    If(v    >    0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
118	[BUG]  [BUGGY]  if(t  ==  0)  {  If(t  <  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  If(t  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  If(t  <  0)  {	  if(t    <    0)    {    If(t    <    0)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
119	[BUG]  [BUGGY]  if(t!=  0)  {  If(t  <  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t!=  0)  {  If(t  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t!=  0)  {  If(t  <  0)  {	  if(t    <    0)    {    If(t    <    0)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
120	[BUG]  [BUGGY]  if(t  ==  0)  {  If(t  >=  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  If(t  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  If(t  >=  0)  {	  if(t    <    0)    {    If(t    <    0)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
121	[BUG]  [BUGGY]  if(t!=  0)  {  If(t  ==  0)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t!=  0)  {  If(t  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t!=  0)  {  If(t  ==  0)  {	  if(t    <    0)    {    If(t    <    0)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
122	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B2*/;    	non-compiled	[CE]  while  expected	97	None	replace
123	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B2*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B2*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B2*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B2*/;    	non-compiled	[CE]  while  expected	97	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	26	8	add
125	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    t  =  -(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	26	8	add
126	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  int  t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  int  t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    int  t  =  -(v  -  u)/2;  t  =(v  -  u)/2;	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	26	None	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u);  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    t  =  -(v  -  u);  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	26	8	add
128	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u);  t  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(v  -  u);  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    t  =  -(v  -  u);  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	26	8	add
129	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  while  expected	109	None	replace
130	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	compilable	timeout	24	1	add
131	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	compilable	timeout	24	1	add
132	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    int  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	add
133	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    t  =(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	compilable	timeout	24	1	add
134	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =(v  -  u)/2;  t  =  -(v  -  u)/1;  timeout  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    t  =(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	compilable	timeout	24	1	add
135	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	64	None	replace
136	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B2*/);    	non-compiled	[CE]  ';'  expected	96	None	replace
137	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B2*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B2*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B2*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B2*/);    	non-compiled	[CE]  ';'  expected	96	None	replace
138	[BUG]  [BUGGY]  int  k  =(u  >=  1)?  v  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  >=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  >=  1)?  v  :  -(u/2)/*B3*/;	  int    k    =(u    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	61	None	replace
139	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u%2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u%2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  v  :  -(u%2)/*B3*/;	  int    k    =(u    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
140	[BUG]  [BUGGY]  if(u  <  0)  {  if(u  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  <  0)  {  if(u  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    <    0)    {    if(u  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	29	None	add
141	[BUG]  [BUGGY]  if(u  <  0)  {  if(u  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  <  0)  {  if(u  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    <    0)    {    if(u  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	29	None	add
142	[BUG]  [BUGGY]  if(u  <  0)  {  if(u  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  <  0)  {  if(u  <  =  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    <    0)    {    if(u  <  =  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	29	None	add
143	[BUG]  [BUGGY]  if(u  <  0)  {  If(u  <  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  <  0)  {  If(u  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    <    0)    {    If(u  <  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	29	None	add
144	[BUG]  [BUGGY]  t  =(u  -  v  +  1)/2;  [CE]  while  expected  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(u  -  v  +  1)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(u  -  v  +  1)/2;	  t    =(v    -    u    +    1)/2;    	non-compiled	[CE]  while  expected	123	None	replace
145	[BUG]  [BUGGY]  if(u  ==  0)  {  if(u  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  ==  0)  {  if(u  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    ==    0)    {    if(u  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	33	None	add
146	[BUG]  [BUGGY]  if(u  ==  0)  {  if(u  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  ==  0)  {  if(u  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    ==    0)    {    if(u  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	33	None	add
147	[BUG]  [BUGGY]  if(u  ==  0)  {  if(u!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  ==  0)  {  if(u!=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    ==    0)    {    if(u!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	33	None	add
148	[BUG]  [BUGGY]  if(u  ==  0)  {  if(u  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  ==  0)  {  if(u  >>  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    ==    0)    {    if(u  >>  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	33	None	add
149	[BUG]  [BUGGY]  if(v  ==  0)  {  int  v  >  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  ==  0)  {  int  v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  ==  0)  {  int  v  >  0)  {	  if(v    >    0)    {    int    v    >    0)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
150	[BUG]  [BUGGY]  if(v  ==  0)  {  int  v  =  0;  }  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  ==  0)  {  int  v  =  0;  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  ==  0)  {  int  v  =  0;  }	  if(v    >    0)    {    int    v    >    0)    {    	non-compiled	[CE]  while  expected	37	None	replace
151	[BUG]  [BUGGY]  if(t  <  0)  {  int  v  >  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  0)  {  int  v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  0)  {  int  v  >  0)  {	  if(v    >    0)    {    int    v    >    0)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
152	[BUG]  [BUGGY]  int  u  =(u  <  <  1)?  0  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(u  <  <  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(u  <  <  1)?  0  :  -(u/2)/*B3*/;	  int    u    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
153	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  1  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  1  :  -(u/2)/*B3*/;	  int    u    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
154	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u%2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u%2)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  0  :  -(u%2)/*B3*/;	  int    u    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
155	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
156	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  try  {  [Delete]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	try  {  [Delete]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
157	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nf)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nf)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	try  {  [Delete]  catch(NumberFormatException  nf)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
158	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
159	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  t  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =(v        -        u)/2;        t    =(v    -    u)/3;    t  =(v  -  u)/2;  t  =(v  -  u)/3;	  timeout    	compilable	timeout	81	1	add
160	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  t  =(v  -  u)/2;  t  =(v  -  u)/3;  timeout  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  t  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/3;    t  =(v  -  u)/2;  t  =(v  -  u)/3;	  timeout    	compilable	timeout	81	1	add
161	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  int  t  =(v  -  u)/2;  t  =(v  -  u)/3;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  int  t  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/3;    int  t  =(v  -  u)/2;  t  =(v  -  u)/3;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	81	None	add
162	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  0  :  -(a1&2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  0  :  -(a1&2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  0  :  -(a1&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	59	None	replace
163	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/  2;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/    2;    	non-compiled	[CE]  while  expected	105	None	replace
164	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/;    	non-compiled	[CE]  while  expected	121	None	replace
165	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/  2;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/    2;    	non-compiled	[CE]  while  expected	106	None	replace
166	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/  2;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/    2;    	non-compiled	[CE]  while  expected	106	None	replace
167	[BUG]  [BUGGY]  t  =(u  -  v)/2;  t  =(v  -  u)/1;  [CE]  while  expected  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(u  -  v)/2;  t  =(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(u  -  v)/2;  t  =(v  -  u)/1;	          t    =(v    -    u)/2;    t    =(v    -    u)/1;    timeout    	non-compiled	[CE]  while  expected	118	None	replace
168	[BUG]  [BUGGY]  if(v  >=  0)  {  if(v  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  >=  0)  {  if(v  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >=    0)    {    if(v  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	31	None	add
169	[BUG]  [BUGGY]  if(v  >=  0)  {  if(v  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  >=  0)  {  if(v  >>  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >=    0)    {    if(v  >>  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	31	None	add
170	[BUG]  [BUGGY]  if(v  >=  0)  {  if(v!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  >=  0)  {  if(v!=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >=    0)    {    if(v!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	31	None	add
171	[BUG]  [BUGGY]  if(v  >=  0)  {  if(v  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  >=  0)  {  if(v  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >=    0)    {    if(v  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	31	None	add
172	[BUG]  [BUGGY]  int  k  =(v  >=  1)?  u  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  >=  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  >=  1)?  u  :  -(u/2)/*B3*/;	  int    k    =(v    >=    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	63	None	replace
173	[BUG]  [BUGGY]  int  k  =(v  >>  1)?  u  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  >>  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  >>  1)?  u  :  -(u/2)/*B3*/;	  int    k    =(v    >=    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	63	None	replace
174	[BUG]  [BUGGY]  int  k  =(v  ==  1)?  u  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  ==  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  ==  1)?  u  :  -(u/2)/*B3*/;	  int    k    =(v    >=    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	63	None	replace
175	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  B3;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  B3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  B3;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    B3;    	non-compiled	[CE]  while  expected	54	None	replace
176	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  t);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  t);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  t);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	90	None	replace
177	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/  1;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/    1;    	non-compiled	[CE]  while  expected	101	None	replace
178	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	93	None	replace
179	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  numerator;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  numerator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  numerator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	93	None	replace
180	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	65	None	replace
181	[BUG]  [BUGGY]  if(v!=  0)  {  if(v!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v!=  0)  {  if(v!=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v!=    0)    {    if(v!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
182	[BUG]  [BUGGY]  if(v!=  0)  {  if(v  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v!=  0)  {  if(v  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v!=    0)    {    if(v  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
183	[BUG]  [BUGGY]  if(v!=  0)  {  if(v  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v!=  0)  {  if(v  >>  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v!=    0)    {    if(v  >>  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
184	[BUG]  [BUGGY]  if(v!=  0)  {  if(v  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v!=  0)  {  if(v  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v!=    0)    {    if(v  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
185	[BUG]  [BUGGY]  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	44	None	replace
186	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(u&2)/*B3*/;	  int    k    =(1    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
187	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B3;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(u/2)/*B3;	  int    k    =(1    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
188	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u%2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u%2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(u%2)/*B3*/;	  int    k    =(1    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
189	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u/2)/*B2*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  v  :  -(u/2)/*B2*/;	  int    k    =(u    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
190	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u/2)/*B4*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  v  :  -(u/2)/*B4*/;	  int    k    =(u    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
191	[BUG]  [BUGGY]  if(u  >  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  >  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u  >  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/2;    timeout    	non-compiled	[CE]  while  expected	22	None	replace
192	[BUG]  [BUGGY]  t  =  -(u  -  v)/2;  u  =  -(v  -  u)/2;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  -(u  -  v)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  -(u  -  v)/2;  u  =  -(v  -  u)/2;	          t    =    -(v    -    u)/2;    u    =    -(v    -    u)/2;    timeout    	non-compiled	[CE]  while  expected	116	None	replace
193	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  T  =(v  -  u)/2;  t  =(v  -  u)/1;  [CE]  cannot  find  symbol  T  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  T  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/1;    T  =(v  -  u)/2;  t  =(v  -  u)/1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	117	None	add
194	[BUG]  [BUGGY]  if(v  ==  0)  {  If(v  >=  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  ==  0)  {  If(v  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  ==  0)  {  If(v  >=  0)  {	  if(v    <    0)    {    If(v    <    0)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
195	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/  1;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/    1;    	non-compiled	[CE]  while  expected	102	None	replace
196	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  4;  [CE]  while  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  4;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  4;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/    1;    	non-compiled	[CE]  while  expected	102	None	replace
197	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  1)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	if(t  <  1)  {	  if(t    <    0)    {    if(t    <    0)    {    	compilable	timeout	17	1	replace
198	[BUG]  [BUGGY]  if(t  <  1)  {  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  1)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  1)  {	  if(t    <    0)    {    if(t    <    0)    {    	compilable	timeout	17	1	replace
199	[BUG]  [BUGGY]  t  =(v  -  u/2)/2  +  1;  [CE]  while  expected  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  u/2)/2  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u/2)/2  +  1;	  t    =(v    -    u/2)/2;    	non-compiled	[CE]  while  expected	10	None	replace
200	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator  +  1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator  +  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator;    	non-compiled	[CE]  ';'  expected	93	None	replace
201	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  Integer  v  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  Integer  v  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    Integer  v  =  -(v  -  u)/2;  t  =(v  -  u)/2;	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	26	None	add
202	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  (v  -  u)/2;  t  =(v  -  u)/2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  (v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    (v  -  u)/2;  t  =(v  -  u)/2;	  	non-compiled	[CE]  not  a  statement	26	None	add
203	[BUG]  [BUGGY]  if(v  >=  0)  {  while(v  >  0)  {  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  >=  0)  {  while(v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  >=  0)  {  while(v  >  0)  {	  if(v    >    0)    {    while(v    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
204	[BUG]  [BUGGY]  if(v  <  0)  {  while(v  >  0)  {  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  <  0)  {  while(v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  <  0)  {  while(v  >  0)  {	  if(v    >    0)    {    while(v    >    0)    {    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
205	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*C3*/;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*C3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*C3*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B2*/;    	non-compiled	[CE]  while  expected	97	None	replace
206	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u/2)/*B2*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u/2)/*B2*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(u/2)/*B2*/;	  int    k    =(v    <    <    1)?    u    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
207	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  0,  denominator);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  0,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  0,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
208	[BUG]  [BUGGY]  t  =(v  -  k)/2;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  k)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  k)/2;	  t    =(v    -    wholeNumber)/2;    	non-compiled	[CE]  while  expected	103	None	replace
209	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/  1;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/    1;    	non-compiled	[CE]  while  expected	101	None	replace
210	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  T  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [CE]  cannot  find  symbol  T  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  T  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    T  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	21	None	add
211	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  T  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [CE]  cannot  find  symbol  T  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  T  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    T  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	77	None	add
212	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(v  -  u)/2;  t  =  -(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    t  =  -(v  -  u)/2;  t  =  -(v  -  u);	  timeout    	compilable	timeout	77	1	add
213	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(v  -  u)/2;  t  =  -(v  -  u);  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(v  -  u)/2;  t  =  -(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    t  =  -(v  -  u)/2;  t  =  -(v  -  u);	  timeout    	compilable	timeout	77	1	add
214	[BUG]  [BUGGY]  if(u  <  0)  {  while(u  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  <  0)  {  while(u  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    <    0)    {    while(u  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	29	None	add
215	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  v  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  v  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
216	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  b  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  b  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
217	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	113	None	replace
218	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
219	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B4*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B4*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(u/2)/*B4*/;	  int    k    =(1    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
220	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B2*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B2*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(u/2)/*B2*/;	  int    k    =(1    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
221	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u/2)/*B4*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u/2)/*B4*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(u/2)/*B4*/;	  int    k    =(u    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
222	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =  -(v  -  u)/2;  t  =  -(V  -  u)/1;  [CE]  cannot  find  symbol  V  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =  -(v  -  u)/2;  t  =  -(V  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    t  =  -(v  -  u)/2;  t  =  -(V  -  u)/1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  V	24	None	add
223	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  T  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [CE]  cannot  find  symbol  T  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  T  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    T  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	24	None	add
224	[BUG]  [BUGGY]  int  v  =(v  <  <  1)?  u  :  -(v/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  v  =(v  <  <  1)?  u  :  -(v/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  v  =(v  <  <  1)?  u  :  -(v/2)/*B3*/;	  int    k    =(u    <    <    1)?    v    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
225	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  b  :  -(v/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  b  :  -(v/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  b  :  -(v/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	108	None	replace
226	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  2  +  1;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  2  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  2  +  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/    2;    	non-compiled	[CE]  while  expected	104	None	replace
227	[BUG]  [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);	  t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	43	None	replace
228	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1/2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	59	None	replace
229	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t!=  1)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	if(t!=  1)  {	  if(t    <    0)    {    If(t    <    0)    {    	compilable	timeout	19	1	replace
230	[BUG]  [BUGGY]  if(t!=  1)  {  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t!=  1)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t!=  1)  {	  if(t    <    0)    {    If(t    <    0)    {    	compilable	timeout	19	1	replace
231	[BUG]  [BUGGY]  if(u  ==  0)  {  If(v  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  ==  0)  {  If(v  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u  ==  0)  {  If(v  ==  0)  {	  if(v    ==    0)    {    If(v    ==    0)    {    	non-compiled	[CE]  ';'  expected	89	None	replace
232	[BUG]  [BUGGY]  if(t  >=  0)  {  while(t!=  0)  {  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  >=  0)  {  while(t!=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  >=  0)  {  while(t!=  0)  {	  if(t    <    0)    {    while(t    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
233	[BUG]  [BUGGY]  if(t  >=  0)  {  while(t  <  0)  {  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  >=  0)  {  while(t  <  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  >=  0)  {  while(t  <  0)  {	  if(t    <    0)    {    while(t    <    0)    {    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
234	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  1);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  1);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
235	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  2);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  2);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
236	[BUG]  [BUGGY]  t  =  -(u  -  3)/2;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  -(u  -  3)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  -(u  -  3)/2;	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/3;    timeout    	non-compiled	[CE]  while  expected	78	None	replace
237	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*C3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*C3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*C3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B4*/;    	non-compiled	[CE]  while  expected	91	None	replace
238	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  T  =(v  -  u)/2;  t  =(v  -  u)/3;  [CE]  cannot  find  symbol  T  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  T  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/3;    T  =(v  -  u)/2;  t  =(v  -  u)/3;	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	81	None	add
239	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	64	None	replace
240	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0,  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
241	[BUG]  [BUGGY]  if(v  >=  0)  {  int  v  =  0;  }  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  >=  0)  {  int  v  =  0;  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  >=  0)  {  int  v  =  0;  }	  if(v    >    0)    {    int    v    >    0)    {    	non-compiled	[CE]  while  expected	37	None	replace
242	[BUG]  [BUGGY]  if(v  >=  0)  {  int  v  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(v  >=  0)  {  int  v  >  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  >=  0)  {  int  v  >  0)  {	  if(v    >    0)    {    int    v    >    0)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
243	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/;    	non-compiled	[CE]  while  expected	121	None	replace
244	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/;    	non-compiled	[CE]  while  expected	121	None	replace
245	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
246	[BUG]  [BUGGY]  MutableToInteger  t  =(MutableToInteger)super.null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  MutableToInteger  t  =(MutableToInteger)super.null;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	MutableToInteger  t  =(MutableToInteger)super.null;	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
247	[BUG]  [BUGGY]  MutableToInteger  u  =  new  MutableToInteger(t,  v);  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  MutableToInteger  u  =  new  MutableToInteger(t,  v);  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	MutableToInteger  u  =  new  MutableToInteger(t,  v);	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  while  expected	83	None	replace
248	[BUG]  [BUGGY]  MutableToInteger  u  =  new  MutableToInteger(v);  [CE]  while  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  MutableToInteger  u  =  new  MutableToInteger(v);  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	MutableToInteger  u  =  new  MutableToInteger(v);	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  while  expected	83	None	replace
249	[BUG]  [BUGGY]  if(u  ==  0)  {  if(u  {  0)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  ==  0)  {  if(u  {  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u    ==    0)    {    if(u  {  0)  {	  timeout    	non-compiled	[CE]  ')'  expected	33	None	add
250	[BUG]  [BUGGY]  t  =  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	  t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	44	None	replace
251	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	8	None	replace
252	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator  +  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator  +  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  ';'  expected	8	None	replace
253	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(V  -  u)/2;  [CE]  cannot  find  symbol  V  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(V  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  u  =  -(V  -  u)/2;	  timeout    	non-compiled	[CE]  cannot  find  symbol  V	115	None	add
254	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  u  =  -(v  -  u)/3;	  timeout    	compilable	timeout	115	1	add
255	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/3;  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  u  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  u  =  -(v  -  u)/3;	  timeout    	compilable	timeout	115	1	add
256	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1/2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(a1/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    v    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	58	None	replace
257	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  -1  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  -1  :  -(u/2)/*B3*/;	  int    u    =(v    <    <    1)?    u    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
258	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/  2;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/    2;    	non-compiled	[CE]  while  expected	105	None	replace
259	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
260	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
261	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(u&2)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(u&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(u&2)/*B3*/;	  int    k    =((    v&1)    ==    1)?    -1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  while  expected	124	None	replace
262	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(u&1)/*B3*/;	  int    k    =(v    <    <    1)?    u    :    -(v&1)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	107	None	replace
263	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(v&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(v&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  v  :  -(v&1)/*B3*/;	  int    k    =(v    <    <    1)?    u    :    -(v&1)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	107	None	replace
264	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  while  expected	109	None	replace
265	[BUG]  [BUGGY]  if(t  ==  0)  {  t  =(v  -  u)/2;  (v  -  u)/2;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  t  =(v  -  u)/2;  (v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  t  =(v  -  u)/2;  (v  -  u)/2;  }	          t    =(v    -    u)/2;    (v    -    u)/2;    	non-compiled	[CE]  not  a  statement	70	None	replace
266	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/  2;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/    2;    	non-compiled	[CE]  while  expected	106	None	replace
267	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/  2;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/    2;    	non-compiled	[CE]  while  expected	106	None	replace
268	[BUG]  [BUGGY]  int  k  =(1  <  <  3)?  1  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  3)?  1  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  3)?  1  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	127	None	replace
269	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	11	None	replace
270	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  0,  denominator);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  0,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  0,  denominator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
271	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u/2)/*B3*/,  denominator;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  0  :  -(u/2)/*B3*/,  denominator;	  int    u    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
272	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u&2)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  0  :  -(u&2)/*B3*/;	  int    u    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
273	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
274	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	76	None	replace
275	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	28	None	replace
276	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  B3  +  1;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  B3  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  B3  +  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    B3;    	non-compiled	[CE]  while  expected	54	None	replace
277	[BUG]  [BUGGY]  if(t  ==  0)  {  If(t  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  If(t  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    ==    0)    {    If(t  ==  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
278	[BUG]  [BUGGY]  if(t&1  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t&1  ==  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t&1  ==  0)  {	  if(v    >    0)    {    if(v    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	35	None	replace
279	[BUG]  [BUGGY]  if(t&1  >=  0)  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t&1  >=  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t&1  >=  0)  {	  if(v    >    0)    {    if(v    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	35	None	replace
280	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a/2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  -1  :  -(a/2)/*B3*/);	  int    k    =((    a&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	125	None	replace
281	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a2/2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a2/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  -1  :  -(a2/2)/*B3*/);	  int    k    =((    a&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	125	None	replace
282	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&1)/*B3*/;	  int    k    =((    v&1)    ==    1)?    -1    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	92	None	replace
283	[BUG]  [BUGGY]  if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  }  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  }	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/1;    timeout    	non-compiled	[CE]  while  expected	25	None	replace
284	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  v  :  -(v&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  v  :  -(v&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  v  :  -(v&2)/*B3*/;	  int    k    =(u    <    <    1)?    v    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
285	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	93	None	replace
286	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  denominator;  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	93	None	replace
287	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator;  [CE]  while  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	93	None	replace
288	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  2  +  1;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  2  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  2  +  1;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	53	None	replace
289	[BUG]  [BUGGY]  int  v  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  v  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  v  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
290	[BUG]  [BUGGY]  int  v  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  v  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  v  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
291	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }	  timeout    	compilable	timeout	21	1	add
292	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }	  timeout    	compilable	timeout	21	1	add
293	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u)/2;  }	  timeout    	compilable	timeout	21	1	add
294	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u)/2;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u)/2;  }	  timeout    	compilable	timeout	21	1	add
295	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u);  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u);  }	  timeout    	compilable	timeout	21	1	add
296	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u);  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u);  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  t  =  -(v  -  u);  }	  timeout    	compilable	timeout	21	1	add
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  return  -1;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  return  -1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	21	9	add
298	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  return  -1;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;  if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  return  -1;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/2;    if(v  >=  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  }  else  {  return  -1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	21	9	add
299	[BUG]  [BUGGY]  t  =  ((  a&1)  ==  1)?  v  :  -(a&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  ((  a&1)  ==  1)?  v  :  -(a&2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  a&1)  ==  1)?  v  :  -(a&2)/*B3*/,  denominator);	  t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	43	None	replace
300	[BUG]  [BUGGY]  if(t  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  while  expected	83	None	replace
301	[BUG]  [BUGGY]  while(t!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  while(t!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	while(t!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  while  expected	83	None	replace
302	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  while  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	aughtInvalidArgumentException( " ");	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  while  expected	83	None	replace
303	[BUG]  [BUGGY]  if(t  <  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  <  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  <  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(u    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
304	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/;	  int    k    =((    v&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	66	None	replace
305	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  if(v  >  u)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    if(v  >  u)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }	  timeout    	compilable	timeout	77	1	add
306	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  if(v  >  u)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  if(v  >  u)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    if(v  >  u)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }	  timeout    	compilable	timeout	77	1	add
307	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  u  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	77	1	add
308	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  u  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  timeout  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  u  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	77	1	add
309	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(V  -  u)/2;  t  =  -(v  -  u)/3;  [CE]  cannot  find  symbol  V  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;  t  =  -(V  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/3;    t  =  -(V  -  u)/2;  t  =  -(v  -  u)/3;	  timeout    	non-compiled	[CE]  cannot  find  symbol  V	77	None	add
310	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	95	None	replace
311	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	95	None	replace
312	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	95	None	replace
313	[BUG]  [BUGGY]  if(t  >>  0)  {  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  >>  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  >>  0)  {	  if(t    <    0)    {    If(t    <    0)    {    	non-compiled	[CE]  incompatible  types	19	None	replace
314	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(V  -  u)/2;  t  =(v  -  u)/2;  [CE]  cannot  find  symbol  V  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  t  =  -(V  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    t  =  -(V  -  u)/2;  t  =(v  -  u)/2;	  	non-compiled	[CE]  cannot  find  symbol  V	26	None	add
315	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  u  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	timeout	26	1	add
316	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  u  =  -(v  -  u)/2;  t  =(v  -  u)/2;  timeout  [FE]      AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =(v  -  u)/2;  u  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	timeout	26	1	add
317	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	7	None	replace
318	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	8	None	replace
319	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(a1&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(a1&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(a1&1)/*B3*/;	  int    k    =(u    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
320	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(a1&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(a1&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(a1&2)/*B3*/;	  int    k    =(u    <    <    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
321	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/  2;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/  2;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	55	None	replace
322	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  2  +  1;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  2  +  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  2  +  1;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/    2;    	non-compiled	[CE]  while  expected	105	None	replace
323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  u  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    u  =(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	67	9	add
324	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  u  =(v  -  u)/2;  t  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  u  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    u  =(v  -  u)/2;  t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	67	9	add
325	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;  t  =(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u);	  	compilable	timeout	67	1	add
326	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;  t  =(v  -  u);  timeout  [FE]      AssertionFailedError    [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u)/2;  t  =(v  -  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/2;    t  =(v  -  u)/2;  t  =(v  -  u);	  	compilable	timeout	67	1	add
327	[BUG]  [BUGGY]  t  =(v  -  m)/2;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  m)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  m)/2;	  t    =(v    -    wholeNumber)/2;    	non-compiled	[CE]  while  expected	103	None	replace
328	[BUG]  [BUGGY]  t  =(v  -  w)/2;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  w)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  w)/2;	  t    =(v    -    wholeNumber)/2;    	non-compiled	[CE]  while  expected	103	None	replace
329	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  4;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  4;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  4;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    4;    	non-compiled	[CE]  while  expected	87	None	replace
330	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(u&1)/*B3*/;	  int    k    =(1    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
331	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(a1&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(a1&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(a1&1)/*B3*/;	  int    k    =(1    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
332	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(wholeNumber&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(wholeNumber&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(wholeNumber&1)/*B3*/;	  int    k    =(v    <    <    1)?    u    :    -(v&1)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	107	None	replace
333	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B4*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B4*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B4*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B4*/;    	non-compiled	[CE]  while  expected	98	None	replace
334	[BUG]  [BUGGY]  if(t  ==  0)  {  if(t  {  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  if(t  {  0)  {  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    ==    0)    {    if(t  {  0)  {	  timeout    	non-compiled	[CE]  ')'  expected	3	None	add
335	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denom);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denom);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denom);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  ';'  expected	12	None	replace
336	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denom);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denom);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denom);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  ';'  expected	12	None	replace
337	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
338	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -1  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -1  -(u/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -1  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
339	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/;    	non-compiled	[CE]  while  expected	121	None	replace
340	[BUG]  [BUGGY]  t  =  -(u  -  v)/2;  t  =  -(v  -  u)/3;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =  -(u  -  v)/2;  t  =  -(v  -  u)/3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  -(u  -  v)/2;  t  =  -(v  -  u)/3;	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/3;    timeout    	non-compiled	[CE]  while  expected	78	None	replace
341	[BUG]  [BUGGY]  if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {  t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  }	          t    =    -(v    -    u)/2;    t    =    -(v    -    u)/3;    timeout    	non-compiled	[CE]  while  expected	78	None	replace
342	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	11	None	replace
343	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	11	None	replace
344	[BUG]  [BUGGY]  t  =(v  -  u)/  1;  [CE]  while  expected  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  u)/  1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u)/  1;	  t    =(v    -    u)/2    +    1;    	non-compiled	[CE]  while  expected	79	None	replace
345	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  while  expected	120	None	replace
346	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(a1&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(a1&2)/*B3*/;    	non-compiled	[CE]  while  expected	110	None	replace
347	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B4*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B4*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B4*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B4*/;    	non-compiled	[CE]  while  expected	91	None	replace
348	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B4*/;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B4*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B4*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B4*/;    	non-compiled	[CE]  while  expected	91	None	replace
349	[BUG]  [BUGGY]  t  =(v  -  u  *  2)/2;  [CE]  while  expected  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  u  *  2)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u  *  2)/2;	  t    =(v    -    u    +    1)/2;    	non-compiled	[CE]  while  expected	123	None	replace
350	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -1  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -1  -(u/2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -1  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	76	None	replace
351	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B2*/;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B2*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B2*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B2*/;    	non-compiled	[CE]  while  expected	97	None	replace
352	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B2*/;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B2*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B2*/;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B2*/;    	non-compiled	[CE]  while  expected	97	None	replace
353	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);	  int    k    =((    v&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	126	None	replace
354	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  t  :  -(u/2)/*B3*/;	  int    u    =(v    <    <    1)?    u    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
355	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  u  :  -(a1&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  u  :  -(a1&1)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  u  :  -(a1&1)/*B3*/;	  int    u    =(v    <    <    1)?    u    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  u  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	compilable	  [FE]  AssertionFailedError  	24	9	add
357	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  u  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  u  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    u  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	compilable	  [FE]  AssertionFailedError  	24	9	add
358	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =  -(V  -  u)/2;  t  =  -(v  -  u)/1;  [CE]  cannot  find  symbol  V  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;  t  =  -(V  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        t    =    -(v    -    u)/1;    t  =  -(V  -  u)/2;  t  =  -(v  -  u)/1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  V	24	None	add
359	[BUG]  [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(V  -  u)/2;  u  =  -(v  -  u)/2;  [CE]  cannot  find  symbol  V  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;  t  =  -(V  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =        -(v        -        u)/2;        u    =    -(v    -    u)/2;    t  =  -(V  -  u)/2;  u  =  -(v  -  u)/2;	  timeout    	non-compiled	[CE]  cannot  find  symbol  V	115	None	add
360	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  u);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  u);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	90	None	replace
361	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  v);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	90	None	replace
362	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(a1&2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(a1&2)/*B3*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(a1&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	59	None	replace
363	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  if(v  -  u)/2;  t  =(v  -  u)/3;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/3;  if(v  -  u)/2;  t  =(v  -  u)/3;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/3;    if(v  -  u)/2;  t  =(v  -  u)/3;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	81	None	add
364	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/  2;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/    1;    	non-compiled	[CE]  while  expected	101	None	replace
365	[BUG]  [BUGGY]  if(u  >  0)  {  t  =(v  -  u)/2;  (v  -  u)/2;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  if(u  >  0)  {  t  =(v  -  u)/2;  (v  -  u)/2;  }  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u  >  0)  {  t  =(v  -  u)/2;  (v  -  u)/2;  }	          t    =(v    -    u)/2;    (v    -    u)/2;    	non-compiled	[CE]  not  a  statement	70	None	replace
366	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  1  :  -(v&2)/*B3*/;	  int    k    =((    v&1)    ==    1)?    -1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  while  expected	124	None	replace
367	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  B3;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  B3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  B3;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    B3;    	non-compiled	[CE]  while  expected	54	None	replace
368	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  B3;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  B3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  B3;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    B3;    	non-compiled	[CE]  while  expected	54	None	replace
369	[BUG]  [BUGGY]  int  v  =(v  <  <  1)?  v  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  v  =(v  <  <  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  v  =(v  <  <  1)?  v  :  -(u/2)/*B3*/;	  int    k    =(v    <    <    1)?    v    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	108	None	replace
370	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B2*/);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B2*/);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B2*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B2*/);    	non-compiled	[CE]  ';'  expected	96	None	replace
371	[BUG]  [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  if(v  -  u)/2;  t  =(v  -  u)/1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]          t    =(v    -    u)/2;    t  =(v  -  u)/1;  if(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	                t        =(v        -        u)/2;        t    =(v    -    u)/1;    if(v  -  u)/2;  t  =(v  -  u)/1;	  timeout    	non-compiled	[CE]  illegal  start  of  expression	117	None	add
372	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(a1&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(a1&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(a1&1)/*B3*/;	  int    k    =(u    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
373	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(v&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(v&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(v&1)/*B3*/;	  int    k    =(u    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
374	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(a1&2)/  2;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(a1&2)/  2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(a1&2)/  2;	  int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/    2;    	non-compiled	[CE]  while  expected	106	None	replace
375	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  u);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  u);  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  u);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	86	None	replace
376	[BUG]  [BUGGY]  t  =(u  -  u/2)/2;  [CE]  while  expected  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(u  -  u/2)/2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(u  -  u/2)/2;	  t    =(v    -    u/2)/2;    	non-compiled	[CE]  while  expected	10	None	replace
377	[BUG]  [BUGGY]  int  k  =(v  >  1)?  u  :  -(v/2)/*B3*/;  [CE]  while  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  >  1)?  u  :  -(v/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  >  1)?  u  :  -(v/2)/*B3*/;	  int    k    =(v    >=    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	63	None	replace
378	[BUG]  [BUGGY]  int  k  =(v  >=  1)?  v  :  -(v/2)/*B3*/;  [CE]  while  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  >=  1)?  v  :  -(v/2)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  >=  1)?  v  :  -(v/2)/*B3*/;	  int    k    =(v    >=    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	63	None	replace
379	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  while  expected	109	None	replace
380	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denominator;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	28	None	replace
381	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  while  expected	28	None	replace
382	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  3;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  3;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    3;    	non-compiled	[CE]  while  expected	88	None	replace
383	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  3;  [CE]  while  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  3;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  3;	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    3;    	non-compiled	[CE]  while  expected	88	None	replace
384	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  1  :  -(u&1)/*B3*/;	  int    k    =(v    <    <    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	127	None	replace
385	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(a1&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(a1&1)/*B3*/;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  1  :  -(a1&1)/*B3*/;	  int    k    =(v    <    <    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	127	None	replace
386	[BUG]  [BUGGY]  t  =(v  -  u)//2;  [CE]  while  expected  [FE]          AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  t  =(v  -  u)//2;  [BUGGY]      if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u)//2;	          t    =(v    -    u)/2;    int    t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	69	None	replace
387	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(a1&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(a1&1)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  0  :  -(a1&1)/*B3*/;	  int    u    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
388	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }        [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u&1)/*B3*/;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  0  :  -(u&1)/*B3*/;	  int    u    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
