bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.abs(u  +  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.abs(u  +  1);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
2	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.abs(u  +  1,  v);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.abs(u  +  1,  v);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
3	[BUG]  [BUGGY]  int  v  =  Math.abs(u  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.abs(u  -  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.abs(u  -  1);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
4	[BUG]  [BUGGY]  if(u>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [CE]  cannot  find  symbol  k  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }	  if(u>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    }    	non-compiled	[CE]  cannot  find  symbol  k	6	None	replace
5	[BUG]  [BUGGY]  if(v>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [CE]  cannot  find  symbol  k  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(v>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(v>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }	  if(u>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    }    	non-compiled	[CE]  cannot  find  symbol  k	6	None	replace
6	[BUG]  [BUGGY]  if(u>1  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [CE]  cannot  find  symbol  k  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>1  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>1  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }	  if(u>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    }    	non-compiled	[CE]  cannot  find  symbol  k	6	None	replace
7	[BUG]  [BUGGY]  if(u>0)  {  u=-v;  }  [CE]  cannot  find  symbol  k  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0)  {  u=-v;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0)  {  u=-v;  }	  if(v>0)    {    u=-v;    }    	non-compiled	[CE]  cannot  find  symbol  k	9	None	replace
8	[BUG]  [BUGGY]  if(v>0)  {  u=-u;  }  [CE]  cannot  find  symbol  k  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(v>0)  {  u=-u;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(v>0)  {  u=-u;  }	  if(v>0)    {    u=-v;    }    	non-compiled	[CE]  cannot  find  symbol  k	9	None	replace
9	[BUG]  [BUGGY]  if(v>1)  {  u=-v;  }  [CE]  cannot  find  symbol  k  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(v>1)  {  u=-v;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(v>1)  {  u=-v;  }	  if(v>0)    {    u=-v;    }    	non-compiled	[CE]  cannot  find  symbol  k	9	None	replace
10	[BUG]  [BUGGY]  int  v  =(int)Math.floor(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.floor(u,  v);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =(int)Math.floor(u,  v);	      int    v    =(int)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
11	[BUG]  [BUGGY]  int  v  =(int)Math.floor(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.floor(u  +  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =(int)Math.floor(u  +  1);	      int    v    =(int)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
12	[BUG]  [BUGGY]  int  v  =(int)Math.floor(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.floor(u  +  1,  v);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =(int)Math.floor(u  +  1,  v);	      int    v    =(int)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
13	[BUG]  [BUGGY]  if(u>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [CE]  cannot  find  symbol  k  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;	  if(v>0)    {    u=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	10	None	replace
14	[BUG]  [BUGGY]  if(u>0)  {  u=-v;  }  //  make  v  negative  int  k=0;  [CE]  cannot  find  symbol  k  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0)  {  u=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0)  {  u=-v;  }  //  make  v  negative  int  k=0;	  if(v>0)    {    u=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	10	None	replace
15	[BUG]  [BUGGY]  int  v  =  Math.min(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(u,  v  +  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.min(u,  v  +  1);	      int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
16	[BUG]  [BUGGY]  int  v  =  Math.min(u,  v  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(u,  v  -  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.min(u,  v  -  1);	      int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
17	[BUG]  [BUGGY]  int  v  =  Math.min(u,  0);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(u,  0);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.min(u,  0);	      int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
18	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v=(int)Math.abs(u  +  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v=(int)Math.abs(u  +  1);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
19	[BUG]  [BUGGY]  int  v=(int)Math.abs(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v=(int)Math.abs(u,  v);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v=(int)Math.abs(u,  v);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
20	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v=(int)Math.ceil(u,  v);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v=(int)Math.ceil(u,  v);	      int    v=(int)Math.ceil(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
21	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v=(int)Math.ceil(u  +  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v=(int)Math.ceil(u  +  1);	      int    v=(int)Math.ceil(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
22	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v=(int)Math.ceil(u  +  1,  v);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v=(int)Math.ceil(u  +  1,  v);	      int    v=(int)Math.ceil(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
23	[BUG]  [BUGGY]  if(u>0  ||  v>-1)  {  v=-v;  }  [CE]  cannot  find  symbol  k  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0  ||  v>-1)  {  v=-v;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0  ||  v>-1)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    	non-compiled	[CE]  cannot  find  symbol  k	4	None	replace
24	[BUG]  [BUGGY]  if(u>0  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [CE]  cannot  find  symbol  k  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;	  if(u>0    ||    v>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	7	None	replace
25	[BUG]  [BUGGY]  if(u>1  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [CE]  cannot  find  symbol  k  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>1  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>1  ||  v>1)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;	  if(u>0    ||    v>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	7	None	replace
26	[BUG]  [BUGGY]  if(u>0  ||  v>1)  {  v=-v;  }  [CE]  cannot  find  symbol  k  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0  ||  v>1)  {  v=-v;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0  ||  v>1)  {  v=-v;  }	  if(u>0    ||    v>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	7	None	replace
27	[BUG]  [BUGGY]  if(v>0)  {  v=-v;  }  [CE]  cannot  find  symbol  k  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(v>0)  {  v=-v;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(v>0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    	non-compiled	[CE]  cannot  find  symbol  k	4	None	replace
28	[BUG]  [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  }  [CE]  cannot  find  symbol  k  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0  ||  v>0)  {  v=-v;  }	  if(u>0    ||    v>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	7	None	replace
29	[BUG]  [BUGGY]  if(u>1  ||  v>1)  {  v=-v;  }  [CE]  cannot  find  symbol  k  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>1  ||  v>1)  {  v=-v;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>1  ||  v>1)  {  v=-v;  }	  if(u>0    ||    v>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	7	None	replace
30	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  2);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.abs(u  +  2);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.abs(u  +  2);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
31	[BUG]  [BUGGY]  int  v  =  Math.min(u,  negative);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(u,  negative);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.min(u,  negative);	      int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
32	[BUG]  [BUGGY]  if(v>1)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [CE]  cannot  find  symbol  k  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(v>1)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(v>1)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;	  if(v>0)    {    u=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	10	None	replace
33	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  float  v=(float)Math.ceil(u);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	float  v=(float)Math.ceil(u);	      int    v=(int)Math.ceil(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
34	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v=(int)Math.abs(u  -  1);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v=(int)Math.abs(u  -  1);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
35	[BUG]  [BUGGY]  int  v  =  Math.min(Math.min(u,  v));  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(Math.min(u,  v));  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.min(Math.min(u,  v));	      int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
36	[BUG]  [BUGGY]  int  v  =  Math.min(um(u,  v));  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(um(u,  v));  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	int  v  =  Math.min(um(u,  v));	      int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
37	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  a1=0;  }  [CE]  cannot  find  symbol  k  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  a1=0;  }  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  a1=0;  }	  if(u>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    }    	non-compiled	[CE]  cannot  find  symbol  k	6	None	replace
38	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  a1=0;  [CE]  cannot  find  symbol  k  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative    [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  a1=0;  [BUGGY]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	579	581	1	replace	if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  a1=0;	  if(u>0)    {    v=-v;    }    //    make    v    negative    //    B1.    [Find    power    of    2]    int    k=0;    	non-compiled	[CE]  cannot  find  symbol  k	5	None	replace
