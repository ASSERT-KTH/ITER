bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  4  +  1;	  int    u    =(int)Math.rint((    u&1)%    4;    	non-compiled	[CE]  ')'  expected	53	None	replace
2	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    31)    {    u/=2;    v/=2;    }    while(k  <  31)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	104	1	add
3	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  31)  {  u/=2;  v/=2;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    }    while(k  <  31)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	104	1	add
4	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  int  while(k  <  31)  {  u/=2;  v/=2;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  int  while(k  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    }    int  while(k  <  31)  {  u/=2;  v/=2;  }	  timeout    	non-compiled	[CE]  not  a  statement	104	None	add
5	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  32)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    31)    {    u/=2;    v/=2;    }    while(k  <  32)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	104	1	add
6	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  32)  {  u/=2;  v/=2;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  32)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    }    while(k  <  32)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	104	1	add
7	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  31)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    31)    {    u/=2;    v/=2;    }    while(k  <  31)  {  u/=1;  v/=2;  }	  timeout    	compilable	timeout	104	1	add
8	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  31)  {  u/=1;  v/=2;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  while(k  <  31)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    }    while(k  <  31)  {  u/=1;  v/=2;  }	  timeout    	compilable	timeout	104	1	add
9	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v  <  0)  {  u/=2;  v/=2;  }	  while(k    <    0)    {    u/=2;    v/=2;    }    	compilable	timeout	78	1	replace
10	[BUG]  [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  0)  {  u/=2;  v/=2;  }	  while(k    <    0)    {    u/=2;    v/=2;    }    	compilable	timeout	78	1	replace
11	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  1)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  <  1)  {  u/=2;  v/=2;  }	  while(k    <    0)    {    u/=2;    v/=2;    }    	compilable	timeout	78	1	replace
12	[BUG]  [BUGGY]  while(k  <  1)  {  u/=2;  v/=2;  }  timeout  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  1)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  1)  {  u/=2;  v/=2;  }	  while(k    <    0)    {    u/=2;    v/=2;    }    	compilable	timeout	78	1	replace
13	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  >=  0)  {  u/=2;  v/=2;  }	  while(k    <    0)    {    u/=2;    v/=2;    }    	compilable	timeout	78	1	replace
14	[BUG]  [BUGGY]  while(k  >=  0)  {  u/=2;  v/=2;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  >=  0)  {  u/=2;  v/=2;  }	  while(k    <    0)    {    u/=2;    v/=2;    }    	compilable	timeout	78	1	replace
15	[BUG]  [BUGGY]  while(k  <  =  0)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  =  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  =  0)  {  u/=2;  v/=2;  }	  while(k    <    0)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
16	[BUG]  [BUGGY]  if(t  ==  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  ==  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  ==  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    >    0)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
17	[BUG]  [BUGGY]  if(t  <  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  <  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  <  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    >    0)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
18	[BUG]  [BUGGY]  if(t  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
19	[BUG]  [BUGGY]  if(t  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
20	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  u/=2;  v/=2;  k++;  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	u/=2;    v/=2;    k++;    u/=2;  v/=2;  k++;	  	compilable	timeout	57	1	add
21	[BUG]  [BUGGY]  u/=2;  v/=2;  k++;  u/=2;  v/=2;  k++;  timeout  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  u/=2;  v/=2;  k++;  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	u/=2;    v/=2;    k++;    u/=2;  v/=2;  k++;	  	compilable	timeout	57	1	add
22	[BUG]  [BUGGY]  u/=2;  v/=2;  k++;  int  u/=2;  v/=2;  k++;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  u/=2;  v/=2;  k++;  int  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	u/=2;    v/=2;    k++;    int  u/=2;  v/=2;  k++;	  	non-compiled	[CE]  ';'  expected	57	None	add
23	[BUG]  [BUGGY]  u/=2;  v/=2;  k++;  for(int  u/=2;  v/=2;  k++;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  u/=2;  v/=2;  k++;  for(int  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	u/=2;    v/=2;    k++;    for(int  u/=2;  v/=2;  k++;	  	non-compiled	[CE]  ';'  expected	57	None	add
24	[BUG]  [BUGGY]  u/=2;  v/=2;  k++;  U/=2;  v/=2;  k++;  [CE]  cannot  find  symbol  U  [FE]          AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  u/=2;  v/=2;  k++;  U/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	u/=2;    v/=2;    k++;    U/=2;  v/=2;  k++;	  	non-compiled	[CE]  cannot  find  symbol  U	57	None	add
25	[BUG]  [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  >=  31)  {  u/=2;  v/=2;  k++;	  while(k    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
26	[BUG]  [BUGGY]  if(u  ==  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  ==  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  ==  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  if(t    ==    31)    {    while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
27	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	80	None	replace
28	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	80	None	replace
29	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  k);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  :  expected	91	None	replace
30	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  :  expected	91	None	replace
31	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  ';'  expected	91	None	replace
32	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	115	None	replace
33	[BUG]  [BUGGY]  while(u  <  31  ||  v  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
34	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -1  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -1  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -1  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	29	None	replace
35	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
36	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  4);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  4);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
37	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  3);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
38	[BUG]  [BUGGY]  while(u  <  31  ||  v  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  <  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
39	[BUG]  [BUGGY]  while(v  <  31  &&  u  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  u  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  u  <  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
40	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	compilable	timeout	105	1	replace
41	[BUG]  [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	compilable	timeout	105	1	replace
42	[BUG]  [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  }  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  t	105	None	replace
43	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	compilable	timeout	105	1	replace
44	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	compilable	timeout	105	1	replace
45	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	26	None	replace
46	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	26	None	replace
47	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	18	None	replace
48	[BUG]  [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  0)  {  u/=2;  v/=2;  k++;	  while(v    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  <  31)  {  u/=2;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
50	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  <  31)  {  u/=2;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
51	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  32)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  <  32)  {  u/=2;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
52	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  32)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  32)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  <  32)  {  u/=2;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
53	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  <  31)  {  u/=1;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
54	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  <  31)  {  u/=1;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
55	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v,  k  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v,  k  +  1);	  int    u    =(int)Math.floor(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	38	None	replace
56	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v,  k-1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v,  k-1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v,  k-1);	  int    u    =(int)Math.floor(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	38	None	replace
57	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(u,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(u,  k);	  int    u    =(int)Math.floor(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	38	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  while(k  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    0)    {    u/=2;    v/=2;    }    while(k  <  0)  {  u/=2;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	77	1	add
59	[BUG]  [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  while(k  <  0)  {  u/=2;  v/=2;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  while(k  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    0)    {    u/=2;    v/=2;    }    while(k  <  0)  {  u/=2;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	77	1	add
60	[BUG]  [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  int  k  <  0)  {  u/=2;  v/=2;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  int  k  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    0)    {    u/=2;    v/=2;    }    int  k  <  0)  {  u/=2;  v/=2;  }	  	non-compiled	[CE]  ';'  expected	77	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  while(k  <  0)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    0)    {    u/=2;    v/=2;    }    while(k  <  0)  {  u/=1;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	77	1	add
62	[BUG]  [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  while(k  <  0)  {  u/=1;  v/=2;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  while(k  <  0)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    0)    {    u/=2;    v/=2;    }    while(k  <  0)  {  u/=1;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	77	1	add
63	[BUG]  [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  While(k  <  0)  {  u/=2;  v/=2;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  While(k  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    0)    {    u/=2;    v/=2;    }    While(k  <  0)  {  u/=2;  v/=2;  }	  	non-compiled	[CE]  ';'  expected	77	None	add
64	[BUG]  [BUGGY]  while(u  <  =  k)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  =  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  =  k)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
65	[BUG]  [BUGGY]  while(v  <  31  ||  u  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  u  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  ||  u  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
66	[BUG]  [BUGGY]  while(u  <  31  ||  v  >  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  >  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
67	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	71	None	replace
68	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	71	None	replace
69	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	71	None	replace
70	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v/2)/*B3*/);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -(v/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -(v&2)/*B3*/);    	non-compiled	[CE]  :  expected	108	None	replace
71	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  3;	  int    u    =(int)Math.rint((    u&1)%    3;    	non-compiled	[CE]  ')'  expected	70	None	replace
72	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  3);	  int    u    =(int)Math.rint((    u&1)%    3;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	70	None	replace
73	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  4);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  4);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  4);	  int    u    =(int)Math.rint((    u&1)+    4);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
74	[BUG]  [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	98	None	replace
75	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  k  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  k  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  k  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
76	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
77	[BUG]  [BUGGY]  int  u  =  Math.min(k,  w);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(k,  w);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(k,  w);	  int    u    =    Math.min(w,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	34	None	replace
78	[BUG]  [BUGGY]  int  u  =  Math.min(w,  k,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(w,  k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(w,  k,  v);	  int    u    =    Math.min(w,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	34	None	replace
79	[BUG]  [BUGGY]  while(u  >=  31  &&  v  <  =  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31  &&  v  <  =  0  &&  k  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
80	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	2	None	replace
81	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	2	None	replace
82	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	2	None	replace
83	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	17	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  while(k  <  u)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    u)    {    u/=2;    v/=2;    }    while(k  <  u)  {  u/=2;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
85	[BUG]  [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  while(k  <  u)  {  u/=2;  v/=2;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  while(k  <  u)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    u)    {    u/=2;    v/=2;    }    while(k  <  u)  {  u/=2;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
86	[BUG]  [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  int  k  <  u)  {  u/=2;  v/=2;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  int  k  <  u)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    u)    {    u/=2;    v/=2;    }    int  k  <  u)  {  u/=2;  v/=2;  }	  	non-compiled	[CE]  ';'  expected	23	None	add
87	[BUG]  [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  While(k  <  u)  {  u/=2;  v/=2;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  While(k  <  u)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    u)    {    u/=2;    v/=2;    }    While(k  <  u)  {  u/=2;  v/=2;  }	  	non-compiled	[CE]  ';'  expected	23	None	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  while(k  <  u)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    u)    {    u/=2;    v/=2;    }    while(k  <  u)  {  u/=1;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
89	[BUG]  [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  while(k  <  u)  {  u/=1;  v/=2;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  while(k  <  u)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    u)    {    u/=2;    v/=2;    }    while(k  <  u)  {  u/=1;  v/=2;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
90	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  }	  while(v    <    31    &&    u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
91	[BUG]  [BUGGY]  while(u  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;	  while(v    <    31    &&    u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
92	[BUG]  [BUGGY]  while(u  <  31  ||  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  >  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
93	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  =  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
94	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	59	None	replace
95	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  power;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  power;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  +  power;	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power;    	non-compiled	[CE]  ')'  expected	120	None	replace
96	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  1;	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	120	None	replace
97	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  4;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  4;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  4;	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	120	None	replace
98	[BUG]  [BUGGY]  String  u  =  Math.min(k,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  String  u  =  Math.min(k,  u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	String  u  =  Math.min(k,  u);	  char    u    =    Math.min(k,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	113	None	replace
99	[BUG]  [BUGGY]  char  u  =  Math.min(v,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =  Math.min(v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	char  u  =  Math.min(v,  k);	  char    u    =    Math.min(k,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	113	None	replace
100	[BUG]  [BUGGY]  char  u  =  Math.min(k,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =  Math.min(k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	char  u  =  Math.min(k,  v);	  char    u    =    Math.min(k,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	113	None	replace
101	[BUG]  [BUGGY]  Char  u  =  Math.min(k,  v);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  Char  u  =  Math.min(k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	Char  u  =  Math.min(k,  v);	  char    u    =    Math.min(k,    u);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
102	[BUG]  [BUGGY]  int  k=1;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k=1;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k=1;	          int    k=0;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	16	None	replace
103	[BUG]  [BUGGY]  int  k=2;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k=2;	          int    k=0;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	16	None	replace
104	[BUG]  [BUGGY]  char  k=0;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  k=0;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	char  k=0;	          int    k=0;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	16	None	replace
105	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	43	None	replace
106	[BUG]  [BUGGY]  int  u  =(int)Math.floor(k,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(k,  v);	  int    u    =(int)Math.floor(k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	40	None	replace
107	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.ceil(k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.ceil(k);	  int    u    =(int)Math.floor(k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	40	None	replace
108	[BUG]  [BUGGY]  while(k  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  =  0)  {  u/=2;  v/=2;  k++;	  while(k    <    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
109	[BUG]  [BUGGY]  while(u  >  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >  31)  {  u/=2;  v/=2;  k++;	  while(u    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
110	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)%  2  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)%  2  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)%  2  +  1);	  int    u    =(int)Math.rint((    v&1)%    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	67	None	replace
111	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)%  4);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)%  4);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)%  4);	  int    u    =(int)Math.rint((    v&1)%    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	67	None	replace
112	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(t    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	timeout	66	1	replace
113	[BUG]  [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(t    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	timeout	66	1	replace
114	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    timeout    	compilable	timeout	49	1	replace
115	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    timeout    	compilable	timeout	49	1	replace
116	[BUG]  [BUGGY]  if(t  ==  31)  {  u/=2;  v/=2;  k++;  }  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  ==  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  ==  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	non-compiled	[CE]  cannot  find  symbol  t	58	None	replace
117	[BUG]  [BUGGY]  if(t  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  cannot  find  symbol  t  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  u/=2;    v/=2;    k++;    	non-compiled	[CE]  cannot  find  symbol  t	58	None	replace
118	[BUG]  [BUGGY]  if(t  <  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  <  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  <  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  u/=2;    v/=2;    k++;    	non-compiled	[CE]  cannot  find  symbol  t	58	None	replace
119	[BUG]  [BUGGY]  while(v  <  =  k)  {  u/=2;  v/=2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  =  k)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  =  k)  {  u/=2;  v/=2;	  while(u    <    =    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
120	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  2);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  +  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  +  2);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	39	None	replace
121	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  *  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  *  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  *  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	39	None	replace
122	[BUG]  [BUGGY]  int  u  =(int)Math.floor(k  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(k  +  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	39	None	replace
123	[BUG]  [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	27	None	replace
124	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
125	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
126	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	92	None	replace
127	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	92	None	replace
128	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	92	None	replace
129	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	28	None	replace
130	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	28	None	replace
131	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  =  1)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
132	[BUG]  [BUGGY]  while(u  <  31  ||  v  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  <  =  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
133	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  2)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  2)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  =  2)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
134	[BUG]  [BUGGY]  int  v  =((  u&1)!=  1)?  -(u/2)/*B3*/);  [CE]  :  expected  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)!=  1)?  -(u/2)/*B3*/);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)!=  1)?  -(u/2)/*B3*/);	  int    v    =((    u&1)    ==    1)?    -(u&2)/*B3*/);    	non-compiled	[CE]  :  expected	103	None	replace
135	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(v,  k,  u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(v,  k,  u);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	33	None	replace
136	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(u,  v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(u,  v,  k);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	33	None	replace
137	[BUG]  [BUGGY]  int  u  =  Math.min(k,  u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(k,  u,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(k,  u,  v);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	33	None	replace
138	[BUG]  [BUGGY]  int  u  =  Math.min(u,  k,  v,  denom);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(u,  k,  v,  denom);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(u,  k,  v,  denom);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	33	None	replace
139	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  2  +  1);	  int    u    =(int)Math.rint((    u&1)/    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	37	None	replace
140	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2.0);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2.0);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  2.0);	  int    u    =(int)Math.rint((    u&1)/    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	37	None	replace
141	[BUG]  [BUGGY]  while(v  <  31  &&  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  >  0  &&  k  <  31)  {	  while(v    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
142	[BUG]  [BUGGY]  while(v  <  31  ||  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  ||  v  >=  0  &&  k  <  31)  {	  while(v    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
143	[BUG]  [BUGGY]  while(v  <  31  &&  k  >=  0  &&  v  <  31)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  k  >=  0  &&  v  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  k  >=  0  &&  v  <  31)  {	  while(v    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
144	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	68	None	replace
145	[BUG]  [BUGGY]  int  u  =  Math.min(k,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(k,  v);	  int    u    =    Math.min(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	31	None	replace
146	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(v,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(v,  k  +  1);	  int    u    =    Math.min(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	31	None	replace
147	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k,  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(v,  k,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(v,  k,  1);	  int    u    =    Math.min(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	31	None	replace
148	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
149	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
150	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
151	[BUG]  [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  u)  {  u/=2;  v/=2;	  while(v    <    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
152	[BUG]  [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  0)  {  u/=2;  v/=2;	  while(v    <    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
153	[BUG]  [BUGGY]  if(u  <  31)  {  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(k  <  31)  {  u/=1;  v/=2;  k++;  }	  while(k    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
154	[BUG]  [BUGGY]  while(v  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31)  {  u/=1;  v/=2;  k++;	  while(k    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
155	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  	compilable	  [FE]  ArithmeticException  	109	9	add
156	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  	compilable	  [FE]  ArithmeticException  	109	9	add
157	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  int  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  not  a  statement  [FE]      ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  int  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    int  while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  	non-compiled	[CE]  not  a  statement	109	None	add
158	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  int  k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  ';'  expected  [FE]        ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  int  k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    int  k  <  31)  {  u/=2;  v/=2;  k++;  }	  	non-compiled	[CE]  ';'  expected	109	None	add
159	[BUG]  [BUGGY]  timeout  [FE]          ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  32)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(k  <  32)  {  u/=2;  v/=2;  k++;  }	  	compilable	timeout	109	1	add
160	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  32)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]          ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  32)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(k  <  32)  {  u/=2;  v/=2;  k++;  }	  	compilable	timeout	109	1	add
161	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]            ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(k  <  31)  {  u/=1;  v/=2;  k++;  }	  	compilable	  [FE]  ArithmeticException  	109	9	add
162	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [FE]  ArithmeticException  [FE]            ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(k  <  31)  {  u/=1;  v/=2;  k++;  }	  	compilable	  [FE]  ArithmeticException  	109	9	add
163	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  4  +  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	36	None	replace
164	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  3  +  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	36	None	replace
165	[BUG]  [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  u)  {  u/=2;  v/=2;  k++;	  while(k    <    u)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
166	[BUG]  [BUGGY]  int  u  =  Math.min(gcd,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(gcd,  u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(gcd,  u);	  int    u    =    Math.min(k,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	replace
167	[BUG]  [BUGGY]  while(u  >  31  &&  v  <  =  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  31  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >  31  &&  v  <  =  0  &&  k  <  31)  {	  while(u    >    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
168	[BUG]  [BUGGY]  while(u  ==  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  ==  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  ==  31  &&  v  >=  0  &&  k  <  31)  {	  while(u    >    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
169	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
170	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  t);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  t);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  t);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  ';'  expected	1	None	replace
171	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  hashCode;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  hashCode;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  hashCode;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
172	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3  +  1;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3  +  1;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	94	None	replace
173	[BUG]  [BUGGY]  while(v  <  31  ||  u  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  u  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  ||  u  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	55	6	replace
175	[BUG]  [BUGGY]  while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	55	6	replace
176	[BUG]  [BUGGY]  if(t  ==  0)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  ==  0)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  ==  0)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
177	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	84	None	replace
178	[BUG]  [BUGGY]  while(v  <  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  1)  {  u/=2;  v/=2;  k++;	  while(k    <    1)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
179	[BUG]  [BUGGY]  while(t  <  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  <  1)  {  u/=2;  v/=2;  k++;	  while(k    <    1)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
180	[BUG]  [BUGGY]  while(u  <  31  *  k  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  *  k  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  *  k  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
181	[BUG]  [BUGGY]  while(v  <  31  *  u  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  *  u  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  *  u  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
182	[BUG]  [BUGGY]  while(u  <  31  *  k)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  *  k)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  *  k)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
183	[BUG]  [BUGGY]  while(u  <  31  *  v  >  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  *  v  >  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  *  v  >  1)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
184	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  /  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  /  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  /  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
185	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  -  1,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  -  1,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  -  1,  k);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
186	[BUG]  [BUGGY]  int  u  =(int)Math.floor(k  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(k  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(k  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
187	[BUG]  [BUGGY]  while(u  <  32  &&  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  32  &&  v  >  0  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
188	[BUG]  [BUGGY]  while(u  <  32  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  32  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
189	[BUG]  [BUGGY]  while(u  <  32  &&  v  >=  2  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  &&  v  >=  2  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  32  &&  v  >=  2  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
190	[BUG]  [BUGGY]  while(u  <  31  ||  v  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  <  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
191	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  32)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  32)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  32)  {  u/=1;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
192	[BUG]  [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	9	None	replace
193	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
194	[BUG]  [BUGGY]  while(t  <  0)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  0)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  <  0)  {  u/=1;  v/=2;  k++;	  while(t    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
195	[BUG]  [BUGGY]  int  k  =  Math.min(u,  k);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(u,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(u,  k);	  int    k    =    Math.min(v,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
196	[BUG]  [BUGGY]  int  k  =  Math.min(v,  u);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(v,  u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(v,  u);	  int    k    =    Math.min(v,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
197	[BUG]  [BUGGY]  int  k  =  Math.min(u,  v);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(u,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(u,  v);	  int    k    =    Math.min(v,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
198	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    0    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	19	None	replace
199	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  power);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  +  power);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
200	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  -  power);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  -  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  -  power);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
201	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  1);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	119	None	replace
202	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	107	None	replace
203	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	107	None	replace
204	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	107	None	replace
205	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  <  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u    <    k)    {    u/=2;    v/=2;    }    while(u  <  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	20	1	add
206	[BUG]  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  <  k)  {  u/=2;  v/=2;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  <  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    k)    {    u/=2;    v/=2;    }    while(u  <  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	20	1	add
207	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  >=  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u    <    k)    {    u/=2;    v/=2;    }    while(u  >=  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	20	1	add
208	[BUG]  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  >=  k)  {  u/=2;  v/=2;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  >=  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    k)    {    u/=2;    v/=2;    }    while(u  >=  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	20	1	add
209	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  <  k)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u    <    k)    {    u/=2;    v/=2;    }    while(u  <  k)  {  u/=1;  v/=2;  }	  timeout    	compilable	timeout	20	1	add
210	[BUG]  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  <  k)  {  u/=1;  v/=2;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  while(u  <  k)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    k)    {    u/=2;    v/=2;    }    while(u  <  k)  {  u/=1;  v/=2;  }	  timeout    	compilable	timeout	20	1	add
211	[BUG]  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  While(u  <  k)  {  u/=2;  v/=2;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  While(u  <  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    k)    {    u/=2;    v/=2;    }    While(u  <  k)  {  u/=2;  v/=2;  }	  timeout    	non-compiled	[CE]  ';'  expected	20	None	add
212	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	60	None	replace
213	[BUG]  [BUGGY]  while(u  <  32  ||  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  ||  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  32  ||  v  >=  0  &&  k  <  31)  {	  while(u    <    31    ||    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
214	[BUG]  [BUGGY]  while(v  <  31  ||  u  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  u  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  ||  u  >=  0  &&  k  <  31)  {	  while(u    <    31    ||    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
215	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	          int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	93	None	replace
216	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  :  expected	62	None	replace
217	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  :  expected	62	None	replace
218	[BUG]  [BUGGY]  while(u  <  31  &&  v  >  1  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  >  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  >  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
219	[BUG]  [BUGGY]  while(v  <  31  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
220	[BUG]  [BUGGY]  int  u  =  Math.min(hashCode,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(hashCode,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(hashCode,  v);	  int    u    =    Math.min(hashCode,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	86	None	replace
221	[BUG]  [BUGGY]  int  u  =  Math.min(k,  hashCode);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(k,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(k,  hashCode);	  int    u    =    Math.min(hashCode,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	86	None	replace
222	[BUG]  [BUGGY]  int  u  =  Math.min(hashCode,  k,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(hashCode,  k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(hashCode,  k,  v);	  int    u    =    Math.min(hashCode,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	86	None	replace
223	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/);	  int    v    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	61	None	replace
224	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)/  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)/  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)/  1);	  int    u    =(int)Math.rint((    v&1)+    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	69	None	replace
225	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)+  2);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)+  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)+  2);	  int    u    =(int)Math.rint((    v&1)+    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	69	None	replace
226	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  3);	  int    u    =(int)Math.rint((    u&1)/    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	6	None	replace
227	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  k);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  k);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  k);	          int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	15	None	replace
228	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  desnom);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  desnom);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  desnom);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  ';'  expected	42	None	replace
229	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  <  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v    <    k)    {    u/=2;    v/=2;    }    while(v  <  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	75	1	add
230	[BUG]  [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  <  k)  {  u/=2;  v/=2;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  <  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v    <    k)    {    u/=2;    v/=2;    }    while(v  <  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	75	1	add
231	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  <  k)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v    <    k)    {    u/=2;    v/=2;    }    while(v  <  k)  {  u/=1;  v/=2;  }	  timeout    	compilable	timeout	75	1	add
232	[BUG]  [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  <  k)  {  u/=1;  v/=2;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  <  k)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v    <    k)    {    u/=2;    v/=2;    }    while(v  <  k)  {  u/=1;  v/=2;  }	  timeout    	compilable	timeout	75	1	add
233	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  >=  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v    <    k)    {    u/=2;    v/=2;    }    while(v  >=  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	75	1	add
234	[BUG]  [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  >=  k)  {  u/=2;  v/=2;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  while(v  >=  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v    <    k)    {    u/=2;    v/=2;    }    while(v  >=  k)  {  u/=2;  v/=2;  }	  timeout    	compilable	timeout	75	1	add
235	[BUG]  [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  While(v  <  k)  {  u/=2;  v/=2;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  While(v  <  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v    <    k)    {    u/=2;    v/=2;    }    While(v  <  k)  {  u/=2;  v/=2;  }	  timeout    	non-compiled	[CE]  ';'  expected	75	None	add
236	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  ';'  expected	41	None	replace
237	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
238	[BUG]  [BUGGY]  int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/,  k);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/,  k);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  ';'  expected	41	None	replace
239	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v  <  u)  {  u/=2;  v/=2;  }	  while(k    <    u)    {    u/=2;    v/=2;    }    	compilable	timeout	24	1	replace
240	[BUG]  [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  u)  {  u/=2;  v/=2;  }	  while(k    <    u)    {    u/=2;    v/=2;    }    	compilable	timeout	24	1	replace
241	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	90	None	replace
242	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	90	None	replace
243	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	90	None	replace
244	[BUG]  [BUGGY]  if(u  >=  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  >=  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  >=  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
245	[BUG]  [BUGGY]  if(u  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
246	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
247	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/);    	non-compiled	[CE]  ';'  expected	101	None	replace
248	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3  +  1;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3  +  1;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
249	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(v,  k  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(v,  k  -  1);	  int    u    =    Math.min(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	31	None	replace
250	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  k);  [CE]  :  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    0    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	19	None	replace
251	[BUG]  [BUGGY]  int  k  =  Math.min(hashCode,  k);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(hashCode,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(hashCode,  k);	  int    u    =    Math.min(hashCode,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	86	None	replace
252	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	          int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	15	None	replace
253	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  2);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  2);	          int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
254	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
255	[BUG]  [BUGGY]  while(v  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
256	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(v&2)/*B3*/);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -(v&2)/*B3*/);    	non-compiled	[CE]  :  expected	108	None	replace
257	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  >=  31)  {  u/=2;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
258	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    while(u  >=  31)  {  u/=2;  v/=2;  k++;  }	  timeout    	compilable	timeout	48	1	add
259	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  While(u  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  While(u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u    <    31)    {    u/=2;    v/=2;    k++;    }    While(u  <  31)  {  u/=2;  v/=2;  k++;  }	  timeout    	non-compiled	[CE]  ';'  expected	48	None	add
260	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	43	None	replace
261	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  k,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(10.0,  k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(10.0,  k,  v);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	33	None	replace
262	[BUG]  [BUGGY]  while(v  >=  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >=  31  &&  v  >=  0  &&  k  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
263	[BUG]  [BUGGY]  while(u  >=  31  &&  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31  &&  v  >  0  &&  k  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
264	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	71	None	replace
265	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  negative);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  negative);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  negative);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	80	None	replace
266	[BUG]  [BUGGY]  int  k=(v  <  <  1)?  1  :  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k=(v  <  <  1)?  1  :  0;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k=(v  <  <  1)?  1  :  0;	          int    k=0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
267	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u  <  31)  {  u/=1;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    timeout    	compilable	timeout	49	1	replace
268	[BUG]  [BUGGY]  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31)  {  u/=1;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    timeout    	compilable	timeout	49	1	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u  >=  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    timeout    	compilable	  [FE]  AssertionFailedError  	49	6	replace
270	[BUG]  [BUGGY]  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    timeout    	compilable	  [FE]  AssertionFailedError  	49	6	replace
271	[BUG]  [BUGGY]  int  k  =  Math.min(w,  w);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(w,  w);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(w,  w);	  int    u    =    Math.min(w,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	34	None	replace
272	[BUG]  [BUGGY]  while(v  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
273	[BUG]  [BUGGY]  while(k  <  1)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  1)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  1)  {  u/=1;  v/=2;  k++;	  while(k    <    1)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
274	[BUG]  [BUGGY]  while(u  >=  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
275	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  8;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  8;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  8;	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	120	None	replace
276	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
277	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	36	None	replace
278	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  While(k  <  31)  {  u/=2;  v/=2;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  While(k  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    }    While(k  <  31)  {  u/=2;  v/=2;  }	  timeout    	non-compiled	[CE]  ';'  expected	104	None	add
279	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  :  expected	62	None	replace
280	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	92	None	replace
281	[BUG]  [BUGGY]  while(v  >  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >  31)  {  u/=2;  v/=2;  k++;	  while(v    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
282	[BUG]  [BUGGY]  while(v  >=  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >=  31)  {  u/=1;  v/=2;  k++;	  while(v    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
283	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  31);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  31);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
284	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	26	None	replace
285	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  :  expected	91	None	replace
286	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  :  expected	91	None	replace
287	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	60	None	replace
288	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B1*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B1*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B1*/;	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	60	None	replace
289	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	27	None	replace
290	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
291	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  :  expected	106	None	replace
292	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k&1)/  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  k&1)/  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  k&1)/  1);	  int    u    =(int)Math.rint((    u&1)/    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	6	None	replace
293	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  3);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  +  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  +  3);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	39	None	replace
294	[BUG]  [BUGGY]  while(u  <  31  &&  v  >=  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  >=  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  >=  1)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
295	[BUG]  [BUGGY]  while(u  >=  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
296	[BUG]  [BUGGY]  while(v  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
297	[BUG]  [BUGGY]  int  v  =((  u&0)  ==  1)?  -(u&0)/*B3*/);  [CE]  :  expected  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&0)  ==  1)?  -(u&0)/*B3*/);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&0)  ==  1)?  -(u&0)/*B3*/);	  int    v    =((    u&1)    ==    1)?    -(u&2)/*B3*/);    	non-compiled	[CE]  :  expected	103	None	replace
298	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
299	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
300	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
301	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	114	None	replace
302	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
303	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)/  2);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)/  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)/  2);	  int    u    =(int)Math.rint((    u&1)/    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	37	None	replace
304	[BUG]  [BUGGY]  while(v  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
305	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  =  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
306	[BUG]  [BUGGY]  while(u  >=  31  &&  v  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31  &&  v  <  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
307	[BUG]  [BUGGY]  while(u  <  32  ||  v  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  ||  v  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  32  ||  v  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
308	[BUG]  [BUGGY]  while(v  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
309	[BUG]  [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >=  k)  {  u/=2;  v/=2;	  while(v    <    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
310	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v  <  k)  {  u/=1;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    	compilable	timeout	22	1	replace
311	[BUG]  [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  k)  {  u/=1;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    	compilable	timeout	22	1	replace
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v  >=  k)  {  u/=2;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    	compilable	  [FE]  AssertionFailedError  	22	6	replace
313	[BUG]  [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  }  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >=  k)  {  u/=2;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    	compilable	  [FE]  AssertionFailedError  	22	6	replace
314	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	68	None	replace
315	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1,  denominator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	68	None	replace
316	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	2	None	replace
317	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)%  3);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)%  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)%  3);	  int    u    =(int)Math.rint((    v&1)%    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	67	None	replace
318	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  ';'  expected	1	None	replace
319	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	if(v  ==  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	6	replace
321	[BUG]  [BUGGY]  if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(v  ==  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	6	replace
322	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  ArithmeticException  	58	9	replace
323	[BUG]  [BUGGY]  if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [FE]  ArithmeticException  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(v  ==  31)  {  u/=2;  v/=2;  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  ArithmeticException  	58	9	replace
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  ==  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	if(u  ==  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	6	replace
325	[BUG]  [BUGGY]  if(u  ==  31)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  ==  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  ==  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	6	replace
326	[BUG]  [BUGGY]  while(k  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  >=  0)  {  u/=2;  v/=2;  k++;	  while(k    <    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
327	[BUG]  [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >=  k)  {  u/=2;  v/=2;  k++;	  while(v    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
328	[BUG]  [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  k)  {  u/=1;  v/=2;  k++;	  while(v    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
329	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	97	None	replace
330	[BUG]  [BUGGY]  while(u  >  32  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  32  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >  32  &&  v  >=  0  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
331	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	90	None	replace
332	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	90	None	replace
333	[BUG]  [BUGGY]  while(v  ==  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  ==  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  ==  31)  {  u/=2;  v/=2;  k++;	  while(k    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
334	[BUG]  [BUGGY]  timeout  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  	compilable	timeout	109	1	add
335	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  	compilable	timeout	109	1	add
336	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  While(k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  ';'  expected  [FE]      ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  While(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k    <    31)    {    u/=2;    v/=2;    k++;    }    While(k  <  31)  {  u/=2;  v/=2;  k++;  }	  	non-compiled	[CE]  ';'  expected	109	None	add
337	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)%  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)%  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)%  1);	  int    u    =(int)Math.rint((    v&1)+    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	69	None	replace
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  >=  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	  [FE]  AssertionFailedError  	110	6	replace
339	[BUG]  [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  >=  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	  [FE]  AssertionFailedError  	110	6	replace
340	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]      ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  <  31)  {  u/=1;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	  [FE]  ArithmeticException  	110	9	replace
341	[BUG]  [BUGGY]  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [FE]  ArithmeticException  [FE]      ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  31)  {  u/=1;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	  [FE]  ArithmeticException  	110	9	replace
342	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  3  +  1;	  int    u    =(int)Math.rint((    u&1)%    3;    	non-compiled	[CE]  ')'  expected	70	None	replace
343	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(10.0,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(10.0,  k);	  int    u    =    Math.min(k,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	replace
344	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/  +  1;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/  +  1;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/  +  1;	          int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	93	None	replace
345	[BUG]  [BUGGY]  float  u  =(float)Math.floor(k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.floor(k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	float  u  =(float)Math.floor(k);	  int    u    =(int)Math.floor(k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	40	None	replace
346	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.floor(v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	float  u  =(float)Math.floor(v,  k);	  int    u    =(int)Math.floor(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	38	None	replace
347	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  4);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  4);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  4);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	119	None	replace
348	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  8);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  8);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  8);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	119	None	replace
349	[BUG]  [BUGGY]  while(u  >=  31  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
350	[BUG]  [BUGGY]  while(u  >  31  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  31  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >  31  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
351	[BUG]  [BUGGY]  if(t  >  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  >  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  >  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  if(t    ==    31)    {    while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
352	[BUG]  [BUGGY]  while(v  <  =  k)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  =  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  =  k)  {  u/=2;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  >=  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	compilable	  [FE]  AssertionFailedError  	105	6	replace
354	[BUG]  [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  >=  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	compilable	  [FE]  AssertionFailedError  	105	6	replace
355	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B2*/);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B2*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B2*/);	  int    k    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	28	None	replace
356	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
357	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/  +  1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/  +  1;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/  +  1;	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
358	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  >=  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  >=  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  >=  0)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    >    0)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
359	[BUG]  [BUGGY]  if(u  >=  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  >=  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  >=  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    >    0)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
360	[BUG]  [BUGGY]  if(u  >  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  >  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  >  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    >    0)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
361	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  >  1)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  >  1)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  >  1)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    >    0)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
362	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);	          int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
363	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	84	None	replace
364	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	84	None	replace
365	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)+  4);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  v&1)+  4);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)+  4);	  int    u    =(int)Math.rint((    u&1)+    4);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
366	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1;	  int    u    =(int)Math.rint((    u&1)%    2    +    1;    	non-compiled	[CE]  ')'  expected	52	None	replace
367	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	29	None	replace
368	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	18	None	replace
369	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  v);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	9	None	replace
370	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	115	None	replace
371	[BUG]  [BUGGY]  while(v  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	if(v  <  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	9	replace
373	[BUG]  [BUGGY]  if(v  <  31)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(v  <  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	9	replace
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	if(u  <  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	9	replace
375	[BUG]  [BUGGY]  if(u  <  31)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  u/=2;  v/=2;  k++;  }	  u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	58	9	replace
376	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  3);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	119	None	replace
377	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  31)  {  u/=1;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  <  31)  {  u/=1;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
378	[BUG]  [BUGGY]  Char  u  =  Math.min(v,  k);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  Char  u  =  Math.min(v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	Char  u  =  Math.min(v,  k);	  char    u    =    Math.min(k,    u);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
379	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);	  int    v    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	61	None	replace
380	[BUG]  [BUGGY]  int  k  =  Math.min(v,  v);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(v,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(v,  v);	  int    k    =    Math.min(v,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
381	[BUG]  [BUGGY]  int  k  =  Math.min(v,  denominator);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(v,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(v,  denominator);	  int    k    =    Math.min(v,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
382	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator  +  1);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator  +  1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	92	None	replace
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	44	9	replace
384	[BUG]  [BUGGY]  if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	44	9	replace
385	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&1)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	111	None	replace
386	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	107	None	replace
387	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  32)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  <  32)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  <  32)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
388	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  =  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  <  =  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  <  =  0)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
389	[BUG]  [BUGGY]  while(k  >=  31  &&  v  >=  0  &&  u  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31  &&  v  >=  0  &&  u  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  >=  31  &&  v  >=  0  &&  u  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
390	[BUG]  [BUGGY]  if(u  <  k)  {  while(v  <  u)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  k)  {  while(v  <  u)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  k)  {  while(v  <  u)  {  u/=2;  v/=2;  k++;  }	  while(k    <    u)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
391	[BUG]  [BUGGY]  while(v  >=  31  &&  u  >  31  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  31  &&  u  >  31  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >=  31  &&  u  >  31  &&  k  <  31)  {	  while(u    >    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
392	[BUG]  [BUGGY]  while(v  <  31)  {  u=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31)  {  u=1;  v/=2;  k++;	  while(v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
393	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(v&2)/*B3*/);  [CE]  :  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  -(v&2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    0    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	19	None	replace
394	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(v&1)/*B3*/);  [CE]  :  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(v&1)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  -(v&1)/*B3*/);	  int    u    =((    u&1)    ==    1)?    0    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	19	None	replace
395	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  ';'  expected	42	None	replace
396	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  *  denominator);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  *  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  2  *  denominator);	  int    u    =(int)Math.rint((    u&1)/    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	37	None	replace
397	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator,  v);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator,  v);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	84	None	replace
398	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	84	None	replace
399	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  1,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  +  1,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  +  1,  k);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	39	None	replace
400	[BUG]  [BUGGY]  char  u  =(char)Math.rint((  u&1)%  3;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =(char)Math.rint((  u&1)%  3;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	char  u  =(char)Math.rint((  u&1)%  3;	  int    u    =(int)Math.rint((    u&1)%    3;    	non-compiled	[CE]  ')'  expected	70	None	replace
401	[BUG]  [BUGGY]  if(u  >=  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  >=  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  >=  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }	  while(v    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
402	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	          int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	14	None	replace
403	[BUG]  [BUGGY]  int  k  =  Math.min(v,  k,  u);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =  Math.min(v,  k,  u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(v,  k,  u);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	33	None	replace
404	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  true);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator,  true);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
405	[BUG]  [BUGGY]  if(u  <  31)  {  while(k  <  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(k  <  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(k  <  0)  {  u/=2;  v/=2;  k++;  }	  while(k    <    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
406	[BUG]  [BUGGY]  while(t  <  31)  {  u=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  31)  {  u=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  <  31)  {  u=1;  v/=2;  k++;	  while(t    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
407	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	          int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	93	None	replace
408	[BUG]  [BUGGY]  while(v  <  32  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  32  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  32  &&  v  >=  0  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
409	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	68	None	replace
410	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&1)/*B3*/);    	non-compiled	[CE]  ';'  expected	116	None	replace
411	[BUG]  [BUGGY]  char  u  =(char)Math.floor(v,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =(char)Math.floor(v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	char  u  =(char)Math.floor(v,  k);	  int    u    =(int)Math.floor(v,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	38	None	replace
412	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3;	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	94	None	replace
413	[BUG]  [BUGGY]  if(t  ==  1)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  ==  1)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  ==  1)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
414	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  v);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	26	None	replace
415	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	26	None	replace
416	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	29	None	replace
417	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/,  denominator);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/);    	non-compiled	[CE]  ';'  expected	101	None	replace
418	[BUG]  [BUGGY]  int  u  =(int)Math.floor(hashCode,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(hashCode,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(hashCode,  k);	  int    u    =(int)Math.floor(k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	40	None	replace
419	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	2	None	replace
420	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
421	[BUG]  [BUGGY]  if(k  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(k  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(k  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
422	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
423	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  3;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  3;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  3;	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	120	None	replace
424	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  <  31)  {  u=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	  [FE]  ArithmeticException  	110	9	replace
425	[BUG]  [BUGGY]  while(k  <  31)  {  u=2;  v/=2;  k++;  }  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  31)  {  u=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	compilable	  [FE]  ArithmeticException  	110	9	replace
426	[BUG]  [BUGGY]  int  u  =  Math.max(v,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.max(v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.max(v,  k);	  int    u    =    Math.min(k,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	replace
427	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	97	None	replace
428	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u&2)/*B3*/);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u&2)/*B3*/);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u&2)/*B3*/);	  int    v    =((    u&1)    ==    1)?    -(u&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	103	None	replace
429	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u&2)/*B3*/);  [CE]  :  expected  [FE]          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u&2)/*B3*/);  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  -(u&2)/*B3*/);	  int    v    =((    u&1)    ==    1)?    -(u&2)/*B3*/);    	non-compiled	[CE]  :  expected	103	None	replace
430	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
431	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.floor(v  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	float  u  =(float)Math.floor(v  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
