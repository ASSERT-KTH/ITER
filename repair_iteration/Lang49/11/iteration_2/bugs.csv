bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
2	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  ';'  expected	8	None	replace
3	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3;	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
4	[BUG]  [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  u)  {  u/=2;  v/=2;  k++;	  while(u    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  k)  {  u/=2;  v/=2;  k++;	  while(u    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)/  1);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  1);	      int    u    =(int)Math.rint((    u&1)+    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	replace
7	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)+  2);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)+  2);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)+  2);	      int    u    =(int)Math.rint((    u&1)+    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	replace
8	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)+  4);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)+  4);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)+  4);	      int    u    =(int)Math.rint((    u&1)+    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	replace
9	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	19	None	replace
10	[BUG]  [BUGGY]  while(u  <  31  &&  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  &&  v  >  0  &&  k  <  31)  {  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  >  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  while(u  <  32  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  32  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  32  &&  v  >=  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  while(u  <  31  ||  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  ||  v  >=  0  &&  k  <  31)  {  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  >=  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  while(u  <  31  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]      int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]      int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	        int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);	  	non-compiled	[CE]  ';'  expected	4	None	add
15	[BUG]  [BUGGY]      int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]      int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	        int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);	  	non-compiled	[CE]  ';'  expected	4	None	add
16	[BUG]  [BUGGY]      int  k=0;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]      int  k=0;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	        int  k=0;	  	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	add
17	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [CE]  :  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	22	None	replace
18	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	22	None	replace
19	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	22	None	replace
20	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u  <  k)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	timeout	18	1	replace
21	[BUG]  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  k)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	timeout	18	1	replace
22	[BUG]  [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  k)  {  u/=2;  v/=2;	  while(u    <    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  <  u)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	  [FE]  AssertionFailedError  	18	6	replace
24	[BUG]  [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  u)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  u)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	  [FE]  AssertionFailedError  	18	6	replace
25	[BUG]  [BUGGY]  while(u  <  =  k)  {  u/=2;  v/=2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  =  k)  {  u/=2;  v/=2;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  =  k)  {  u/=2;  v/=2;	  while(u    <    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
27	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [CE]  :  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	9	None	replace
29	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	9	None	replace
30	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	6	None	replace
31	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =  Math.min(v,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(v,  k);	      int    u    =    Math.min(u,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	replace
32	[BUG]  [BUGGY]  int  u  =  Math.min(k,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =  Math.min(k,  u);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(k,  u);	      int    u    =    Math.min(u,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	replace
33	[BUG]  [BUGGY]  int  u  =  Math.min(u,  k,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =  Math.min(u,  k,  v);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(u,  k,  v);	      int    u    =    Math.min(u,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	replace
34	[BUG]  [BUGGY]  int  u  =  Math.min(w,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =  Math.min(w,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(w,  k);	      int    u    =    Math.min(u,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	replace
35	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  4);	      int    u    =(int)Math.rint((    u&1)%    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	12	None	replace
36	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  1);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  +  1);	      int    u    =(int)Math.rint((    u&1)%    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	12	None	replace
37	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)/  2);	      int    u    =(int)Math.rint((    u&1)%    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	12	None	replace
38	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.floor(v,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v,  k);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
39	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  +  1);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
40	[BUG]  [BUGGY]  int  u  =(int)Math.floor(k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.floor(k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(k);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
41	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);	      int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	20	None	replace
42	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom);	      int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	20	None	replace
43	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	      int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	20	None	replace
44	[BUG]  [BUGGY]  while(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(u  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    	compilable	timeout	1	1	replace
49	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    	compilable	timeout	1	1	replace
50	[BUG]  [BUGGY]  if(u  <  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  if(u  <  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
51	[BUG]  [BUGGY]  if(t  ==  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  if(t  ==  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(t  ==  31)  {  while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
52	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  1;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  1;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  +  1;	      int    u    =(int)Math.rint((    u&1)%    2;    	non-compiled	[CE]  ')'  expected	13	None	replace
53	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  4;	      int    u    =(int)Math.rint((    u&1)%    2;    	non-compiled	[CE]  ')'  expected	13	None	replace
54	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  while(u  <  31  ||  v  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  ||  v  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  ||  v  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  while(u  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >    0)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	16	9	replace
58	[BUG]  [BUGGY]  u/=2;  v/=2;  k++;  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >    0)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  AssertionFailedError  	16	9	replace
59	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	10	None	replace
60	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	10	None	replace
61	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);	      int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	21	None	replace
62	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k);  [CE]  :  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k);	      int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	21	None	replace
63	[BUG]  [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  <  31)  {  u/=2;  v/=2;  k++;	  while(t    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
64	[BUG]  [BUGGY]  while(k  ==  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  ==  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  ==  31)  {  u/=2;  v/=2;  k++;	  while(t    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
65	[BUG]  [BUGGY]  while(t  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(t  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  <  31)  {  u/=1;  v/=2;  k++;	  while(t    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
66	[BUG]  [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  <  31)  {  u/=2;  v/=2;  k++;  }	  while(t    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  cannot  find  symbol  t	24	None	replace
67	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)%  2);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  v&1)%  2);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)%  2);	      int    u    =(int)Math.rint((    u&1)%    2);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	12	None	replace
68	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
69	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v&1)+  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  v&1)+  1);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  v&1)+  1);	      int    u    =(int)Math.rint((    u&1)+    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	replace
70	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  3;	      int    u    =(int)Math.rint((    u&1)%    2;    	non-compiled	[CE]  ')'  expected	13	None	replace
71	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	      int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	20	None	replace
72	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);	      int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
73	[BUG]  [BUGGY]  while(u  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  while(u  >=  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  >=  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(v  <  k)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	timeout	18	1	replace
76	[BUG]  [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  <  k)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  k)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	timeout	18	1	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  <  0)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	  [FE]  AssertionFailedError  	18	6	replace
78	[BUG]  [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  0)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	  [FE]  AssertionFailedError  	18	6	replace
79	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	      	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	5	None	replace
80	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	      int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	21	None	replace
81	[BUG]  [BUGGY]  while(u  <  31  *  v  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  *  v  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  *  v  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  while(v  >=  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  >=  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  >=  31)  {  u/=2;  v/=2;  k++;	  while(t    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
83	[BUG]  [BUGGY]  while(t  >=  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(t  >=  31)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(t  >=  31)  {  u/=2;  v/=2;  k++;	  while(t    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
84	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	19	None	replace
85	[BUG]  [BUGGY]  int  k  =  Math.min(v,  k);  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =  Math.min(v,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =  Math.min(v,  k);	      int    u    =    Math.min(u,    k);    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	replace
86	[BUG]  [BUGGY]  int  u  =  Math.min(hashCode,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =  Math.min(hashCode,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =  Math.min(hashCode,  k);	      int    u    =    Math.min(u,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	replace
87	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  if(u  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
88	[BUG]  [BUGGY]  while(k  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  31)  {  u/=1;  v/=2;  k++;	  while(k    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
89	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  <  31  &&  v  <  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);	      int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	9	None	replace
91	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k);  [CE]  :  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	22	None	replace
92	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	22	None	replace
93	[BUG]  [BUGGY]      int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]      int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	        int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	add
94	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	10	None	replace
95	[BUG]  [BUGGY]  while(u  >  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  >  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >  31  &&  v  >=  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
96	[BUG]  [BUGGY]  while(u  >=  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(u  >=  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(u  >=  31  &&  v  >=  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
97	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
98	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
99	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/;	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
100	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.floor(v  -  1);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.floor(v  -  1);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
101	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	6	None	replace
102	[BUG]  [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  0)  {  u/=2;  v/=2;  k++;	  while(u    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
103	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u&2)/*B3*/);  [CE]  :  expected  [FE]    AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u&2)/*B3*/);  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  -(u&2)/*B3*/);	      	non-compiled	[CE]  :  expected	5	None	replace
104	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  <  31)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	timeout	18	1	replace
105	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  31)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    	compilable	timeout	18	1	replace
106	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	replace
107	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	19	None	replace
108	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&2)/*B3*/);  [CE]  :  expected  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  -(v&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	9	None	replace
109	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	add	while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  ArithmeticException  	23	9	replace
110	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [FE]  ArithmeticException  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    	compilable	  [FE]  ArithmeticException  	23	9	replace
111	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	10	None	replace
112	[BUG]  [BUGGY]  while(v  <  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(v  <  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(v  <  31  &&  v  >=  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
113	[BUG]  [BUGGY]  char  u  =  Math.min(k,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  char  u  =  Math.min(k,  u);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	char  u  =  Math.min(k,  u);	      int    u    =    Math.min(u,    k);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	replace
114	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	      int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	20	None	replace
115	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
116	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
117	[BUG]  [BUGGY]  while(k  <  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  while(k  <  1)  {  u/=2;  v/=2;  k++;  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	while(k  <  1)  {  u/=2;  v/=2;  k++;	  while(u    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
118	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  if(u  <  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]    u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	if(u  <  31)  {  while(v  >  0)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    &&    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
119	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  power);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  power);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  power);	      int    u    =(int)Math.rint((    u&1)%    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
120	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  power;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;    [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  power;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	582	584	1	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  power;	      int    u    =(int)Math.rint((    u&1)%    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
