projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intdenominator=toProperString.hashCode();
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intnumerator=toProperString.hashCode();
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intdenominator=getDenominator();
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intnumerator=toProperString.length();
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intdenominator=toProperString.length();
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150numerator=-numerator;
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150numerator=-denominator;
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150numerator=-1;
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150if(denominator<0){thrownewArithmeticException("");}
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intnumerator=getNumerator();
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intnumerator=getNumerator(denominator);
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150intdenominator=getDenominator(numerator);
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150if(denominator<0){if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){thrownewArithmeticException("overflow:can'tnegate");}
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150if(denominator<0){if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){thrownewArithmeticException("");}
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150if(denominator<0){if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){thrownewArithmeticException("Overflow:can'tnegate");}
projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java150if(denominator<0){if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){thrownewArithmeticException("overflow:can'tnegate
