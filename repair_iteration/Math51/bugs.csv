bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE); [FE] TooManyEvaluationsException [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue) { [BUGGY] return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE); [BUGGY] } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.4472135954999579	124	124	1	replace	
2	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue) { [BUGGY] [BUGGY] return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE); } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.4472135954999579	124	124	1	add	
3	[BUG] [BUGGY] final double ftol = getFunctionValueAccuracy(); [FE] TooManyEvaluationsException [CONTEXT] return x0; } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  [BUGGY] final double ftol = getFunctionValueAccuracy(); [BUGGY] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	
4	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] return x0; } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  [BUGGY] [BUGGY] final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	add	
5	[BUG] [BUGGY] final double atol = getAbsoluteAccuracy(); [FE] TooManyEvaluationsException [CONTEXT] } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); [BUGGY] final double atol = getAbsoluteAccuracy(); [BUGGY] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	150	150	1	replace	
6	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); [BUGGY] [BUGGY] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	150	150	1	add	
7	[BUG] [BUGGY] final double rtol = getRelativeAccuracy(); [FE] TooManyEvaluationsException [CONTEXT] if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); [BUGGY] final double rtol = getRelativeAccuracy(); [BUGGY]    boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	
8	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); [BUGGY] [BUGGY] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	add	
9	[BUG] [BUGGY] boolean inverted = false; [FE] TooManyEvaluationsException [CONTEXT]  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   [BUGGY] boolean inverted = false; [BUGGY]   while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);     [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	155	155	1	replace	
10	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT]  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   [BUGGY] [BUGGY] boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);     [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	155	155	1	add	
11	[BUG] [BUGGY] final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [FE] TooManyEvaluationsException [CONTEXT] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [BUGGY] final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [BUGGY] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	
12	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [BUGGY] [BUGGY] final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	add	
13	[BUG] [BUGGY] final double fx = computeObjectiveValue(x); [FE] TooManyEvaluationsException [CONTEXT] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [BUGGY] final double fx = computeObjectiveValue(x); [BUGGY]     if (fx == 0.0) { return x; }  if (f1 * fx < 0) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	
14	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [BUGGY] [BUGGY] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }  if (f1 * fx < 0) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	add	
15	[BUG] [BUGGY] if (fx == 0.0) { [FE] TooManyEvaluationsException [CONTEXT]  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);    [BUGGY] if (fx == 0.0) { [BUGGY] return x; }  if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	166	166	1	replace	
16	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT]  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);    [BUGGY] [BUGGY] if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	166	166	1	add	
17	[BUG] [BUGGY] if (f1 * fx < 0) { [FE] TooManyEvaluationsException [CONTEXT] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }  [BUGGY] if (f1 * fx < 0) { [BUGGY]   x0 = x1; f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	replace	
18	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }  [BUGGY] [BUGGY] if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	171	171	1	add	
19	[BUG] [BUGGY] x0 = x1; [FE] TooManyEvaluationsException [CONTEXT]   if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   [BUGGY] x0 = x1; [BUGGY] f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	replace	
20	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT]   if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   [BUGGY] [BUGGY] x0 = x1; f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	174	174	1	add	
21	[BUG] [BUGGY] f0 = f1; [FE] TooManyEvaluationsException [CONTEXT]  if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   x0 = x1; [BUGGY] f0 = f1; [BUGGY] inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break;  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	175	175	1	replace	
22	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT]  if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   x0 = x1; [BUGGY] [BUGGY] f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break;  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	175	175	1	add	
23	[BUG] [BUGGY] inverted = !inverted; [FE] TooManyEvaluationsException [CONTEXT] if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   x0 = x1; f0 = f1; [BUGGY] inverted = !inverted; [BUGGY] } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break;   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	
24	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   x0 = x1; f0 = f1; [BUGGY] [BUGGY] inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break;   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	add	
25	[BUG] [BUGGY] switch (method) { [FE] TooManyEvaluationsException [CONTEXT] if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; } else { [BUGGY] switch (method) { [BUGGY] case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break;   default:  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	178	178	1	replace	
26	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; } else { [BUGGY] [BUGGY] switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break;   default:  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	178	178	1	add	
27	[BUG] [BUGGY] x1 = x; [FE] TooManyEvaluationsException [CONTEXT] case PEGASUS: f0 *= f1 / (f1 + fx); break;   default:  } }  [BUGGY] x1 = x; [BUGGY] f1 = fx;    if (FastMath.abs(f1) <= ftol) { switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	192	192	1	replace	
28	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] case PEGASUS: f0 *= f1 / (f1 + fx); break;   default:  } }  [BUGGY] [BUGGY] x1 = x; f1 = fx;    if (FastMath.abs(f1) <= ftol) { switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	192	192	1	add	
29	[BUG] [BUGGY] f1 = fx; [FE] TooManyEvaluationsException [CONTEXT] f0 *= f1 / (f1 + fx); break;   default:  } }  x1 = x; [BUGGY] f1 = fx; [BUGGY]     if (FastMath.abs(f1) <= ftol) { switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: if (inverted) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	193	193	1	replace	
30	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] f0 *= f1 / (f1 + fx); break;   default:  } }  x1 = x; [BUGGY] [BUGGY] f1 = fx;    if (FastMath.abs(f1) <= ftol) { switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: if (inverted) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	193	193	1	add	
31	[BUG] [BUGGY] if (FastMath.abs(f1) <= ftol) { [FE] TooManyEvaluationsException [CONTEXT]  } }  x1 = x; f1 = fx;    [BUGGY] if (FastMath.abs(f1) <= ftol) { [BUGGY] switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: if (inverted) { return x1; } break; case RIGHT_SIDE: if (!inverted) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	replace	
32	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT]  } }  x1 = x; f1 = fx;    [BUGGY] [BUGGY] if (FastMath.abs(f1) <= ftol) { switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: if (inverted) { return x1; } break; case RIGHT_SIDE: if (!inverted) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	198	198	1	add	
33	[BUG] [BUGGY] if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),    atol)) { [FE] TooManyEvaluationsException [CONTEXT] return x1; } break; default: throw new MathInternalError(); } }   [BUGGY] if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),              atol)) { [BUGGY] atol)) { switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: return inverted ? x1 : x0; case RIGHT_SIDE: return inverted ? x0 : x1; case BELOW_SIDE: return (f1 <= 0) ? x1 : x0; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	229	230	1	replace	
34	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] return x1; } break; default: throw new MathInternalError(); } }   [BUGGY] [BUGGY] if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),              atol)) { atol)) { switch (allowed) { case ANY_SIDE: return x1; case LEFT_SIDE: return inverted ? x1 : x0; case RIGHT_SIDE: return inverted ? x0 : x1; case BELOW_SIDE: return (f1 <= 0) ? x1 : x0; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	229	230	1	add	
36	[BUG] [BUGGY] verifyBracketing(x0, x1); [FE] TooManyEvaluationsException [CONTEXT]   if (f0 == 0.0) { return x0; } if (f1 == 0.0) { return x1; }  [BUGGY] verifyBracketing(x0, x1); [BUGGY]   final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.35355339059327373	146	146	1	replace	
37	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT]   if (f0 == 0.0) { return x0; } if (f1 == 0.0) { return x1; }  [BUGGY] [BUGGY] verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.35355339059327373	146	146	1	add	
38	[BUG] [BUGGY] super(absoluteAccuracy); [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { [BUGGY] super(absoluteAccuracy); [BUGGY] this.allowed = AllowedSolution.ANY_SIDE; this.method = method; } [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	68	68	1	replace	
39	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { [BUGGY] [BUGGY] super(absoluteAccuracy); this.allowed = AllowedSolution.ANY_SIDE; this.method = method; } [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	68	68	1	add	
40	[BUG] [BUGGY] this.allowed = AllowedSolution.ANY_SIDE; [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { super(absoluteAccuracy); [BUGGY] this.allowed = AllowedSolution.ANY_SIDE; [BUGGY] this.method = method; } [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	69	69	1	replace	
41	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { super(absoluteAccuracy); [BUGGY] [BUGGY] this.allowed = AllowedSolution.ANY_SIDE; this.method = method; } [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	69	69	1	add	
42	[BUG] [BUGGY] this.method = method; [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { super(absoluteAccuracy); this.allowed = AllowedSolution.ANY_SIDE; [BUGGY] this.method = method; [BUGGY] } [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	70	70	1	replace	
43	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { super(absoluteAccuracy); this.allowed = AllowedSolution.ANY_SIDE; [BUGGY] [BUGGY] this.method = method; } [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	70	70	1	add	
44	[BUG] [BUGGY] } [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { super(absoluteAccuracy); this.allowed = AllowedSolution.ANY_SIDE; this.method = method; [BUGGY] } [BUGGY]  [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	
45	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected BaseSecantSolver(final double absoluteAccuracy, final Method method) { super(absoluteAccuracy); this.allowed = AllowedSolution.ANY_SIDE; this.method = method; [BUGGY] [BUGGY] } [CLASS] BaseSecantSolver Method [METHOD] <init> [RETURN_TYPE] BaseSecantSolver$Method)  final double absoluteAccuracy Method method [VARIABLES] AllowedSolution allowed Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	add	
46	[BUG] [BUGGY] this.allowed = allowedSolution; [FE] TooManyEvaluationsException [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue, final AllowedSolution allowedSolution) { [BUGGY] this.allowed = allowedSolution; [BUGGY] return super.solve(maxEval, f, min, max, startValue); } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue AllowedSolution allowedSolution [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	116	116	1	replace	
47	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue, final AllowedSolution allowedSolution) { [BUGGY] [BUGGY] this.allowed = allowedSolution; return super.solve(maxEval, f, min, max, startValue); } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue AllowedSolution allowedSolution [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	116	116	1	add	
48	[BUG] [BUGGY] return super.solve(maxEval, f, min, max, startValue); [FE] TooManyEvaluationsException [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue, final AllowedSolution allowedSolution) { this.allowed = allowedSolution; [BUGGY] return super.solve(maxEval, f, min, max, startValue); [BUGGY] } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue AllowedSolution allowedSolution [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	117	117	1	replace	
49	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue, final AllowedSolution allowedSolution) { this.allowed = allowedSolution; [BUGGY] [BUGGY] return super.solve(maxEval, f, min, max, startValue); } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue AllowedSolution allowedSolution [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	117	117	1	add	
50	[BUG] [BUGGY] double x0 = getMin(); [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  [BUGGY] double x0 = getMin(); [BUGGY] double x1 = getMax(); double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	130	130	1	replace	
51	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  [BUGGY] [BUGGY] double x0 = getMin(); double x1 = getMax(); double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	130	130	1	add	
52	[BUG] [BUGGY] double x1 = getMax(); [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); [BUGGY] double x1 = getMax(); [BUGGY] double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } if (f1 == 0.0) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	131	131	1	replace	
53	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); [BUGGY] [BUGGY] double x1 = getMax(); double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } if (f1 == 0.0) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	131	131	1	add	
54	[BUG] [BUGGY] double f0 = computeObjectiveValue(x0); [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); double x1 = getMax(); [BUGGY] double f0 = computeObjectiveValue(x0); [BUGGY] double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } if (f1 == 0.0) { return x1; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	132	132	1	replace	
55	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); double x1 = getMax(); [BUGGY] [BUGGY] double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } if (f1 == 0.0) { return x1; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	132	132	1	add	
56	[BUG] [BUGGY] double f1 = computeObjectiveValue(x1); [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); double x1 = getMax(); double f0 = computeObjectiveValue(x0); [BUGGY] double f1 = computeObjectiveValue(x1); [BUGGY]     if (f0 == 0.0) { return x0; } if (f1 == 0.0) { return x1; } [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	
57	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); double x1 = getMax(); double f0 = computeObjectiveValue(x0); [BUGGY] [BUGGY] double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } if (f1 == 0.0) { return x1; } [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	add	
58	[BUG] [BUGGY] if (f0 == 0.0) { [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); double x1 = getMax(); double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    [BUGGY] if (f0 == 0.0) { [BUGGY] return x0; } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	138	138	1	replace	
59	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] protected final double doSolve() {  double x0 = getMin(); double x1 = getMax(); double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    [BUGGY] [BUGGY] if (f0 == 0.0) { return x0; } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	138	138	1	add	
60	[BUG] [BUGGY] if (f1 == 0.0) { [FE] TooManyEvaluationsException [CONTEXT] double x1 = getMax(); double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } [BUGGY] if (f1 == 0.0) { [BUGGY] return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy(); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	141	141	1	replace	
61	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] double x1 = getMax(); double f0 = computeObjectiveValue(x0); double f1 = computeObjectiveValue(x1);    if (f0 == 0.0) { return x0; } [BUGGY] [BUGGY] if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy(); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	141	141	1	add	
