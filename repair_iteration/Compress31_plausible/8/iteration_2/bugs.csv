bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  parseOctal(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  parseOctal(buffer,  offset,  length);	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  >  0)?  0L  :  buffer[start];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  buffer[start];	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  0)?  0L  :  0L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  0L;	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  0)?  0L  :  buffer[start];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[start];	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  result  =(length  <  3)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  3)?  0L  :  0L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  3)?  0L  :  0L;	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  length];	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer.length  +  1;	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer.length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer.length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer.length  +  length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[start];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[start];	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer.length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer.length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  int  result  =  0L;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =  0L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  0L;	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  long  result  =  0L  +  length;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  +  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  length;	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  long  result  =  0L  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  +  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  +  1;	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >  buffer.length;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  ||  length  >  buffer.length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >  buffer.length;	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  long  result  =  0L  ||  length  >  buffer[start];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  ||  length  >  buffer[start];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  ||  length  >  buffer[start];	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  byte  result  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  byte  result  =  0;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte  result  =  0;	  int    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  short  result  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  short  result  =  0;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	short  result  =  0;	  int    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  int  result  =  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  1;	  int    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	if(length  <  2)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	if(length  <  2)  {  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  final  int  length  =  buffer.length();  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  final  int  length  =  buffer.length();  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  int  end  =  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  end  =  offset  +  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  end  =  offset  +  length;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length   "+length+ "  should  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length   "+length+ "  should  be  at  least  2 ");  }  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	if(length  <  2)  {  throw  new  IllegalArgumentException( "Length   "+length+ "  should  be  at  least  2 ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  offset;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  /  offset;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  offset;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  length;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer.length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer.length;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis()  -  offset;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =  System.currentTimeMillis()  -  offset;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis()  -  offset;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
31	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  length;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  -  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  length;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  -  start;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  start;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  long  result  =  1L;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  1L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  1L;	  long    result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  >  0)?  1L  :  BYTE_MASK;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  BYTE_MASK;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  >  0)?  1L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  buffer[offset  +  length];	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  result  =(length  >  0)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  >  0)?  1L  :  0;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  1L  :  0;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  1)?  0L  :  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  1;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  result  =  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  1L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  1L;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  /  BYTE_MASK;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  /  BYTE_MASK;	  long    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  +  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  1;	  long    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  int  result  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =  System.currentTimeMillis();  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  System.currentTimeMillis();	  long    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  length;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  +  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  length;	  long    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  result  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  System.currentTimeMillis();  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  System.currentTimeMillis();	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset];	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  2)?  0L  :  buffer[offset  +  length];	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[start];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[start];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  0L  :  buffer[offset];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =(length  >  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  >  0)?  0L  :  buffer[offset];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[offset  +  length];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  0L  :  buffer[offset  +  1];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  0L  :  buffer[offset  +  1];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  1L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  1L  :  buffer[offset];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  ==  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  ==  0)?  0L  :  buffer[offset];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  long  result  =  -1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  -1L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  -1L;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  int  result  =  -1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =  -1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =  -1;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  long  result  =  0,  length  =  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0,  length  =  buffer.length  -  offset;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0,  length  =  buffer.length  -  offset;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  long  result  =(length  >  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  -1  :  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  -1  :  1;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset  +  1];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =(length  <  <  1)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  <  1)?  0L  :  buffer[offset];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(offset  <  <  1)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  <  1)?  0L  :  buffer[offset];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  -  1)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  -  1)?  0L  :  buffer[offset];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0;	  long    result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  buffer[offset]  :  0;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset]  :  0;	  long    result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >  0)?  buffer[offset  +  length  -  1]  :  0L;	  long    result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  -  buffer;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  buffer;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  *  offset;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  *  offset;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  *  offset;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  -  offset  +  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  -  offset  +  1;	  long    result    =    System.currentTimeMillis()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  long  result  =  0L  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  -  buffer.length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer.length;	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  long  result  =  0L  -  buffer[offset];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  -  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  buffer[offset];	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  long  result  =  0L  -  start;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  -  start;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  -  start;	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  1L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  1L  :  buffer[offset];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
71	[BUG]  [BUGGY]  result  =  0L  +  length;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  0L  +  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  0L  +  length;	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
72	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  length];	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  0)?  0L  :  buffer[offset  +  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  0)?  0L  :  buffer[offset  +  length);	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  offset;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length  +  offset;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  1)?  0L  :  buffer.length  +  offset;	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis()  +  offset;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  System.currentTimeMillis()  +  offset;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  System.currentTimeMillis()  +  offset;	  long    result    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  buffer[offset  +  length];	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
77	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(offset  <  0)?  -1L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  buffer[offset];	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[offset];	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  0)?  -1L  :  buffer[offset  +  length];	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  byte[]  buffer  =  parse(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parse(buffer,  offset,  length);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  final  int  length  =  buffer.length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  final  int  length  =  buffer.length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	final  int  length  =  buffer.length;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  byte[]  buffer  =  parseOctal(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	byte[]  buffer  =  parseOctal(buffer,  offset,  length);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length);	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  buffer[offset];	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
86	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(buffer,  offset,  length);	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length));  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length));  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length));	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  >=  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  >=  0)?  0L  :  buffer[offset];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  0;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset]  :  0;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  1)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  0L  :  buffer[offset];	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =(length  <  =  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  =  0)?  0L  :  buffer[offset];	  int    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
92	[BUG]  [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =(length  <  0)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  0)?  0L  :  buffer[offset];	  int    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
93	[BUG]  [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =(length  <  2)?  0L  :  buffer[offset  +  length];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  2)?  0L  :  buffer[offset  +  length];	  int    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
94	[BUG]  [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  result  =(length  <  1)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  result  =(length  <  1)?  0L  :  buffer[offset];	  int    result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  offset,  length);	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =  JsonStringEncoder.getInstance().encodeAsSimpleOctal(buffer,  offset,  length);	  result    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
97	[BUG]  [BUGGY]  long  result  =  0L  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =  0L  /  BYTE_MASK;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =  0L  /  BYTE_MASK;	  long    result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  =  0)?  0L  :  buffer[start];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0)?  0L  :  buffer[start];	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  result  =(length  >  0)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  >  0)?  0L  :  BYTE_MASK;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  0L  :  BYTE_MASK;	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
100	[BUG]  [BUGGY]  result  =(length  <  =  0L)?  0L  :  buffer[start];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  =  0L)?  0L  :  buffer[start];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  =  0L)?  0L  :  buffer[start];	  result    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
101	[BUG]  [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  2)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  2)?  0L  :  buffer[offset];	  long    result    =(length    >    0)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  long  result  =(length  <  1)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  1)?  0L  :  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  1)?  0L  :  1;	  long    result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
103	[BUG]  [BUGGY]  long  result  =(offset  <  length)?  -1L  :  -1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(offset  <  length)?  -1L  :  -1L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  length)?  -1L  :  -1L;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
104	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(offset  <  0)?  -1L  :  -1L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  -1L;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(offset  <  0)?  -1  :  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1  :  1;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
106	[BUG]  [BUGGY]  long  result  =(offset  <  0)?  -1L  :  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(offset  <  0)?  -1L  :  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(offset  <  0)?  -1L  :  1;	  long    result    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
107	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[offset];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer[offset];  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  0L  :  buffer[offset];	  long    result    =(length    <    <    1)?    0L    :    buffer[offset];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
108	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  0L;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  0L;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  0;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  0;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
110	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  1;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  1;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
111	[BUG]  [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  <  1)?  parseOctal(buffer,  offset,  length):  BYTE_MASK;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  result  =(length  >  0)?  buffer[offset]  :  Integer.MAX_VALUE;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	result  =(length  >  0)?  buffer[offset]  :  Integer.MAX_VALUE;	  result    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
113	[BUG]  [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
114	[BUG]  [BUGGY]  int  start  =  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  int  start  =  offset  +  length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	int  start  =  offset  +  length;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  length);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
116	[BUG]  [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Byte  length  must  be  >  0 ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
117	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {    [BUGGY]  long  result  =(length  <  <  2)?  0L  :  buffer.length;  [BUGGY]    int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(   "Length     "+length+   "  must  be  at  least  2   ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress31/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4082482904638631	102	102	2	replace	long  result  =(length  <  <  2)?  0L  :  buffer.length;	  long    result    =(length    <    <    1)?    0L    :    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
