bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  delimiter  =  final  String.valueOf(delimiter.toCharArray());  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  String  delimiter  =  final  String.valueOf(delimiter.toCharArray());  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	String  delimiter  =  final  String.valueOf(delimiter.toCharArray());	  String    delimiter    =    final    String.valueOf(delimiter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  final  String  delimiter  =  final  String.valueOf(delimiter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  delimiter  =  final  String.valueOf(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  delimiter  =  final  String.valueOf(delimiter);	  String    delimiter    =    final    String.valueOf(delimiter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  String  delimiter  =  final  String.valueOf(delimiter)+  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  String  delimiter  =  final  String.valueOf(delimiter)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	String  delimiter  =  final  String.valueOf(delimiter)+  1;	  String    delimiter    =    final    String.valueOf(delimiter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)&&  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)&&  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)&&  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(!isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||!isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(!isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  if(isLineBreak(delimiter)||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(isLineBreak(delimiter)||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(isLineBreak(delimiter)||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(isLineBreak(delimiter)&&    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  if(lineBreak(delimiter)||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(lineBreak(delimiter)||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(lineBreak(delimiter)||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(isLineBreak(delimiter)&&    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  Character  delimiter  =  getDelimiter(0);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  Character  delimiter  =  getDelimiter(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	Character  delimiter  =  getDelimiter(0);	  Character    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
9	[BUG]  [BUGGY]  final  Character  delimiter  =  getDelimiter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  Character  delimiter  =  getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  Character  delimiter  =  getDelimiter();	  Character    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  final  String  delimiter  =  getDelimiter(delimiter);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  delimiter  =  getDelimiter(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  delimiter  =  getDelimiter(delimiter);	  String    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  String  delimiter  =  getDelimiter(delimiter,  0);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  String  delimiter  =  getDelimiter(delimiter,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	String  delimiter  =  getDelimiter(delimiter,  0);	  String    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  String  delimiter  =  getDelimiter(delimiter.toCharArray());  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  String  delimiter  =  getDelimiter(delimiter.toCharArray());  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	String  delimiter  =  getDelimiter(delimiter.toCharArray());	  String    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  &&  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  &&  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  if(delimiter!=  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter!=  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter!=  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter.charAt(0)))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter.charAt(0)))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  final  String  delimiter  =  delimiter.charAt(0);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  delimiter  =  delimiter.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  delimiter  =  delimiter.charAt(0);	  final    char    delimiter    =    delimiter.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
17	[BUG]  [BUGGY]  final  String  delimiter  =  delimiter.charAt(1);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  delimiter  =  delimiter.charAt(1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  delimiter  =  delimiter.charAt(1);	  final    char    delimiter    =    delimiter.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  final  String  delimiter  =  delimiter.trim();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  delimiter  =  delimiter.trim();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  delimiter  =  delimiter.trim();	  final    char    delimiter    =    delimiter.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
19	[BUG]  [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)&&!isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)&&!isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||!isLineBreak(delimiter)&&!isLineBreak(delimiter))  {	  if(!isLineBreak(delimiter)&&!isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
20	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)&&!isLineBreak(delimiter.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)&&!isLineBreak(delimiter.charAt(0)))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)&&!isLineBreak(delimiter.charAt(0)))  {	  if(!isLineBreak(delimiter)&&!isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
21	[BUG]  [BUGGY]  String  delimiter  =  delimiter.charAt(0);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  String  delimiter  =  delimiter.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	String  delimiter  =  delimiter.charAt(0);	  char    delimiter    =    delimiter.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
22	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  &&  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  &&  isLineBreak(delimiter))  {	  if(delimiter!=    null    ||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)||!isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)||!isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||!isLineBreak(delimiter)||!isLineBreak(delimiter))  {	  if(!isLineBreak(delimiter)||!isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)&&  delimiter  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)&&  delimiter  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)&&  delimiter  ==  null)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)||  delimiter!=  null)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)||  delimiter!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)||  delimiter!=  null)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)&&  delimiter!=  null)  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)&&  delimiter!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)&&  delimiter!=  null)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  if(delimiter!=  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter!=  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter!=  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  if(lineBreak  ==  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(lineBreak  ==  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(lineBreak  ==  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)&&  delimiter  ==  lineBreak)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)&&  delimiter  ==  lineBreak)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)&&  delimiter  ==  lineBreak)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    lineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
30	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)||  lineBreak  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)||  lineBreak  ==  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)||  lineBreak  ==  delimiter)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    lineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
31	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)||  delimiter  ==  lineBreak,  skipHeaderRecord)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)||  delimiter  ==  lineBreak,  skipHeaderRecord)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)||  delimiter  ==  lineBreak,  skipHeaderRecord)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    lineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
32	[BUG]  [BUGGY]  final  Character  delimiter  =  getDelimiter(delimiter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  Character  delimiter  =  getDelimiter(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  Character  delimiter  =  getDelimiter(delimiter);	  Character    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
33	[BUG]  [BUGGY]  Character  delimiter  =  getDelimiter(delimiter,  0);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  Character  delimiter  =  getDelimiter(delimiter,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	Character  delimiter  =  getDelimiter(delimiter,  0);	  Character    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  Character  delimiter  =  getDelimiter(defaultChar);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  Character  delimiter  =  getDelimiter(defaultChar);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	Character  delimiter  =  getDelimiter(defaultChar);	  Character    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  if(delimiter!=  null  ||!isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter!=  null  ||!isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter!=  null  ||!isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||!isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
36	[BUG]  [BUGGY]  if(lineBreak  ==  null  ||!isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(lineBreak  ==  null  ||!isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(lineBreak  ==  null  ||!isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||!isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  final  String  delimiter  =  getSimpleDelimiter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  delimiter  =  getSimpleDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  delimiter  =  getSimpleDelimiter();	  final    String    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  final  String  delimiter  =  getLineDelimiter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  delimiter  =  getLineDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  delimiter  =  getLineDelimiter();	  final    String    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
39	[BUG]  [BUGGY]  final  String  DElimiter  =  getDelimiter();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  String  DElimiter  =  getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  String  DElimiter  =  getDelimiter();	  final    char    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  Final  String  delimiter  =  getDelimiter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  Final  String  delimiter  =  getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	Final  String  delimiter  =  getDelimiter();	  final    char    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  if(delimiter!=  null  ||  isLineBreak(delimiter.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter!=  null  ||  isLineBreak(delimiter.charAt(0)))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter!=  null  ||  isLineBreak(delimiter.charAt(0)))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter.charAt(0)))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(1)))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(1)))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(1)))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter.charAt(0)))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(0),  '-'))  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(0),  '-'))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(0),  '-'))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter.charAt(0)))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  if(lineBreak(delimiter)&&  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(lineBreak(delimiter)&&  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(lineBreak(delimiter)&&  isLineBreak(delimiter))  {	  if(lineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(lineBreak(delimiter)||  isLineBreak(delimiter)||  lineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(lineBreak(delimiter)||  isLineBreak(delimiter)||  lineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(lineBreak(delimiter)||  isLineBreak(delimiter)||  lineBreak(delimiter))  {	  if(lineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  String  delimiter  =  getLineDelimiter();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  String  delimiter  =  getLineDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	String  delimiter  =  getLineDelimiter();	  String    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  char  delimiter  =  getDelimiter();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  char  delimiter  =  getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	char  delimiter  =  getDelimiter();	  String    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  if(isLineBreak(delimiter)&&  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(isLineBreak(delimiter)&&  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(isLineBreak(delimiter)&&  isLineBreak(delimiter)&&  isLineBreak(delimiter))  {	  if(isLineBreak(delimiter)&&    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  delimiter!=  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  delimiter!=  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  delimiter!=  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  final  int  delimiter  =  getDelimiter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  int  delimiter  =  getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  int  delimiter  =  getDelimiter();	  final    String    delimiter    =    getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)||  delimiter!=  lineBreak)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)||  delimiter!=  lineBreak)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)||  delimiter!=  lineBreak)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    lineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
52	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter,  delimiter.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter,  delimiter.charAt(0)))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter,  delimiter.charAt(0)))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter.charAt(0)))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  final  Character  delimiter  =  delimiter.charAt(0);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  Character  delimiter  =  delimiter.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  Character  delimiter  =  delimiter.charAt(0);	  final    char    delimiter    =    delimiter.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isSurroundingSpaces(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isSurroundingSpaces(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isSurroundingSpaces(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
55	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isFullDelimiter(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isFullDelimiter(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isFullDelimiter(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)||  delimiter  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)||  delimiter  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||!isLineBreak(delimiter)||  delimiter  ==  null)  {	  if(!isLineBreak(delimiter)||    delimiter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  Character  delimiter  =  getDelimiter(delimiter.toCharArray());  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  Character  delimiter  =  getDelimiter(delimiter.toCharArray());  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	Character  delimiter  =  getDelimiter(delimiter.toCharArray());	  Character    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  if(!isLineBreak(delimiter)&&!isLineBreak(delimiter)||!isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(!isLineBreak(delimiter)&&!isLineBreak(delimiter)||!isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(!isLineBreak(delimiter)&&!isLineBreak(delimiter)||!isLineBreak(delimiter))  {	  if(!isLineBreak(delimiter)&&!isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
59	[BUG]  [BUGGY]  if(delimiter!=  null  &&  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter!=  null  &&  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter!=  null  &&  isLineBreak(delimiter))  {	  if(delimiter!=    null    ||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  hasLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  hasLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  hasLineBreak(delimiter))  {	  if(delimiter!=    null    ||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
61	[BUG]  [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||!isLineBreak(delimiter)&&  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||!isLineBreak(delimiter)&&  isLineBreak(delimiter))  {	  if(!isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  final  char  delimiter  =  getDelimiter(delimiter);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  char  delimiter  =  getDelimiter(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  char  delimiter  =  getDelimiter(delimiter);	  String    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  char  delimiter  =  getDelimiter(delimiter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  char  delimiter  =  getDelimiter(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	char  delimiter  =  getDelimiter(delimiter);	  String    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  final  char  delimiter  =  final  String.valueOf(delimiter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  final  char  delimiter  =  final  String.valueOf(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	final  char  delimiter  =  final  String.valueOf(delimiter);	  String    delimiter    =    final    String.valueOf(delimiter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
65	[BUG]  [BUGGY]  char  delimiter  =  final  String.valueOf(delimiter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  char  delimiter  =  final  String.valueOf(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	char  delimiter  =  final  String.valueOf(delimiter);	  String    delimiter    =    final    String.valueOf(delimiter);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
66	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  delimiter  ==  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  delimiter  ==  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  delimiter  ==  null  ||  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  if(lineBreak(delimiter)||  lineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(lineBreak(delimiter)||  lineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(lineBreak(delimiter)||  lineBreak(delimiter))  {	  if(lineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter)||  isLineBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isLineBreak(delimiter)||  isLineBreak(delimiter))  {	  if(isLineBreak(delimiter)&&    isLineBreak(delimiter)||    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
69	[BUG]  [BUGGY]  Character  delimiter  =  getDelimiter(delimiter).charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  Character  delimiter  =  getDelimiter(delimiter).charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	Character  delimiter  =  getDelimiter(delimiter).charValue();	  Character    delimiter    =    getDelimiter(delimiter);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(0)),  delimiter.charAt(0))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(0)),  delimiter.charAt(0))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter.charAt(0)),  delimiter.charAt(0))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter.charAt(0)))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isColumnBreak(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      public  CSVFormat  withDelimiter(final  char  delimiter)  {      [BUGGY]  if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isColumnBreak(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escapeCharacter,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withDelimiter  [RETURN_TYPE]  CSVFormat  final  char  delimiter  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	if(delimiter  ==  null  ||  isLineBreak(delimiter)&&  isColumnBreak(delimiter))  {	  if(delimiter    ==    null    ||    isLineBreak(delimiter)&&    isLineBreak(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
