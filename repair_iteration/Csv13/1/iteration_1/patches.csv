bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(newRecord)  {  out.flush();  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(newRecord)  {  out.flush();  }  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(newRecord)  {  out.flush();  }	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
2	[BUG]  [BUGGY]  ((  Flushable)out).flush();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  ((  Flushable)out).flush();  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	((  Flushable)out).flush();	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
3	[BUG]  [BUGGY]  if(out!=  null)  {  out.flush();  }  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                  NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out!=  null)  {  out.flush();  }  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out!=  null)  {  out.flush();  }	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
4	[BUG]  [BUGGY]  appendable.flush();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]                    NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  appendable.flush();  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	appendable.flush();	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
5	[BUG]  [BUGGY]  if(out  instanceof  Fillable)  {  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Fillable)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Fillable)  {	  if(out    instanceof    FilterOutput)    {    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
6	[BUG]  [BUGGY]  if(out  instanceof  Fillable  <  NoClassDefFoundError)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Fillable  <  NoClassDefFoundError)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Fillable  <  NoClassDefFoundError)  {	  if(out    instanceof    Flushable    <    NoClassDefFoundError)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  if(out  instanceof  Flushable  <  =  NoClassDefFoundError)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Flushable  <  =  NoClassDefFoundError)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Flushable  <  =  NoClassDefFoundError)  {	  if(out    instanceof    Flushable    <    NoClassDefFoundError)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  if(out  instanceof  Filterable  <  NoClassDefFoundError)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Filterable  <  NoClassDefFoundError)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Filterable  <  NoClassDefFoundError)  {	  if(out    instanceof    Flushable    <    NoClassDefFoundError)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  if(out  instanceof  Fastable)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Fastable)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Fastable)  {	  if(out    instanceof    File)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  if(out  instanceof  Flushable  ==  0)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Flushable  ==  0)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Flushable  ==  0)  {	  if(out    instanceof    Flushable    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(out  instanceof  Fillable  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Fillable  <  =  0)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Fillable  <  =  0)  {	  if(out    instanceof    Flushable    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  Fillable)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  Fillable)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Filterable  ||  out  instanceof  Fillable)  {	  if(out    instanceof    Filterable)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  if(out  instanceof  Filterable  <?>)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Filterable  <?>)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Filterable  <?>)  {	  if(out    instanceof    Filterable)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  if(out  instanceof  Flushable!=  0)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Flushable!=  0)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Flushable!=  0)  {	  if(out    instanceof    Flushable    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  if(out  instanceof  FilterOutput  &&  newRecord)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  FilterOutput  &&  newRecord)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  FilterOutput  &&  newRecord)  {	  if(out    instanceof    FilterOutput)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  if(out  instanceof  Flushable  ==  NoClassDefFoundError)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Flushable  ==  NoClassDefFoundError)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Flushable  ==  NoClassDefFoundError)  {	  if(out    instanceof    Flushable    <    NoClassDefFoundError)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  if(out!=  null)  {  for(Flushable  out  :  out.values())  {  out.flush();  }  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out!=  null)  {  for(Flushable  out  :  out.values())  {  out.flush();  }  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out!=  null)  {  for(Flushable  out  :  out.values())  {  out.flush();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  out.flush();  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  out.flush();  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	out.flush();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  Flushable)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  Flushable)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Filterable  ||  out  instanceof  Flushable)  {	  if(out    instanceof    Filterable)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  Filterable)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  Filterable)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Filterable  ||  out  instanceof  Filterable)  {	  if(out    instanceof    Filterable)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  FileOutputStream)  {  [CE]  validate()  has  private  access  in  CSVFormat  [FE]          NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Filterable  ||  out  instanceof  FileOutputStream)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Filterable  ||  out  instanceof  FileOutputStream)  {	  if(out    instanceof    Filterable)    {    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	1	None	replace
22	[BUG]  [BUGGY]  if(out  instanceof  Flushable  <  NoClassDefFoundError  ||  out  instanceof  FileOutputStream)  {  [CE]  validate()  has  private  access  in  CSVFormat  [FE]        NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  Flushable  <  NoClassDefFoundError  ||  out  instanceof  FileOutputStream)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  Flushable  <  NoClassDefFoundError  ||  out  instanceof  FileOutputStream)  {	  if(out    instanceof    Flushable    <    NoClassDefFoundError)    {    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	6	None	replace
23	[BUG]  [BUGGY]  this.format.flush();  [CE]  validate()  has  private  access  in  CSVFormat  [FE]              NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  this.format.flush();  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	this.format.flush();	      	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	4	None	replace
24	[BUG]  [BUGGY]  if(out  instanceof  FilterOutput  <  NoClassDefFoundError)  {  [CE]  validate()  has  private  access  in  CSVFormat  [FE]            NoClassDefFoundError    [CONTEXT]    public  void  flush()  throws  IOException  {    [BUGGY]  if(out  instanceof  FilterOutput  <  NoClassDefFoundError)  {  [BUGGY]    ((Flushable)  out).flush();  }  }  [CLASS]  CSVPrinter  [METHOD]  flush  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	if(out  instanceof  FilterOutput  <  NoClassDefFoundError)  {	  if(out    instanceof    FilterOutput)    {    	non-compiled	[CE]  validate()  has  private  access  in  CSVFormat	3	None	replace
