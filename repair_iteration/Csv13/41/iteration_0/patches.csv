bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]    NoClassDefFoundError  [CONTEXT]  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {	if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
2	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]      NoClassDefFoundError  [CONTEXT]  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {	if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError  [CONTEXT]  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	replace	  	if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
4	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]    NoClassDefFoundError  [CONTEXT]  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.equals(delimiter))  {  [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	replace	if(escapeCharacter!=  null  &&  escapeCharacter.equals(delimiter))  {	if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
5	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]      NoClassDefFoundError  [CONTEXT]  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  [BUGGY]  if(escapeCharacter  ==  null  &&  escapeCharacter.equals(commentMarker))  {  [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	replace	if(escapeCharacter  ==  null  &&  escapeCharacter.equals(commentMarker))  {	if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
6	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]    NoClassDefFoundError  [CONTEXT]  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter.equals(commentMarker))  {  [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentMarker  +   "') ");  }  if  (escapeCharacter  ==  null  &&  quoteMode  ==  QuoteMode.NONE)  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	replace	if(delimiter  ==  null  &&  escapeCharacter.equals(commentMarker))  {	if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
