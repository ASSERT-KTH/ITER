projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318Predefined.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(null).withRecordSeparator(FLOAT);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(null).withRecordSeparator(FALSE);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withType(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(false),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH),LF).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true),false).withQuote(null).withRecordSeparator(BACKSLASH
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withQuote(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withRecordSeparator(TAB).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=f.withDelimiter(TAB).withDefault().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(BACKSLASH
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false),true).withQuote(null).withRecordSeparator(BACKSLASH
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true),true).withQuote(null).withRecordSeparator(BACKSLASH
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(LF).withRecordSeparator(FALSE);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(false).withRecordSeparator(FALSE);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withRecordSeparator(TAB).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withVarArgs().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withRecordSeparator(TAB).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=f.withDelimiter(TAB).withPredefined().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withPredefined().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(LF).withRecordSeparator(FLOAT);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(false).withRecordSeparator(FLOAT);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(LF).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=f.withDelimiter(TAB).withPredefined().withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(TAB).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=f.withDelimiter(TAB).withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withQuote(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withQuote(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withRecordSeparator(DEFAULT);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=TAB.withDelimiter(DEFAULT).withPredefined().withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(false),DEFAULT.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(true),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318staticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(false),DEFAULT.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=TAB.withDelimiter(DEFAULT).withDefault().withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(TAB).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318Predefined.withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318Predefined.withQuote(null).withRecordSeparator(LF,1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318Predefined.withQuote(null).withRecordSeparator(LF,2);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=f.withQuote(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(LF).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withDelimiter(TAB).withRecordSeparator(BACKSLASH).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(BACKSLASH).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH),DEFAULT).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH),LF).withIgnoreEmptyLines(false),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDelimiter(TAB).withEscape(BACKSLASH),DEFAULT).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH),LF).withIgnoreEmptyLines(true),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withType(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withType(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=f.withType(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=TAB.withDelimiter(DEFAULT).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(DEFAULT);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(LF).withRecordSeparator(TAB);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318.withQuote(null).withRecordSeparator(LF,1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withIgnoreEmptyLines(false),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withRecordSeparator(LF),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(0);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withRecordSeparator(LF).withQuote(0).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=TAB.withDelimiter(DEFAULT).withPredefined().withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withIgnoreEmptyLines(true),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withQuote(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withRecordSeparator(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=TAB.withDelimiter(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withIgnoreEmptyLines(false),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(BACKSLASH);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false).withQuote(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=.withQuote(TAB).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318Predefined.withQuote(null).withRecordSeparator(LF+1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH),LF).withIgnoreEmptyLines(true),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withRecordSeparator(null).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withType(TAB).withIgnoreEmptyLines(true).withQuote(false).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=TAB.withDelimiter(null).withPredefined().withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(LF
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(0).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withRecordSeparator(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withRecordSeparator(BACKSLASH).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withEscape(BACKSLASH),LF.withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined(),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withQuote(null).withRecordSeparator(LF,1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318Predefined.withQuote(null).recordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withRecordSeparator(TAB).withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(0).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withRecordSeparator(LF).withQuote(0).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withVarArgs().withRecordSeparator(LF).withQuote(null),LF.withRecordSeparator();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withDefault().withQuote(null).withRecordSeparator(LF,1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withIgnoreEmptyLines(false),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withType(TAB).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withType(TAB).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withRecordSeparator(LF).withQuote(0).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withPredefined().withRecordSeparator(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(false),LF.withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withVarArgs().withIgnoreEmptyLines(false).withQuote(0).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withPredefined().withRecordSeparator(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(BACKSLASH).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false).withQuote(null).withRecordSeparator(BACKSLASH
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withRecordSeparator(TAB).withDefault().withRecordSeparator(LF).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withDefault().withRecordSeparator(false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withQuote(TAB).withPredefined().withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withQuote().withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(BACKSLASH).withIgnoreEmptyLines(false),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF).withIgnoreEmptyLines(false),true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withRecordSeparator(LF),LF).withIgnoreEmptyLines(false),false).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH),LF).withIgnoreEmptyLines(false,true).withQuote(null).withRecordSeparator(LF);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java318publicstaticfinalCSVFormatMYSQL=LF.withDelimiter(TAB).withQuote(null).withIgnoreEmptyLines(true).withQuote(null).withRecordSeparator(LF);
