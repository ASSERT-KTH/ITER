bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (out instanceof Flushable) { [FE] NoClassDefFoundError [CONTEXT] public void flush() throws IOException { [BUGGY] if (out instanceof Flushable) { [BUGGY] ((Flushable) out).flush(); } } [CLASS] CSVPrinter [METHOD] flush [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	replace	
2	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public void flush() throws IOException { [BUGGY] [BUGGY] if (out instanceof Flushable) { ((Flushable) out).flush(); } } [CLASS] CSVPrinter [METHOD] flush [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	100	100	10	add	
3	[BUG] [BUGGY] ((Flushable) out).flush(); [FE] NoClassDefFoundError [CONTEXT] public void flush() throws IOException { if (out instanceof Flushable) { [BUGGY] ((Flushable) out).flush(); [BUGGY] } } [CLASS] CSVPrinter [METHOD] flush [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	101	101	10	replace	
4	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public void flush() throws IOException { if (out instanceof Flushable) { [BUGGY] [BUGGY] ((Flushable) out).flush(); } } [CLASS] CSVPrinter [METHOD] flush [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	101	101	10	add	
5	[BUG] [BUGGY] } [FE] NoClassDefFoundError [CONTEXT] public void flush() throws IOException { if (out instanceof Flushable) { ((Flushable) out).flush(); } [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] flush [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	103	103	10	replace	
6	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public void flush() throws IOException { if (out instanceof Flushable) { ((Flushable) out).flush(); } [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] flush [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord Appendable out  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	103	103	10	add	
7	[BUG] [BUGGY] return nullString; [FE] NoClassDefFoundError [CONTEXT] public String getNullString() { [BUGGY] return nullString; [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] getNullString [RETURN_TYPE] String  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7	632	632	10	replace	
8	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public String getNullString() { [BUGGY] [BUGGY] return nullString; } [CLASS] CSVFormat Predefined [METHOD] getNullString [RETURN_TYPE] String  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7	632	632	10	add	
9	[BUG] [BUGGY] return ignoreEmptyLines; [FE] NoClassDefFoundError [CONTEXT] public boolean getIgnoreEmptyLines() { [BUGGY] return ignoreEmptyLines; [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] getIgnoreEmptyLines [RETURN_TYPE] boolean  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.6454972243679028	598	598	10	replace	
10	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public boolean getIgnoreEmptyLines() { [BUGGY] [BUGGY] return ignoreEmptyLines; } [CLASS] CSVFormat Predefined [METHOD] getIgnoreEmptyLines [RETURN_TYPE] boolean  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.6454972243679028	598	598	10	add	
11	[BUG] [BUGGY] return ignoreSurroundingSpaces; [FE] NoClassDefFoundError [CONTEXT] public boolean getIgnoreSurroundingSpaces() { [BUGGY] return ignoreSurroundingSpaces; [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] getIgnoreSurroundingSpaces [RETURN_TYPE] boolean  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.6454972243679028	607	607	10	replace	
12	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public boolean getIgnoreSurroundingSpaces() { [BUGGY] [BUGGY] return ignoreSurroundingSpaces; } [CLASS] CSVFormat Predefined [METHOD] getIgnoreSurroundingSpaces [RETURN_TYPE] boolean  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.6454972243679028	607	607	10	add	
13	[BUG] [BUGGY] return commentMarker; [FE] NoClassDefFoundError [CONTEXT] public Character getCommentMarker() { [BUGGY] return commentMarker; [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] getCommentMarker [RETURN_TYPE] Character  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	542	542	10	replace	
14	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public Character getCommentMarker() { [BUGGY] [BUGGY] return commentMarker; } [CLASS] CSVFormat Predefined [METHOD] getCommentMarker [RETURN_TYPE] Character  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	542	542	10	add	
15	[BUG] [BUGGY] return escapeCharacter; [FE] NoClassDefFoundError [CONTEXT] public Character getEscapeCharacter() { [BUGGY] return escapeCharacter; [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] getEscapeCharacter [RETURN_TYPE] Character  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	560	560	10	replace	
16	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public Character getEscapeCharacter() { [BUGGY] [BUGGY] return escapeCharacter; } [CLASS] CSVFormat Predefined [METHOD] getEscapeCharacter [RETURN_TYPE] Character  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	560	560	10	add	
17	[BUG] [BUGGY] final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, [BUGGY] final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { [BUGGY] this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	419	419	10	replace	
18	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, [BUGGY] [BUGGY] final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	419	419	10	add	
19	[BUG] [BUGGY] this.delimiter = delimiter; [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { [BUGGY] this.delimiter = delimiter; [BUGGY] this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	420	420	10	replace	
20	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { [BUGGY] [BUGGY] this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	420	420	10	add	
21	[BUG] [BUGGY] this.quoteCharacter = quoteChar; [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; [BUGGY] this.quoteCharacter = quoteChar; [BUGGY] this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	421	421	10	replace	
22	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; [BUGGY] [BUGGY] this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	421	421	10	add	
23	[BUG] [BUGGY] this.quoteMode = quoteMode; [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; [BUGGY] this.quoteMode = quoteMode; [BUGGY] this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	422	422	10	replace	
24	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; [BUGGY] [BUGGY] this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	422	422	10	add	
25	[BUG] [BUGGY] this.commentMarker = commentStart; [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; [BUGGY] this.commentMarker = commentStart; [BUGGY] this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	423	423	10	replace	
26	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; [BUGGY] [BUGGY] this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	423	423	10	add	
27	[BUG] [BUGGY] this.escapeCharacter = escape; [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; [BUGGY] this.escapeCharacter = escape; [BUGGY] this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	424	424	10	replace	
28	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; [BUGGY] [BUGGY] this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	424	424	10	add	
29	[BUG] [BUGGY] this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; [BUGGY] this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; [BUGGY] this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	425	425	10	replace	
30	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private CSVFormat(final char delimiter, final Character quoteChar, final QuoteMode quoteMode, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; [BUGGY] [BUGGY] this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	425	425	10	add	
31	[BUG] [BUGGY] this.allowMissingColumnNames = allowMissingColumnNames; [FE] NoClassDefFoundError [CONTEXT] final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; [BUGGY] this.allowMissingColumnNames = allowMissingColumnNames; [BUGGY] this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	426	426	10	replace	
32	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; [BUGGY] [BUGGY] this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	426	426	10	add	
33	[BUG] [BUGGY] this.ignoreEmptyLines = ignoreEmptyLines; [FE] NoClassDefFoundError [CONTEXT] final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; [BUGGY] this.ignoreEmptyLines = ignoreEmptyLines; [BUGGY] this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	427	427	10	replace	
34	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] final boolean ignoreEmptyLines, final String recordSeparator, final String nullString, final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; [BUGGY] [BUGGY] this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	427	427	10	add	
35	[BUG] [BUGGY] this.recordSeparator = recordSeparator; [FE] NoClassDefFoundError [CONTEXT] final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; [BUGGY] this.recordSeparator = recordSeparator; [BUGGY] this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	428	428	10	replace	
36	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] final Object[] headerComments, final String[] header, final boolean skipHeaderRecord, final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; [BUGGY] [BUGGY] this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	428	428	10	add	
37	[BUG] [BUGGY] this.nullString = nullString; [FE] NoClassDefFoundError [CONTEXT] final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; [BUGGY] this.nullString = nullString; [BUGGY] this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	429	429	10	replace	
38	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] final boolean allowMissingColumnNames, final boolean ignoreHeaderCase) { this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; [BUGGY] [BUGGY] this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	429	429	10	add	
39	[BUG] [BUGGY] this.headerComments = toStringArray(headerComments); [FE] NoClassDefFoundError [CONTEXT] this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; [BUGGY] this.headerComments = toStringArray(headerComments); [BUGGY] this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	430	430	10	replace	
40	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] this.delimiter = delimiter; this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; [BUGGY] [BUGGY] this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	430	430	10	add	
41	[BUG] [BUGGY] this.header = header == null ? null : header.clone(); [FE] NoClassDefFoundError [CONTEXT] this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); [BUGGY] this.header = header == null ? null : header.clone(); [BUGGY] this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	431	431	10	replace	
42	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] this.quoteCharacter = quoteChar; this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); [BUGGY] [BUGGY] this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	431	431	10	add	
43	[BUG] [BUGGY] this.skipHeaderRecord = skipHeaderRecord; [FE] NoClassDefFoundError [CONTEXT] this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); [BUGGY] this.skipHeaderRecord = skipHeaderRecord; [BUGGY] this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	432	432	10	replace	
44	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] this.quoteMode = quoteMode; this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); [BUGGY] [BUGGY] this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	432	432	10	add	
45	[BUG] [BUGGY] this.ignoreHeaderCase = ignoreHeaderCase; [FE] NoClassDefFoundError [CONTEXT] this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; [BUGGY] this.ignoreHeaderCase = ignoreHeaderCase; [BUGGY] validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	433	433	10	replace	
46	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] this.commentMarker = commentStart; this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; [BUGGY] [BUGGY] this.ignoreHeaderCase = ignoreHeaderCase; validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	433	433	10	add	
47	[BUG] [BUGGY] validate(); [FE] NoClassDefFoundError [CONTEXT] this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; [BUGGY] validate(); [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	434	434	10	replace	
48	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] this.escapeCharacter = escape; this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; [BUGGY] [BUGGY] validate(); } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	434	434	10	add	
49	[BUG] [BUGGY] } [FE] NoClassDefFoundError [CONTEXT] this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); [BUGGY] } [BUGGY]  [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	435	435	10	replace	
50	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] this.ignoreSurroundingSpaces = ignoreSurroundingSpaces; this.allowMissingColumnNames = allowMissingColumnNames; this.ignoreEmptyLines = ignoreEmptyLines; this.recordSeparator = recordSeparator; this.nullString = nullString; this.headerComments = toStringArray(headerComments); this.header = header == null ? null : header.clone(); this.skipHeaderRecord = skipHeaderRecord; this.ignoreHeaderCase = ignoreHeaderCase; validate(); [BUGGY] [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString Object[] headerComments String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames final boolean ignoreHeaderCase [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] headerComments  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	435	435	10	add	
51	[BUG] [BUGGY] public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false); [FE] NoClassDefFoundError [CONTEXT] [BUGGY] public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true,   CRLF, null, null, null, false, false, false); [BUGGY] CRLF, null, null, null, false, false, false); [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	229	230	10	replace	
52	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] [BUGGY] [BUGGY] public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true,   CRLF, null, null, null, false, false, false); CRLF, null, null, null, false, false, false); [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	229	230	10	add	
53	[BUG] [BUGGY] public static final CSVFormat RFC4180 = DEFAULT.withIgnoreEmptyLines(false); [FE] NoClassDefFoundError [CONTEXT] [BUGGY] public static final CSVFormat RFC4180 = DEFAULT.withIgnoreEmptyLines(false); [BUGGY]  [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	246	246	10	replace	
54	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] [BUGGY] [BUGGY] public static final CSVFormat RFC4180 = DEFAULT.withIgnoreEmptyLines(false); [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	246	246	10	add	
55	[BUG] [BUGGY] public static final CSVFormat EXCEL = DEFAULT.withIgnoreEmptyLines(false).withAllowMissingColumnNames(); [FE] NoClassDefFoundError [CONTEXT] [BUGGY] public static final CSVFormat EXCEL = DEFAULT.withIgnoreEmptyLines(false).withAllowMissingColumnNames(); [BUGGY]  [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	276	276	10	replace	
56	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] [BUGGY] [BUGGY] public static final CSVFormat EXCEL = DEFAULT.withIgnoreEmptyLines(false).withAllowMissingColumnNames(); [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	276	276	10	add	
57	[BUG] [BUGGY] public static final CSVFormat TDF = DEFAULT.withDelimiter(TAB).withIgnoreSurroundingSpaces(); [FE] NoClassDefFoundError [CONTEXT] [BUGGY] public static final CSVFormat TDF = DEFAULT.withDelimiter(TAB).withIgnoreSurroundingSpaces(); [BUGGY]  [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	292	292	10	replace	
58	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] [BUGGY] [BUGGY] public static final CSVFormat TDF = DEFAULT.withDelimiter(TAB).withIgnoreSurroundingSpaces(); [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	292	292	10	add	
59	[BUG] [BUGGY] public static final CSVFormat MYSQL = DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false) .withQuote(null).withRecordSeparator(LF); [FE] NoClassDefFoundError [CONTEXT] [BUGGY] public static final CSVFormat MYSQL = DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false)   .withQuote(null).withRecordSeparator(LF); [BUGGY] .withQuote(null).withRecordSeparator(LF); [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	318	319	10	replace	
60	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] [BUGGY] [BUGGY] public static final CSVFormat MYSQL = DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false)   .withQuote(null).withRecordSeparator(LF); .withQuote(null).withRecordSeparator(LF); [CLASS] CSVFormat Predefined  [VARIABLES] 	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	318	319	10	add	
61	[BUG] [BUGGY] return c == LF || c == CR; [FE] NoClassDefFoundError [CONTEXT] private static boolean isLineBreak(final char c) { [BUGGY] return c == LF || c == CR; [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] isLineBreak [RETURN_TYPE] boolean  final char c [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	330	330	10	replace	
62	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private static boolean isLineBreak(final char c) { [BUGGY] [BUGGY] return c == LF || c == CR; } [CLASS] CSVFormat Predefined [METHOD] isLineBreak [RETURN_TYPE] boolean  final char c [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	330	330	10	add	
63	[BUG] [BUGGY] return c != null && isLineBreak(c.charValue()); [FE] NoClassDefFoundError [CONTEXT] private static boolean isLineBreak(final Character c) { [BUGGY] return c != null && isLineBreak(c.charValue()); [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] isLineBreak [RETURN_TYPE] boolean  Character c [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	342	342	10	replace	
64	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private static boolean isLineBreak(final Character c) { [BUGGY] [BUGGY] return c != null && isLineBreak(c.charValue()); } [CLASS] CSVFormat Predefined [METHOD] isLineBreak [RETURN_TYPE] boolean  Character c [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format String nullString recordSeparator String[] header headerComments Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	342	342	10	add	
65	[BUG] [BUGGY] if (values == null) { [FE] NoClassDefFoundError [CONTEXT] private String[] toStringArray(final Object[] values) { [BUGGY] if (values == null) { [BUGGY] return null; } final String[] strings = new String[values.length]; for (int i = 0; i < values.length; i++) { final Object value = values[i]; strings[i] = value == null ? null : value.toString(); } return strings; } [CLASS] CSVFormat Predefined [METHOD] toStringArray [RETURN_TYPE] String[]  Object[] values [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format Object value String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] values int i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	
66	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private String[] toStringArray(final Object[] values) { [BUGGY] [BUGGY] if (values == null) { return null; } final String[] strings = new String[values.length]; for (int i = 0; i < values.length; i++) { final Object value = values[i]; strings[i] = value == null ? null : value.toString(); } return strings; } [CLASS] CSVFormat Predefined [METHOD] toStringArray [RETURN_TYPE] String[]  Object[] values [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format Object value String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] values int i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	add	
67	[BUG] [BUGGY] return null; [FE] NoClassDefFoundError [CONTEXT] private String[] toStringArray(final Object[] values) { if (values == null) { [BUGGY] return null; [BUGGY] } final String[] strings = new String[values.length]; for (int i = 0; i < values.length; i++) { final Object value = values[i]; strings[i] = value == null ? null : value.toString(); } return strings; } [CLASS] CSVFormat Predefined [METHOD] toStringArray [RETURN_TYPE] String[]  Object[] values [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format Object value String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] values int i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	439	439	10	replace	
68	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private String[] toStringArray(final Object[] values) { if (values == null) { [BUGGY] [BUGGY] return null; } final String[] strings = new String[values.length]; for (int i = 0; i < values.length; i++) { final Object value = values[i]; strings[i] = value == null ? null : value.toString(); } return strings; } [CLASS] CSVFormat Predefined [METHOD] toStringArray [RETURN_TYPE] String[]  Object[] values [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format Object value String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID Object[] values int i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	439	439	10	add	
69	[BUG] [BUGGY] return recordSeparator; [FE] NoClassDefFoundError [CONTEXT] public String getRecordSeparator() { [BUGGY] return recordSeparator; [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] getRecordSeparator [RETURN_TYPE] String  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	659	659	10	replace	
70	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public String getRecordSeparator() { [BUGGY] [BUGGY] return recordSeparator; } [CLASS] CSVFormat Predefined [METHOD] getRecordSeparator [RETURN_TYPE] String  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	659	659	10	add	
71	[BUG] [BUGGY] if (isLineBreak(delimiter)) { [FE] NoClassDefFoundError [CONTEXT] private void validate() throws IllegalArgumentException { [BUGGY] if (isLineBreak(delimiter)) { [BUGGY] throw new IllegalArgumentException("The delimiter cannot be a line break"); } if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	814	814	10	replace	
72	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private void validate() throws IllegalArgumentException { [BUGGY] [BUGGY] if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	814	814	10	add	
73	[BUG] [BUGGY] if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { [FE] NoClassDefFoundError [CONTEXT] private void validate() throws IllegalArgumentException { if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } [BUGGY] if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { [BUGGY] throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } if (commentMarker != null && delimiter == commentMarker.charValue()) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	
74	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private void validate() throws IllegalArgumentException { if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } [BUGGY] [BUGGY] if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } if (commentMarker != null && delimiter == commentMarker.charValue()) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	add	
75	[BUG] [BUGGY] if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { [FE] NoClassDefFoundError [CONTEXT] private void validate() throws IllegalArgumentException { if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } [BUGGY] if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { [BUGGY] throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } if (commentMarker != null && delimiter == commentMarker.charValue()) { throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	823	823	10	replace	
76	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] private void validate() throws IllegalArgumentException { if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } [BUGGY] [BUGGY] if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } if (commentMarker != null && delimiter == commentMarker.charValue()) { throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	823	823	10	add	
77	[BUG] [BUGGY] if (commentMarker != null && delimiter == commentMarker.charValue()) { [FE] NoClassDefFoundError [CONTEXT] if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } [BUGGY] if (commentMarker != null && delimiter == commentMarker.charValue()) { [BUGGY] throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	
78	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) { throw new IllegalArgumentException("The quoteChar character and the delimiter cannot be the same ('" + quoteCharacter + "')"); } if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } [BUGGY] [BUGGY] if (commentMarker != null && delimiter == commentMarker.charValue()) { throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	add	
79	[BUG] [BUGGY] if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { [FE] NoClassDefFoundError [CONTEXT] if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } if (commentMarker != null && delimiter == commentMarker.charValue()) { throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } [BUGGY] if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { [BUGGY] throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	833	833	10	replace	
80	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) { throw new IllegalArgumentException("The escape character and the delimiter cannot be the same ('" + escapeCharacter + "')"); } if (commentMarker != null && delimiter == commentMarker.charValue()) { throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } [BUGGY] [BUGGY] if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	833	833	10	add	
81	[BUG] [BUGGY] if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { [FE] NoClassDefFoundError [CONTEXT] if (commentMarker != null && delimiter == commentMarker.charValue()) { throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } [BUGGY] if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { [BUGGY] throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { throw new IllegalArgumentException("No quotes mode set but no escape character is set"); }  if (header != null) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	replace	
82	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] if (commentMarker != null && delimiter == commentMarker.charValue()) { throw new IllegalArgumentException("The comment start character and the delimiter cannot be the same ('" + commentMarker + "')"); } if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } [BUGGY] [BUGGY] if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { throw new IllegalArgumentException("No quotes mode set but no escape character is set"); }  if (header != null) { [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	838	838	10	add	
83	[BUG] [BUGGY] if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { [FE] NoClassDefFoundError [CONTEXT] if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } [BUGGY] if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { [BUGGY] throw new IllegalArgumentException("No quotes mode set but no escape character is set"); }  if (header != null) { final Set<String> dupCheck = new HashSet<String>(); for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	
84	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start character and the quoteChar cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } [BUGGY] [BUGGY] if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { throw new IllegalArgumentException("No quotes mode set but no escape character is set"); }  if (header != null) { final Set<String> dupCheck = new HashSet<String>(); for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	add	
85	[BUG] [BUGGY] if (header != null) { [FE] NoClassDefFoundError [CONTEXT] if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { throw new IllegalArgumentException("No quotes mode set but no escape character is set"); }  [BUGGY] if (header != null) { [BUGGY] final Set<String> dupCheck = new HashSet<String>(); for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } } } [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	848	848	10	replace	
86	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) { throw new IllegalArgumentException("The comment start and the escape character cannot be the same ('" + commentMarker + "')"); } if (escapeCharacter == null && quoteMode == QuoteMode.NONE) { throw new IllegalArgumentException("No quotes mode set but no escape character is set"); }  [BUGGY] [BUGGY] if (header != null) { final Set<String> dupCheck = new HashSet<String>(); for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } } } [CLASS] CSVFormat Predefined [METHOD] validate [RETURN_TYPE] void  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	848	848	10	add	
88	[BUG] [BUGGY] if (isLineBreak(delimiter)) { [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withDelimiter(final char delimiter) { [BUGGY] if (isLineBreak(delimiter)) { [BUGGY] throw new IllegalArgumentException("The delimiter cannot be a line break"); } return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withDelimiter [RETURN_TYPE] CSVFormat  final char delimiter [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	replace	
89	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withDelimiter(final char delimiter) { [BUGGY] [BUGGY] if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withDelimiter [RETURN_TYPE] CSVFormat  final char delimiter [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	904	904	10	add	
90	[BUG] [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header,  skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withDelimiter(final char delimiter) { if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,    ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header,        skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); [BUGGY] ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withDelimiter [RETURN_TYPE] CSVFormat  final char delimiter [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	907	909	10	replace	
91	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withDelimiter(final char delimiter) { if (isLineBreak(delimiter)) { throw new IllegalArgumentException("The delimiter cannot be a line break"); } [BUGGY] [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,    ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header,        skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withDelimiter [RETURN_TYPE] CSVFormat  final char delimiter [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	907	909	10	add	
92	[BUG] [BUGGY] return withEscape(Character.valueOf(escape)); [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withEscape(final char escape) { [BUGGY] return withEscape(Character.valueOf(escape)); [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] withEscape [RETURN_TYPE] CSVFormat  final char escape [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	922	922	10	replace	
93	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withEscape(final char escape) { [BUGGY] [BUGGY] return withEscape(Character.valueOf(escape)); } [CLASS] CSVFormat Predefined [METHOD] withEscape [RETURN_TYPE] CSVFormat  final char escape [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	922	922	10	add	
94	[BUG] [BUGGY] if (isLineBreak(escape)) { [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withEscape(final Character escape) { [BUGGY] if (isLineBreak(escape)) { [BUGGY] throw new IllegalArgumentException("The escape character cannot be a line break"); } return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withEscape [RETURN_TYPE] CSVFormat  Character escape [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	
95	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withEscape(final Character escape) { [BUGGY] [BUGGY] if (isLineBreak(escape)) { throw new IllegalArgumentException("The escape character cannot be a line break"); } return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withEscape [RETURN_TYPE] CSVFormat  Character escape [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	add	
96	[BUG] [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord,  allowMissingColumnNames, ignoreHeaderCase); [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withEscape(final Character escape) { if (isLineBreak(escape)) { throw new IllegalArgumentException("The escape character cannot be a line break"); } [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escape, ignoreSurroundingSpaces,    ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord,        allowMissingColumnNames, ignoreHeaderCase); [BUGGY] ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withEscape [RETURN_TYPE] CSVFormat  Character escape [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	938	940	10	replace	
97	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withEscape(final Character escape) { if (isLineBreak(escape)) { throw new IllegalArgumentException("The escape character cannot be a line break"); } [BUGGY] [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escape, ignoreSurroundingSpaces,    ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord,        allowMissingColumnNames, ignoreHeaderCase); ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase); } [CLASS] CSVFormat Predefined [METHOD] withEscape [RETURN_TYPE] CSVFormat  Character escape [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	938	940	10	add	
98	[BUG] [BUGGY] return this.withAllowMissingColumnNames(true); [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withAllowMissingColumnNames() { [BUGGY] return this.withAllowMissingColumnNames(true); [BUGGY] } [CLASS] CSVFormat Predefined [METHOD] withAllowMissingColumnNames [RETURN_TYPE] CSVFormat  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments labels strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	
99	[BUG] [BUGGY] [FE] NoClassDefFoundError [CONTEXT] public CSVFormat withAllowMissingColumnNames() { [BUGGY] [BUGGY] return this.withAllowMissingColumnNames(true); } [CLASS] CSVFormat Predefined [METHOD] withAllowMissingColumnNames [RETURN_TYPE] CSVFormat  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreHeaderCase ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF format other String format hdr nullString recordSeparator String[] header headerComments labels strings Predefined Default Excel MySQL RFC4180 TDF long serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	add	
