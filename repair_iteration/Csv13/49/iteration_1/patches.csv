bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames(true,  false);  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames(true,  false);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames(true,  false);	  return    this.withAllowMissingColumnNames(false,   "   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames(true,  true);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames(true,  true);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames(true,  true);	  return    this.withAllowMissingColumnNames(false,   "   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames(true,  null);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames(true,  null);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames(true,  null);	  return    this.withAllowMissingColumnNames(false,   "   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames(true,  nullString);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames(true,  nullString);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames(true,  nullString);	  return    this.withAllowMissingColumnNames(false,   "   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames(false,  true,  false);  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames(false,  true,  false);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames(false,  true,  false);	  return    this.withAllowMissingColumnNames(false,    true);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  format;  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  format;  }  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  format;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  format;  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  format;  }  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  format;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  for(Character  c  =  getLowerCase();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  format;  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  for(Character  c  =  getLowerCase();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  format;  }  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	for(Character  c  =  getLowerCase();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  format;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  new  CSVFormat(c);  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  new  CSVFormat(c);  }  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  new  CSVFormat(c);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames();  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames();  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames();	  return    this.withAllowMissingColumnNames(false);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  return  this.withoutAllowMissingColumnNames(true,  true);  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withoutAllowMissingColumnNames(true,  true);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withoutAllowMissingColumnNames(true,  true);	  return    this.withAllowMissingColumnNames(false,    false);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames(true,   " ");  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames(true,   " ");  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames(true,   " ");	  return    this.withAllowMissingColumnNames(false,   "   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  return  this.withAllowMissingCOLumnNames(true,  true);  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingCOLumnNames(true,  true);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingCOLumnNames(true,  true);	  return    this.withAllowMissingColumnNames(false,    false);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  return  this.withAllowMissingColumnNames(false,  true,  ignoreEmptyLines);  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.withAllowMissingColumnNames(false,  true,  ignoreEmptyLines);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.withAllowMissingColumnNames(false,  true,  ignoreEmptyLines);	  return    this.withAllowMissingColumnNames(false,    true);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  return  withFormat(null);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  withFormat(null);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  withFormat(null);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  return  withColumnNames(new  String[]  {  }  );  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  withColumnNames(new  String[]  {  }  );  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  withColumnNames(new  String[]  {  }  );	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  return  withColumnNames(getDefaultColumn());  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  withColumnNames(getDefaultColumn());  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  withColumnNames(getDefaultColumn());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  return  withCSVFormat(null);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  withCSVFormat(null);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  withCSVFormat(null);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  this;  }  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  this;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  withFormat(c);  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  withFormat(c);  }  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!allowMissingColumnNames)  {  return  withFormat(c);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  new  CSVFormat('  }  ');  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  new  CSVFormat('  }  ');  }  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	for(Character  c  =  getCurrentCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!allowMissingColumnNames)  {  return  new  CSVFormat('  }  ');  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  return  this.allowMissingColumnNames(true,  false);  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.allowMissingColumnNames(true,  false);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.allowMissingColumnNames(true,  false);	  return    this.withAllowMissingColumnNames(false,    false);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  return  this.allowMissingColumnNames(true);  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withAllowMissingColumnNames()  {    [BUGGY]  return  this.allowMissingColumnNames(true);  [BUGGY]    }  [CLASS]  CSVFormat  Predefined  [METHOD]  withAllowMissingColumnNames  [RETURN_TYPE]  CSVFormat  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  labels  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	1068	1068	10	replace	return  this.allowMissingColumnNames(true);	  return    this.withAllowMissingColumnNames(false);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
