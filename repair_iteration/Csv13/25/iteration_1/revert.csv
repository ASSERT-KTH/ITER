projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435validate();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=toStringArray(recordSeparator);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.skipHeaderRecord=skipHeaderRecord;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,headerComments,0,headerComments.length);}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(recordSeparator!=null){this.recordSeparator=ignoreSurroundingSpaces;}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=ignoreSurroundingSpaces;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.commentMarker=quoteMode==null?null:quoteMode.clone();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(!quoteCharacter.equals(delimiter)){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(!quoteCharacter.equals("")){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.skipHeaderRecord=skipHeaderRecord.clone();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.nullString=nullString;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(!quoteCharacter.equals(commentStart)){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(quoteCharacter!=null||!quoteCharacter.equals(delimiter)){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435||!quoteCharacter.equals(delimiter)){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(!quoteCharacter.equals(commentMarker)){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,headerComments,0,headerComments.length);}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(headerComments!=null){for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,headerCom
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,headerComments,0,headerComments.length);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=toStringArray(recordSeparator,header);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=toStringArray(recordSeparator,headerComments);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=toStringArray(recordSeparator,nullString);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(quoteCharacter!=null||!quoteCharacter.equals("")){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(quoteCharacter!=null&&!quoteCharacter.equals("")){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435||!quoteCharacter.equals("")){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=recordSeparator;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=nullString;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=delimiter;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.skipHeaderRecord=skippeHeaderRecord;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.skipHeaderRecord=ignoreHeaderRecord;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.skipHeaderRecord=null;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.commentMarker=quoteMode!=null?null:quoteMode.clone();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435validateSurroundingSpaces();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435validate(nullString);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435validate(recordSeparator);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=ignoreEmptyLines;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435This.recordSeparator=ignoreSurroundingSpaces;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(quoteCharacter!=null&&!quoteCharacter.equals(delimiter)){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(quoteCharacter!=null){thrownewIllegalArgumentException("");}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.skipHeaderRecord=skippingHeaderRecord;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435Object[]headerComments=newObject[headerComments.size()];System.arraycopy(headerComments,0,headerComments,0,headerComments.length);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(headerComments!=null){for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(header!=null){validate();}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(header==null){validate();}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=toStringArray(recordSeparator,delimiter);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435Predefined.checkNotNull(header);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(recordSeparator==null){for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,headerCom
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(headerComments!=null){for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,headerComments
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(recordSeparator==null){for(inti=0;i<headerComments.length;i++){String[]headerComments=newString[headerComments.size()];System.arraycopy(headerComments,0,
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435MutableCharacterDelimiterdelimiter=quoteCharacter.equals(delimiter)?null:quoteCharacter.toLowerCase();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=recordSeparator?null:ignoreSurroundingSpaces;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.recordSeparator=recordSeparator?nullString:ignoreSurroundingSpaces;
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.quoteCharacter=quoteCharacter==null?null:quoteCharacter.clone();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.quoteCharacter=quoteCharacter!=null?null:quoteCharacter.clone();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.commentMarker=quoteMode==null?null:quoteMode.toString();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435if(!isEmptyLines){validate();}
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java435this.skipHeaderRecord=skippedHeaderRecord;
