bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  return  headerComments[i]!=  null?  null  :  headerComments[i];  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  return  headerComments[i]!=  null?  null  :  headerComments[i];  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  return  headerComments[i]!=  null?  null  :  headerComments[i];  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  final  Object[]  values  =  new  Object[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  final  Object[]  values  =  new  Object[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	final  Object[]  values  =  new  Object[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  strings[	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    =    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    =    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]!=  null?  null  :  toString();  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]!=  null?  null  :  toString();  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]!=  null?  null  :  toString();  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  final  Object[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  final  Object[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	final  Object[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  final  Object[]  headerComments  =  new  Object[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  final  Object[]  headerComments  =  new  Object[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	final  Object[]  headerComments  =  new  Object[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
35	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerCom	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
43	[BUG]  [BUGGY]  final  Object[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  final  Object[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	final  Object[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    =    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers!=  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  if(headers!=  null)  {  final  Object[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers!=  null)  {  final  Object[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers!=  null)  {  final  Object[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  return  headerComments[i]!=  null;  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    return    headerComments[i]    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  if(values  ==  null  ||  values.length  <  2)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values  ==  null  ||  values.length  <  2)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values  ==  null  ||  values.length  <  2)  {	  if(values    ==    null    ||    values.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  =	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    =    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  final  String[]  strings  =  new  String[values.length];  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[i]	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[i]    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  strings[	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    String[]    strings    =    new    String[values.length];    for(int    i    =    0;    i    <    values.length;    i++)    {    strings[    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  if(headers  ==  null)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  String[]  toStringArray(final  Object[]  values)  {      [BUGGY]  if(headers  ==  null)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {  [BUGGY]      return  null;  }  final  String[]  strings  =  new  String[values.length];  for  (int  i  =  0;  i  <  values.length;  i++)  {  final  Object  value  =  values[i];  strings[i]  =  value  ==  null  ?  null  :  value.toString();  }  return  strings;  }  [CLASS]  CSVFormat  Predefined  [METHOD]  toStringArray  [RETURN_TYPE]  String[]  Object[]  values  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  Object  value  String  format  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  Object[]  values  int  i  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	438	438	10	replace	if(headers  ==  null)  {  final  String[]  headerComments  =  new  String[size()  ];  for(int  i  =  0;  i  <  headerComments.length;  i++)  {	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    final    String[]    headerComments    =    new    String[size()    ];    for(int    i    =    0;    i    <    headerComments.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
