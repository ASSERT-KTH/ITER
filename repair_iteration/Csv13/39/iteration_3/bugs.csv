bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.toString())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.toString())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteCharacter.toString())  {	  if(delimiter!=    null    &&    delimiter    ==    quoteCharacter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
2	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.toString().equals(quoteChar.toString()))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.toString().equals(quoteChar.toString()))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar.toString().equals(quoteChar.toString()))  {	  if(delimiter!=    null    &&    delimiter    ==    quoteCharacter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
3	[BUG]  [BUGGY]  ||  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  ||  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	||  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  ||  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  ||  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	||  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  String  delimiter  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  String  delimiter  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	String  delimiter  =  quoteChar.charValue();	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar!=  null.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar!=  null.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(commentStart!=  null  &&  quoteChar!=  null.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null.booleanValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null.booleanValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar!=  null.booleanValue())  {	  if(delimiter!=    null    &&    quoteChar!=    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter!=  null.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter!=  null.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteCharacter!=  null.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteCharacter.length())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteCharacter.length())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteCharacter.length())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.length())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
10	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  delimiter.length())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteChar!=  delimiter.length())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.length())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
12	[BUG]  [BUGGY]  String  delimiter  =  quoteCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  String  delimiter  =  quoteCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	String  delimiter  =  quoteCharacter.charValue();	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
13	[BUG]  [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(quoteCharacter!=  null  &&  quoteCharacter.charValue()  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteCharacter.charValue()    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  Character  delimiter  =  quoteCharacter.getDelimiter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteCharacter.getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  quoteCharacter.getDelimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  quoteChar.delimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  Character  delimiter  =  quoteCharacter.delimiter();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteCharacter.delimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  quoteCharacter.delimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Character  character  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  character  =  delimiter.charValue();	  Character    character    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.toCharArray();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.toCharArray();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  character  =  quoteCharacter.toCharArray();	  Character    character    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(quoteCharacter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(quoteCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteCharacter.equals(quoteCharacter))  {	  if(delimiter!=    null    &&    quoteCharacter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteCharacter.equals(commentStart))  {	  if(delimiter!=    null    &&    quoteCharacter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
21	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.charValue()  ==  quoteStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.charValue()  ==  quoteStart.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteCharacter.charValue()  ==  quoteStart.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  quoteStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  quoteStart.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteChar.charValue()  ==  quoteStart.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue()    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar.equals(c))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
25	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
26	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(commentStart!=  null  &&  quoteChar.equals(commentMarker))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
27	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
28	[BUG]  [BUGGY]  if  (delimiter!=  quoteCharacter.length())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quoteCharacter.length())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  quoteCharacter.length())  {	  if    (delimiter!=    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(quoteChar!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
30	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar.charValue()  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteChar.charValue()  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(quoteChar!=  null  ||  quoteChar.charValue()  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(quoteChar!=  null  ||  quoteChar  ==  delimiter.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteChar  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(quoteChar!=  null  ||  quoteChar  ==  delimiter)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
33	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  >=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  >=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar  >=  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  Character  delimiter  =  quoteCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  quoteCharacter.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  Character  delimiter  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  c.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  Character  delimiter  =  quoteCharacter.toCharArray();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteCharacter.toCharArray();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  quoteCharacter.toCharArray();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(quoteChar!=  null  &&  quoteChar!=  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  if  (delimiter  ==  quoteCharacter.length())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteCharacter.length())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter  ==  quoteCharacter.length())  {	  if    (delimiter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
41	[BUG]  [BUGGY]  if  (delimiter  ==  quoteCharacter.toString())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteCharacter.toString())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter  ==  quoteCharacter.toString())  {	  if    (delimiter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
42	[BUG]  [BUGGY]  parseCharacter(c,  quoteCharacter))  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parseCharacter(c,  quoteCharacter))  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parseCharacter(c,  quoteCharacter))  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
43	[BUG]  [BUGGY]  QuoteMode  quoteMode  =  quoteChar.getDelimiter();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  QuoteMode  quoteMode  =  quoteChar.getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	QuoteMode  quoteMode  =  quoteChar.getDelimiter();	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
44	[BUG]  [BUGGY]  QuoteMode  quoteMode  =  quoteChar.getCSV();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  QuoteMode  quoteMode  =  quoteChar.getCSV();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	QuoteMode  quoteMode  =  quoteChar.getCSV();	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  QuoteMode  quoteMode  =  getCommentStart(quoteChar);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  QuoteMode  quoteMode  =  getCommentStart(quoteChar);  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	QuoteMode  quoteMode  =  getCommentStart(quoteChar);	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
46	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.characterValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.characterValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  character  =  quoteCharacter.characterValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteCharacter.equals(c))  {	  if    (delimiter!=    null    &&    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteDelimiter.length())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteDelimiter.length())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteDelimiter.length())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteDelimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteDelimiter.charValue()  ==  quoteDelimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteDelimiter.charValue()  ==  quoteDelimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteDelimiter.charValue()  ==  quoteDelimiter.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteDelimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  hingeger!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  hingeger!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	hingeger!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
51	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
52	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedException( " ");  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedException( " ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	aughtExceptionHandler.throwAsUnexpectedException( " ");	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  if  (delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter  ==  quoteChar.length())  {	  if    (delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
55	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.length()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteChar.length()  >  0)  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.length())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
57	[BUG]  [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteCharacter.equals(commentMarker))  {	  if    (delimiter!=    null    &&    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar.toString())  {	  if(delimiter!=    null    &&    delimiter    ==    quoteCharacter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
60	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  parentMarker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parentMarker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parentMarker!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  parentMarker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parentMarker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parentMarker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " "));  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " "));  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	aughtExceptionHandler(new  IllegalArgumentException( " "));	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteCharacter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
66	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue()    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  Character  delimiter  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  delimiter.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
68	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar!=  null)  {	  if(delimiter!=    null    &&    quoteChar!=    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  delimiter.equals(commentMarker))  {	  if    (delimiter!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.length())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.length())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteStart.length())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteCharacter.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  quoteCharacter.charValue()  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteCharacter.charValue()    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  Character  character  =  escapeCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  escapeCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  character  =  escapeCharacter.charValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  Character  character  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  character  =  c.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  character  =  c.charValue();	  Character    character    =    quoteCharacter.charValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  if  (delimiter  ==  quoteCharacter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteCharacter.toCharArray())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter  ==  quoteCharacter.toCharArray())  {	  if    (delimiter    ==    quoteCharacter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
75	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  delimiter!=  quoteChar.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
76	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter!=  quoteDelimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter!=  quoteDelimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  delimiter!=  quoteDelimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  Character  delimiter  =  c.getDelimiter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.getDelimiter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	Character  delimiter  =  c.getDelimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
79	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.getCharValue())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.getCharValue())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter  ==  quoteCharacter.getCharValue())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
80	[BUG]  [BUGGY]  if(delimiter  ==  quoteCharacter.toCharArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteCharacter.toCharArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter  ==  quoteCharacter.toCharArray())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
81	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  parseCharacter(c,  delimiter))  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parseCharacter(c,  delimiter))  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parseCharacter(c,  delimiter))  {  throw  new  IllegalArgumentException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +   "') ");  }	  if(delimiter    ==    quoteCharacter.charValue())    {    throw    new    IllegalArgumentException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteCharacter    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
83	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  quoteChar.charValue())  {	  if    (delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
84	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  null.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  null.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteChar  ==  null.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteCharacter  ==  quoteCharacter.toString())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteCharacter  ==  quoteCharacter.toString())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if(delimiter!=  null  &&  quoteCharacter  ==  quoteCharacter.toString())  {	  if(delimiter!=    null    &&    delimiter    ==    quoteCharacter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.getChar())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.getChar())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteStart.getChar())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  + "') ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  + "') ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parent!=  null)  {  throw  new  IllegalArgumentException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  + "') ");  }	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
88	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  parent.getParent())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parent!=  null  &&  parent  ==  parent.getParent())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parent!=  null  &&  parent  ==  parent.getParent())  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
89	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
90	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  delimiter  ==  quoteCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }      [BUGGY]  parent!=  null  &&  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	828	828	10	replace	parent!=  null  &&  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
