bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteCharacter.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteCharacter.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  ||  quoteCharacter.charValue()  ==  delimiter)  {	  if(quoteChar!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {	  if(quoteChar!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  if  (quoteCharacter  ==  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteCharacter  ==  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteCharacter  ==  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {	  if    (quoteCharacter!=    null    &&    quoteCharacter.charValue()    ==    DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(c,  quoteMode);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(c,  quoteMode);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(c,  quoteMode);	  Character    quoteCharacter    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(c  +  1);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(c  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(c  +  1);	  Character    quoteCharacter    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(commentStart);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(commentStart);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(commentStart);	  Character    quoteCharacter    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  if  (quoteChar  ==  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar  ==  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar  ==  null  &&  quoteChar!=  delimiter.charValue())  {	  if    (quoteChar    <    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
8	[BUG]  [BUGGY]  if  (quoteChar  >=  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar  >=  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar  >=  null  &&  quoteChar!=  delimiter.charValue())  {	  if    (quoteChar    <    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
9	[BUG]  [BUGGY]  if  (quoteChar!=  null  ||  quoteChar!=  Delimiter.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  ||  quoteChar!=  Delimiter.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  ||  quoteChar!=  Delimiter.DEFAULT)  {	  if    (quoteChar!=    null    &&    quoteChar!=    Delimiter.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(commentMarker);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(commentMarker);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(commentMarker);	  Character    quoteChar    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
11	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(quote);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(quote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(quote);	  Character    quoteChar    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(commentStart);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(commentStart);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(commentStart);	  Character    quoteChar    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  Character  quoteCharacter  =  getQuoteChar(quote);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getQuoteChar(quote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getQuoteChar(quote);	  Character    quoteCharacter    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  Character  quoteCharacter  =  getQuoteChar(c);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getQuoteChar(c);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getQuoteChar(c);	  Character    quoteCharacter    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter  ==  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter  ==  null)  {	  if(quoteChar!=    null    &&    quoteCharacter!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
16	[BUG]  [BUGGY]  if(quoteChar  ==  null  &&  quoteCharacter!=  null)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar  ==  null  &&  quoteCharacter!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar  ==  null  &&  quoteCharacter!=  null)  {	  if(quoteChar!=    null    &&    quoteCharacter!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
17	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if    (quoteChar!=    null    &&    quoteChar.charValue()!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
18	[BUG]  [BUGGY]  if  (quoteChar!=  null  ||  quoteChar.charValue()!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  ||  quoteChar.charValue()!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  ||  quoteChar.charValue()!=  delimiter.charValue())  {	  if    (quoteChar!=    null    &&    quoteChar.charValue()!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
19	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart().charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart().charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart().charValue();	  Character    quoteCharacter    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart().charAt(0);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart().charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart().charAt(0);	  Character    quoteCharacter    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  Character  quoteChar  =  getQuoteChar(quote);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getQuoteChar(quote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getQuoteChar(quote);	  Character    quoteChar    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  Character  quoteChar  =  getQuoteChar(c);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getQuoteChar(c);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getQuoteChar(c);	  Character    quoteChar    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  Character  quoteChar  =  getQuoteChar().charValue();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getQuoteChar().charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getQuoteChar().charValue();	  Character    quoteChar    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  if(quoteCharacter  ==  null  &&  quoteCharacter  <  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteCharacter  ==  null  &&  quoteCharacter  <  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteCharacter  ==  null  &&  quoteCharacter  <  delimiter.charValue())  {	  if(quoteCharacter!=    null    &&    quoteCharacter    <    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
25	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteCharacter  <  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteCharacter  <  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(commentStart!=  null  &&  quoteCharacter  <  delimiter.charValue())  {	  if(quoteCharacter!=    null    &&    quoteCharacter    <    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
26	[BUG]  [BUGGY]  if(quoteCharacter!=  null  ||  quoteCharacter  <  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteCharacter!=  null  ||  quoteCharacter  <  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteCharacter!=  null  ||  quoteCharacter  <  delimiter.charValue())  {	  if(quoteCharacter!=    null    &&    quoteCharacter    <    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
27	[BUG]  [BUGGY]  Character  character  =  getCharacter().charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  character  =  getCharacter().charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  character  =  getCharacter().charValue();	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  Character  character  =  getCharacter().charAt(0);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  character  =  getCharacter().charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  character  =  getCharacter().charAt(0);	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  Character  character  =  getCharacterStart();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  character  =  getCharacterStart();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  character  =  getCharacterStart();	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
30	[BUG]  [BUGGY]  if  (quoteChar!=  null  ||  quoteCharacter!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  ||  quoteCharacter!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  ||  quoteCharacter!=  delimiter.charValue())  {	  if    (quoteChar!=    null    ||    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  DEFAULT)  {	  if    (quoteChar!=    null    &&    quoteChar.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
32	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar  <  null)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteChar  <  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  ||  quoteChar  <  null)  {	  if(quoteChar!=    null    &&    quoteChar    <    null)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  =  null)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  =  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteChar  <  =  null)  {	  if(quoteChar!=    null    &&    quoteChar    <    null)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
34	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter  <  null)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter  <  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter  <  null)  {	  if(quoteChar!=    null    &&    quoteChar    <    null)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
35	[BUG]  [BUGGY]  if(quoteChar  ==  null  ||  quoteChar!=  null)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar  ==  null  ||  quoteChar!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar  ==  null  ||  quoteChar!=  null)  {	  if(quoteChar    ==    null    &&    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteChar  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  ||  quoteChar  ==  null)  {	  if(quoteChar!=    null    &&    quoteChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  Character  quoteCharacter  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  c.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  c.charValue();	  Character    quoteCharacter    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
38	[BUG]  [BUGGY]  Character  quoteCharacter  =  quoteCharacter.charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  quoteCharacter.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  quoteCharacter.charValue();	  Character    quoteCharacter    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
39	[BUG]  [BUGGY]  Character  quoteCharacter  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  quoteChar.charValue();	  Character    quoteCharacter    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
40	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(c,  quoteMode);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(c,  quoteMode);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(c,  quoteMode);	  Character    quoteChar    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(c,  quoteChar);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(c,  quoteChar);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(c,  quoteChar);	  Character    quoteChar    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(c  +  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(c  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(c  +  1);	  Character    quoteChar    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar  >=  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteChar  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  ||  quoteChar  >=  null)  {	  if(quoteChar!=    null    ||    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter!=  delimiter.charValue())  {	  if    (commentStart!=    null    &&    quoteCharacter!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(commentMarker);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(commentMarker);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(commentMarker);	  Character    quoteCharacter    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
46	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(quote);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(quote);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(quote);	  Character    quoteCharacter    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
47	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {	  if    (commentStart!=    null    &&    quoteCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteChar  <  delimiter.charValue())  {	  if(quoteCharacter!=    null    &&    quoteCharacter    <    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
49	[BUG]  [BUGGY]  if(quoteChar  <  null  &&  quoteChar  <  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar  <  null  &&  quoteChar  <  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar  <  null  &&  quoteChar  <  delimiter.charValue())  {	  if(quoteCharacter!=    null    &&    quoteCharacter    <    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
50	[BUG]  [BUGGY]  if(quoteChar  ==  null  &&  quoteChar  <  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar  ==  null  &&  quoteChar  <  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar  ==  null  &&  quoteChar  <  delimiter.charValue())  {	  if(quoteCharacter!=    null    &&    quoteCharacter    <    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
51	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(delimiter,  quoteChar);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(delimiter,  quoteChar);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(delimiter,  quoteChar);	  Character    quoteChar    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  Character  quoteCharacter  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  character.charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  character.charValue();	  Character    quoteCharacter    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
53	[BUG]  [BUGGY]  Character  quoteCharacter  =  delimiter.charValue()  +  1;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  delimiter.charValue()  +  1;  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  delimiter.charValue()  +  1;	  Character    quoteCharacter    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
54	[BUG]  [BUGGY]  Character  quoteChar  =  getQuoteChar(delimiter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getQuoteChar(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getQuoteChar(delimiter);	  Character    quoteChar    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  Character  quoteCharacter  =  getQuoteChar(delimiter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getQuoteChar(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getQuoteChar(delimiter);	  Character    quoteCharacter    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
56	[BUG]  [BUGGY]  Character  quoteCharacter  =  getQuoteChar().charValue();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getQuoteChar().charValue();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getQuoteChar().charValue();	  Character    quoteCharacter    =    getQuoteChar();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
57	[BUG]  [BUGGY]  Character  character  =  getCharacter(quoteChar);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  character  =  getCharacter(quoteChar);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  character  =  getCharacter(quoteChar);	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
58	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar  >=  null)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteChar  >=  null)  {	  if(quoteChar!=    null    &&    quoteChar    <    null)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
59	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteChar  <  =  0)  {	  if    (commentStart!=    null    &&    quoteCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar  ==  Delimiter.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar  ==  Delimiter.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar  ==  Delimiter.DEFAULT)  {	  if    (quoteChar!=    null    &&    quoteChar!=    Delimiter.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
61	[BUG]  [BUGGY]  if(quoteStart!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteStart!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteStart!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {	  if    (commentStart!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(delimiter,  quoteMode);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(delimiter,  quoteMode);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(delimiter,  quoteMode);	  Character    quoteCharacter    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
63	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(delimiter  +  1);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(delimiter  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(delimiter  +  1);	  Character    quoteCharacter    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
64	[BUG]  [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter  >=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter  >=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteCharacter!=  null  &&  quoteCharacter  >=  delimiter.charValue())  {	  if(quoteCharacter!=    null    &&    quoteCharacter    <    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
65	[BUG]  [BUGGY]  if(quoteChar  <  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar  <  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar  <  null  &&  quoteCharacter.charValue()  ==  delimiter)  {	  if    (commentStart!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(delimiter,  quoteCharacter);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(delimiter,  quoteCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(delimiter,  quoteCharacter);	  Character    quoteChar    =    getCommentStart(delimiter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
67	[BUG]  [BUGGY]  Character  character  =  getCharacter(quoteCharacter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  character  =  getCharacter(quoteCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  character  =  getCharacter(quoteCharacter);	  Character    character    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
68	[BUG]  [BUGGY]  Character  quoteCharacter  =  delimiter.toCharArray();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  delimiter.toCharArray();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  delimiter.toCharArray();	  Character    quoteCharacter    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
69	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteCharacter!=  Delimiter.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteCharacter!=  Delimiter.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteCharacter!=  Delimiter.DEFAULT)  {	  if    (quoteChar!=    null    &&    quoteChar!=    Delimiter.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.length!=  Delimiter.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.length!=  Delimiter.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar.length!=  Delimiter.DEFAULT)  {	  if    (quoteChar!=    null    &&    quoteChar!=    Delimiter.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteCharacter!=  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteCharacter!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  ||  quoteCharacter!=  null)  {	  if(quoteChar!=    null    ||    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  Character  quoteCharacter  =  getQuoteCharacter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getQuoteCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getQuoteCharacter();	  Character    quoteCharacter    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter.charValue()!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter.charValue()!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter.charValue()!=  delimiter.charValue())  {	  if    (quoteChar!=    null    &&    quoteChar.charValue()!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
74	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(c,  quoteChar);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteCharacter  =  getCommentStart(c,  quoteChar);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(c,  quoteChar);	  Character    quoteCharacter    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  delimiter  ==  commentStart.charValue())  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  delimiter  ==  commentStart.charValue())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  delimiter  ==  commentStart.charValue())  {	  if    (commentStart!=    null    &&    quoteCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
76	[BUG]  [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter!=  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteCharacter!=  null  &&  quoteCharacter!=  null)  {	  if(quoteChar!=    null    &&    quoteCharacter!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
77	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(c,  quoteCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  Character  quoteChar  =  getCommentStart(c,  quoteCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(c,  quoteCharacter);	  Character    quoteChar    =    getCommentStart(c);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.length  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteChar.length  <  =  0)  {	  if(quoteChar!=    null    &&    quoteChar    <    null)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
79	[BUG]  [BUGGY]  if(quoteChar  ==  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(     "The  delimiter  cannot  be  a  line  break     ");  }      [BUGGY]  if(quoteChar  ==  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteCharacter  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escapeCharacter  +       "')     ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar  ==  null  &&  quoteCharacter.charValue()  ==  delimiter)  {	  if(quoteChar!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
