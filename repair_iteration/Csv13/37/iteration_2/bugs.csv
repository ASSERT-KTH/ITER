bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (quoteCharacter!=  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteCharacter!=  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteCharacter!=  null  &&  quoteCharacter.charValue()  ==  DEFAULT)  {	  if    (quoteCharacter!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (commentStart!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (commentStart!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {	  if    (quoteCharacter!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if  (quoteCharacter  ==  null  &&  quoteCharacter!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteCharacter  ==  null  &&  quoteCharacter!=  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteCharacter  ==  null  &&  quoteCharacter!=  delimiter.charValue())  {	  if    (quoteCharacter!=    null    &&    quoteCharacter!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteCharacter!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (commentStart!=  null  &&  quoteCharacter!=  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (commentStart!=  null  &&  quoteCharacter!=  delimiter.charValue())  {	  if    (quoteCharacter!=    null    &&    quoteCharacter!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(c);  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteCharacter  =  getCommentStart(c);  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(c);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(c);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteChar  =  getCommentStart(c);  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(c);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteCharacter  =  getCommentStart();  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  Character  quoteChar  =  getQuoteChar();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteChar  =  getQuoteChar();  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getQuoteChar();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar!=  null)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if(quoteChar!=  null  ||  quoteChar!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  ||  quoteChar!=  null)  {	  if(quoteChar!=    null    &&    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if(quoteChar!=  null  &&  quoteChar  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteChar  ==  null)  {	  if(quoteChar!=    null    &&    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  if(quoteChar  ==  null  &&  quoteChar!=  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if(quoteChar  ==  null  &&  quoteChar!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar  ==  null  &&  quoteChar!=  null)  {	  if(quoteChar!=    null    &&    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  if  (quoteCharacter  ==  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteCharacter  ==  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteCharacter  ==  null  &&  quoteCharacter  ==  delimiter.charValue())  {	  if    (quoteCharacter!=    null    &&    quoteCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (commentStart!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (commentStart!=  null  &&  quoteCharacter  ==  delimiter.charValue())  {	  if    (quoteCharacter!=    null    &&    quoteCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteChar!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar  ==  delimiter.charValue())  {	  if    (quoteChar!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  if  (quoteChar!=  null  ||  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteChar!=  null  ||  quoteChar!=  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  ||  quoteChar!=  delimiter.charValue())  {	  if    (quoteChar!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar!=  Delimiter.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteChar!=  null  &&  quoteChar!=  Delimiter.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar!=  Delimiter.DEFAULT)  {	  if    (quoteChar!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  Character  quoteChar  =  getCommentStart(delimiter);  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteChar  =  getCommentStart(delimiter);  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteChar  =  getCommentStart(delimiter);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  Character  quoteCharacter  =  getQuoteChar();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteCharacter  =  getQuoteChar();  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getQuoteChar();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter)  {	  if    (quoteCharacter!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter.charValue()  ==  delimiter)  {	  if    (quoteCharacter!=    null    &&    quoteCharacter.charValue()    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  if  (quoteChar  <  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteChar  <  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar  <  null  &&  quoteChar!=  delimiter.charValue())  {	  if    (quoteCharacter!=    null    &&    quoteCharacter!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  Character  quoteCharacter  =  getCommentStart(delimiter);  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteCharacter  =  getCommentStart(delimiter);  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  getCommentStart(delimiter);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  Character  quoteCharacter  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  quoteCharacter  =  delimiter.charValue();  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  quoteCharacter  =  delimiter.charValue();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  Character  character  =  getCharacter();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  Character  character  =  getCharacter();  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	Character  character  =  getCharacter();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter!=  null)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if(quoteChar!=  null  &&  quoteCharacter!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteCharacter!=  null)  {	  if(quoteChar!=    null    &&    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  null)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if(quoteChar!=  null  &&  quoteChar  <  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteChar!=  null  &&  quoteChar  <  null)  {	  if(quoteChar!=    null    &&    quoteChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()!=  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if  (quoteChar!=  null  &&  quoteChar.charValue()!=  delimiter.charValue())  {	  if    (quoteChar!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter  <  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  validate()  throws  IllegalArgumentException  {  if  (isLineBreak(delimiter))  {  throw  new  IllegalArgumentException(   "The  delimiter  cannot  be  a  line  break   ");  }    [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter  <  delimiter.charValue())  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteCharacter  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  delimiter  ==  escapeCharacter.charValue())  {  throw  new  IllegalArgumentException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escapeCharacter  +     "')   ");  }  if  (commentMarker  !=  null  &&  delimiter  ==  commentMarker.charValue())  {  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	818	818	10	replace	if(quoteCharacter!=  null  &&  quoteCharacter  <  delimiter.charValue())  {	  if    (quoteCharacter!=    null    &&    quoteCharacter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
