bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(c))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter  ==  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(c))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  c  =  quoteCharacter.charAt(escapeCharacter);  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(escapeCharacter);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  c  =  quoteCharacter.getCurrentCharacter();  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.getCurrentCharacter();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  Character  quoteCharacter  =  quoteChar.escapeCharacter();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  quoteCharacter  =  quoteChar.escapeCharacter();  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  quoteCharacter  =  quoteChar.escapeCharacter();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(i);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  c  =  quoteCharacter.charAt(i);  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(i);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(delimiter))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteMode.equals(delimiter))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(commentStart))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteMode.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter  ==  null  &&  quoteMode.equals(delimiter))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter  ==  null  &&  quoteMode.equals(delimiter))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  if  (escapeCharacter!=  null  &&  escapeCharacter!=  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if  (escapeCharacter!=  null  &&  escapeCharacter!=  QuoteMode.NONE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if  (escapeCharacter!=  null  &&  escapeCharacter!=  QuoteMode.NONE)  {	  if    (escapeCharacter!=    null    &&    quoteMode!=    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(escapeCharacter))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentMarker))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter  ==  null  &&  quoteCharacter.equals(commentMarker))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(quoteCharacter.length()  -  1);  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  character  =  quoteCharacter.charAt(quoteCharacter.length()  -  1);  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(quoteCharacter.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(quoteCharacter.length()  -  1);  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  c  =  quoteCharacter.charAt(quoteCharacter.length()  -  1);  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(quoteCharacter.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(quoteCharacter);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  character  =  quoteCharacter.charAt(quoteCharacter);  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(quoteCharacter);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  Character  character  =  quoteCharacter.charAt(escapeCharacter);  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(escapeCharacter);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(c))  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(escapeCharacter!=  null  &&  quoteMode.equals(c))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteMode.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  if(separator!=  null  &&  quoteMode.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentMarker  +     "')   ");  }    [BUGGY]  if(separator!=  null  &&  quoteMode.equals(commentMarker))  {  [BUGGY]    throw  new  IllegalArgumentException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(   "The  header  contains  a  duplicate  entry:  '   "  +  hdr  +     "'  in     "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(separator!=  null  &&  quoteMode.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
