bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteMode.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteMode.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  delimiter  ||  quoteMode.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
2	[BUG]  [BUGGY]  if(c!=  null  &&  quoteMode.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteMode.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  null  &&  quoteMode.equals(escapeCharacter))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
3	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(delimiter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(delimiter);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
4	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(c);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(c);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(c);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
5	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(commentStart);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(commentStart);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(commentStart);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
6	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(0);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(0);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
7	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  delimiter  ||  quoteCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(delimiter))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(quoteCharacter.length());  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(quoteCharacter.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(quoteCharacter.length());	  Character    c    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
12	[BUG]  [BUGGY]  char  c  =  quoteCharacter.charAt(quoteCharacter.length());  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  c  =  quoteCharacter.charAt(quoteCharacter.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	char  c  =  quoteCharacter.charAt(quoteCharacter.length());	  Character    c    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
13	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(commentStart.length()  -  1);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(commentStart.length()  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(commentStart.length()  -  1);	  Character    c    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
14	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(escapeCharacter.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(escapeCharacter.length()  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(escapeCharacter.length()  -  1);	  Character    c    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
15	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(delimiter);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(delimiter);	  Character    c    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  char  c  =  quoteCharacter.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  c  =  quoteCharacter.charAt(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	char  c  =  quoteCharacter.charAt(escapeCharacter);	  Character    c    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Character  c  =  delimiter.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charAt(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  delimiter.charAt(escapeCharacter);	  Character    c    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  char  c  =  quoteCharacter.charAt(delimiter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  c  =  quoteCharacter.charAt(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	char  c  =  quoteCharacter.charAt(delimiter);	  Character    c    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  char  character  =  quoteCharacter.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  character  =  quoteCharacter.charAt(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	char  character  =  quoteCharacter.charAt(escapeCharacter);	  Character    character    =    quoteCharacter.charAt(quoteCharacter);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
20	[BUG]  [BUGGY]  char  character  =  quoteCharacter.charAt(quoteCharacter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  character  =  quoteCharacter.charAt(quoteCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	char  character  =  quoteCharacter.charAt(quoteCharacter);	  Character    character    =    quoteCharacter.charAt(quoteCharacter);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  if  (escapeCharacter!=  null  &&  quoteCharacter!=  QuoteMode.NONE)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if  (escapeCharacter!=  null  &&  quoteCharacter!=  QuoteMode.NONE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if  (escapeCharacter!=  null  &&  quoteCharacter!=  QuoteMode.NONE)  {	  if    (escapeCharacter!=    null    &&    escapeCharacter!=    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  escapeCharacter.equals(commentStart))  {	  if    (escapeCharacter!=    null    &&    escapeCharacter!=    QuoteMode.NONE)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteMode.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteMode.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(delimiter!=  null  &&  quoteMode.equals(escapeCharacter))  {	  if(escapeCharacter    ==    null    &&    quoteMode.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteMode.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteMode.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(delimiter  ==  null  &&  quoteMode.equals(escapeCharacter))  {	  if(escapeCharacter    ==    null    &&    quoteMode.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(quoteCharacter.length());  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(quoteCharacter.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(quoteCharacter.length());	  Character    character    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
26	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(commentStart.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(commentStart.length()  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(commentStart.length()  -  1);	  Character    character    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
27	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(escapeCharacter.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(escapeCharacter.length()  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(escapeCharacter.length()  -  1);	  Character    character    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
28	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(quoteCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  char  c  =  quoteCharacter.charAt(i);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  char  c  =  quoteCharacter.charAt(i);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	char  c  =  quoteCharacter.charAt(i);	  Character    c    =    quoteCharacter.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(0);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(0);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(0);	  Character    c    =    quoteCharacter.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(i  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(i  +  1);	  Character    c    =    quoteCharacter.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(delimiter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(delimiter);	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
36	[BUG]  [BUGGY]  Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(c);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(c);	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
37	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.getCurrentStructure();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.getCurrentStructure();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.getCurrentStructure();	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(deselimiter);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(deselimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Deselimiter  <  Character>  deselimiter  =  Character.toLowerCase(deselimiter);	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  Character  quoteCharacter  =  escapeCharacter.escapeCharacter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  escapeCharacter.escapeCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  quoteCharacter  =  escapeCharacter.escapeCharacter();	  Character    quoteCharacter    =    quoteChar.escapeCharacter();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Character  quoteCharacter  =  c.escapeCharacter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  c.escapeCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  quoteCharacter  =  c.escapeCharacter();	  Character    quoteCharacter    =    quoteChar.escapeCharacter();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  Character  quoteCharacter  =  quoteChar.escapeCharacter(c);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  quoteChar.escapeCharacter(c);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  quoteCharacter  =  quoteChar.escapeCharacter(c);	  Character    quoteCharacter    =    quoteChar.escapeCharacter();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  if(escapeCharacter  ==  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter  ==  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter  ==  null  &&  quoteChar.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteMode.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteMode.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(delimiter!=  null  &&  quoteMode.equals(commentMarker))  {	  if(separator!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
47	[BUG]  [BUGGY]  if(separator!=  null  &&  quoteMode.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(separator!=  null  &&  quoteMode.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(separator!=  null  &&  quoteMode.equals(delimiter))  {	  if(separator!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
48	[BUG]  [BUGGY]  if(separator!=  null  &&  quoteMode.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(separator!=  null  &&  quoteMode.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(separator!=  null  &&  quoteMode.equals(c))  {	  if(separator!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
49	[BUG]  [BUGGY]  Character  c  =  delimiter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCurrentCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  delimiter.getCurrentCharacter();	  Character    c    =    quoteCharacter.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  escapeCharacter.getCurrentCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  escapeCharacter.getCurrentCharacter();	  Character    c    =    quoteCharacter.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  Character  c  =  commentStart.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  commentStart.getCurrentCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  commentStart.getCurrentCharacter();	  Character    c    =    quoteCharacter.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  Character  c  =  this.quoteCharacter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  this.quoteCharacter.getCurrentCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  this.quoteCharacter.getCurrentCharacter();	  Character    c    =    quoteCharacter.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  Character  c  =  character.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  character.getCurrentCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  character.getCurrentCharacter();	  Character    c    =    quoteCharacter.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  Character  quoteCharacter  =  escapeChar.escapeCharacter();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  escapeChar.escapeCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  quoteCharacter  =  escapeChar.escapeCharacter();	  Character    quoteCharacter    =    quoteChar.escapeCharacter();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  Character  quoteCharacter  =  delimiter.escapeCharacter();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  delimiter.escapeCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  quoteCharacter  =  delimiter.escapeCharacter();	  Character    quoteCharacter    =    quoteChar.escapeCharacter();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
56	[BUG]  [BUGGY]  if(c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  delimiter)  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  Character  character  =  c.charAt(quoteCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  c.charAt(quoteCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  c.charAt(quoteCharacter);	  Character    character    =    quoteCharacter.charAt(quoteCharacter);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
59	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  escapeCharacter.charAt(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  escapeCharacter.charAt(escapeCharacter);	  Character    c    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  Character  c  =  character.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  character.charAt(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  character.charAt(escapeCharacter);	  Character    c    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  Character  c  =  escapeCharacter.charAt(quoteCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  escapeCharacter.charAt(quoteCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  escapeCharacter.charAt(quoteCharacter);	  Character    c    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
64	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
66	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  null  &&  c.equals(escapeCharacter))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
67	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(escapeCharacter.length());  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(escapeCharacter.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(escapeCharacter.length());	  Character    character    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
68	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter.equals(quoteMode))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeCharacter.equals(quoteMode))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(delimiter  ==  null  &&  escapeCharacter.equals(quoteMode))  {	  if(escapeCharacter    ==    null    &&    quoteMode.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteMode.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteMode.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  delimiter  ||  escapeCharacter!=  null  &&  quoteMode.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
70	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  escapeCharacter.equals(commentStart))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(escapeCharacter))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  escapeCharacter.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  escapeCharacter.equals(commentMarker))  {	  if(separator!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  Character  character  =  escapeCharacter.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  escapeCharacter.charAt(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  escapeCharacter.charAt(escapeCharacter);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
76	[BUG]  [BUGGY]  Character  character  =  escapeCharacter.charAt(delimiter);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  escapeCharacter.charAt(delimiter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  escapeCharacter.charAt(delimiter);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
77	[BUG]  [BUGGY]  Character  character  =  c.charAt(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  c.charAt(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  c.charAt(escapeCharacter);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
78	[BUG]  [BUGGY]  Character  c  =  delimiter.charAt(i);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charAt(i);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  delimiter.charAt(i);	  Character    c    =    quoteCharacter.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  Character  c  =  character.charAt(i);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  character.charAt(i);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  character.charAt(i);	  Character    c    =    quoteCharacter.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeCharacter))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(delimiter!=  null  &&  delimiter.equals(escapeCharacter))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
81	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(quoteMode))  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeCharacter.equals(quoteMode))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(delimiter!=  null  &&  escapeCharacter.equals(quoteMode))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
82	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentMarker))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(escapeCharacter.length());  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(escapeCharacter.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(escapeCharacter.length());	  Character    c    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
87	[BUG]  [BUGGY]  Character  c  =  quotedCharacter.charAt(quoteCharacter.length());  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quotedCharacter.charAt(quoteCharacter.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quotedCharacter.charAt(quoteCharacter.length());	  Character    c    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
88	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteChar.equals(commentMarker))  {  throw  new  IllegalArgumentException( " ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
89	[BUG]  [BUGGY]  if(c!=  escapeCharacter)  {  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  escapeCharacter)  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  escapeCharacter)  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
90	[BUG]  [BUGGY]  if(separator!=  null  &&  quoteMode.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(separator!=  null  &&  quoteMode.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(separator!=  null  &&  quoteMode.equals(commentStart))  {	  if(separator!=    null    &&    quoteMode.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
91	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escapeCharacter  ==  null  &&  quoteCharacter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escapeCharacter  ==  null  &&  quoteCharacter.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  delimiter  ||  escapeCharacter  ==  null  &&  quoteCharacter.equals(c))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(quoteCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(quoteCharacter!=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escapeCharacter!=    null    &&    quoteCharacter.equals(commentMarker))    {    throw    new    IllegalArgumentException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
93	[BUG]  [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(quoteCharacter))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(escapeCharacter!=  null  &&  quoteCharacter.equals(quoteCharacter))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(escapeCharacter!=  null  &&  quoteCharacter.equals(quoteCharacter))  {	  if(escapeCharacter    ==    null    &&    quoteCharacter.equals(commentMarker))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  Character  character  =  quoteCharacter.charAt(commentStart.length());  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  quoteCharacter.charAt(commentStart.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  quoteCharacter.charAt(commentStart.length());	  Character    character    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
95	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.charAt(commentStart.length());  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.charAt(commentStart.length());  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  quoteCharacter.charAt(commentStart.length());	  Character    c    =    quoteCharacter.charAt(quoteCharacter.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
96	[BUG]  [BUGGY]  Character  c  =  commentStart.charAt(i);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  commentStart.charAt(i);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  commentStart.charAt(i);	  Character    c    =    quoteCharacter.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
97	[BUG]  [BUGGY]  if(separator!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(separator!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(separator!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeCharacter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
98	[BUG]  [BUGGY]  Character  character  =  escapeCharacter.charAt(commentStart);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  character  =  escapeCharacter.charAt(commentStart);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  character  =  escapeCharacter.charAt(commentStart);	  Character    character    =    quoteCharacter.charAt(escapeCharacter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  Character  quoteCharacter  =  quoteChar.escapeCharacter(escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  quoteCharacter  =  quoteChar.escapeCharacter(escapeCharacter);  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  quoteCharacter  =  quoteChar.escapeCharacter(escapeCharacter);	  Character    quoteCharacter    =    quoteChar.escapeCharacter();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
100	[BUG]  [BUGGY]  Character  c  =  commentMarker.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  Character  c  =  commentMarker.getCurrentCharacter();  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	Character  c  =  commentMarker.getCurrentCharacter();	  Character    c    =    quoteCharacter.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
101	[BUG]  [BUGGY]  if(c!=  null  &&  quoteMode.equals(c))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      if  (quoteCharacter  !=  null  &&  quoteCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }  if  (escapeCharacter  !=  null  &&  escapeCharacter.equals(commentMarker))  {  throw  new  IllegalArgumentException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentMarker  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteMode.equals(c))  {  [BUGGY]      throw  new  IllegalArgumentException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  [CLASS]  CSVFormat  Predefined  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	843	843	10	replace	if(c!=  null  &&  quoteMode.equals(c))  {	  if(escapeCharacter!=    null    &&    quoteMode.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
