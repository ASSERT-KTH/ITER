projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escape==null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escape!=null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape!=null||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escape==null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escape!=null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escape==nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escape==null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.escapeCharacter();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(0);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.getCharacter();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.getChar();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak==null||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(0);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charValue();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(escape.charAt(0));
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak(escape)||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escape!=null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escape!=nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(line)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escape!=null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escape==null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escape.equals(commentMarker.charAt(escape.charAt(0)))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escapeinstanceofLineBreak||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escapeinstanceofLineBreak||escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape==null?null:escape.getCharacter();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape!=null?null:escape.getCharacter();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak&&escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofCharacter||escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escape!=null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escape==nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)&&isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escape==nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==nullString||isLineBreak(escape)||escape==nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escape.equals(commentMarker.charAt(escape.length()-1))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escape.equals(commentMarker.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escape.equals(commentMarker.charAt(escape.length()-1))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||commentStart.equals(escape.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofCharacter||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(line)||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isEscape(escape)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)&&escape!=null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escape>=null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(line)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isEscapeChar(escape)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(escape.length);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(escape.length()-1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape!=null||isLineBreak(escape.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape.charAt(0),escape.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(line==null||isLineBreak(escape.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(lineBreak)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak==null||isLineBreak(lineBreak,escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak==null||isLineBreak(lineBreak)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escape!=nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escape==null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape==null?null:escape.getChar();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape!=null?null:escape.getChar();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)&&escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==nullString||isLineBreak(escape)||escape!=nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak&&escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escapeinstanceofLineBreak||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(escape.length());
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(escape.length(1));
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak&&escapeinstanceofString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofString||escapeinstanceofCharacter){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null&&isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(line==null||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isEscape(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.getCharAt(0);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935charcharacter=escape.charAt(0);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escape==nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak(escape)&&isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak(escape)||isLineBreak(escape.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.escapeCharacter(commentMarker);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.escapeCharacter(quote);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape!=null||isLineBreak(escape)||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.characterValue();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.getChar();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.getCharValue();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofIllegalArgumentException||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofIllegalArgumentException||escapeinstanceofUnknownCharacterException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofIllegalArgumentException||escapeinstanceofCharacterException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||isEscapeCharacter(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape!=null?getChar():escape.getChar();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escape==nullString||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak(escape)||isSurroundingSpaces(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak(escape)||isLineBreak(escape)||lineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(line==null||isLineBreak(line)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofIllegalArgumentException||Character.isWhitespace(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escapeinstanceofIllegalArgumentException||!lineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape.charBreak())){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escape.equals(commentMarker.charAt(escape.charAt(0)))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&commentMarker.equals(escape.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)&&escape.equals(commentMarker.charAt(escape.charAt(1)))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape!=null&&isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||escape!=nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)&&escapeinstanceofLineBreak||escapeinstanceofString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(0,escape.charAt(0));
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(1);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(0,escape.length);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(line==null||isLineBreak(escape)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape==null?null:escape.escapeCharacter();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape!=null?null:escape.escapeCharacter();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(0,escape.charAt(0));
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(0,escape.length);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escapeinstanceofIllegalArgumentException){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape!=null||isLineBreak(escape)||escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape.charAt(1))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak(escape)||escapeinstanceofLineBreak){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||commentStart.equals(commentMarker.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||quoteCharacter.equals(commentMarker.charAt(escape.charAt(0)))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escape!=nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape==null?getCharacter():escape.getCharacter();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(escape.getCharacter());
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(0,escape.length());
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(escape.length);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(delimiter==null||escape==null||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(!isLineBreak(escape)||isLineBreak(line)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||isLineBreak(line,escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||isLineBreak(line.charAt(0))){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.character();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(escape.charAt(0),commentMarker.charAt(0));
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(commentMarker.charAt(0));
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(line.charAt(0));
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(line==null||escape!=null||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935CharacterescapeCharacter=escape.charAt(0,escape.length());
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escape!=nullString||isLineBreak(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)||escapeinstanceofLineBreak||escapeinstanceofString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape.charAt(0),escapeCharacter)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(lineBreak(escape)||isCharacter(escape)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.escapeCharacter(commentMarker,escape);
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(isLineBreak(escape)||escape==nullString||escape!=nullString){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escape)&&escape==null){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape==null||isLineBreak(escapeCharacter)){
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape==null?getChar():escape.getChar();
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935Charactercharacter=escape.charAt(escape.getChar());
projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java935if(escape!=null||isLineBreak(escape)||escape==null){
