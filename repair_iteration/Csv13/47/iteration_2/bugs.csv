bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  IllegalArgumentException)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  IllegalArgumentException)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  IllegalArgumentException)  {	  if(isLineBreak(escape)||    escape    instanceof    LineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  Character)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  Character)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  Character)  {	  if(isLineBreak(escape)||    escape    instanceof    LineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  if(!isLineBreak(escape)||  escape  instanceof  LineBreak)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(!isLineBreak(escape)||  escape  instanceof  LineBreak)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(!isLineBreak(escape)||  escape  instanceof  LineBreak)  {	  if(isLineBreak(escape)||    escape    instanceof    LineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  String)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  String)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)||  escape  instanceof  LineBreak  ||  escape  instanceof  String)  {	  if(isLineBreak(escape)||    escape    instanceof    LineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape.charAt(0)))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(escape  ==  null  ||  isLineBreak(escape.charAt(0)))  {	  if(escape    ==    null    ||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  if(escape!=  null  ||  isLineBreak(escape))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(escape!=  null  ||  isLineBreak(escape))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(escape!=  null  ||  isLineBreak(escape))  {	  if(escape    ==    null    ||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  if(escape  ==  null  ||  isLineBreak(line))  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(escape  ==  null  ||  isLineBreak(line))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(escape  ==  null  ||  isLineBreak(line))  {	  if(escape    ==    null    ||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  if(!isLineBreak(escape)||  escape  instanceof  IllegalArgumentException)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(!isLineBreak(escape)||  escape  instanceof  IllegalArgumentException)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(!isLineBreak(escape)||  escape  instanceof  IllegalArgumentException)  {	  if(!isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  if(!isLineBreak(escape)||  escape  ==  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(!isLineBreak(escape)||  escape  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(!isLineBreak(escape)||  escape  ==  null)  {	  if(!isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  if(!isLineBreak(escape)||  escape  instanceof  Character)  {  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(!isLineBreak(escape)||  escape  instanceof  Character)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(!isLineBreak(escape)||  escape  instanceof  Character)  {	  if(!isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(isLineBreak(escape)&&  escape!=  null)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)&&  escape!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)&&  escape!=  null)  {	  if(isLineBreak(escape)||    escape!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  if(isLineBreak(escape)||  escape  ==  nullString)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)||  escape  ==  nullString)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)||  escape  ==  nullString)  {	  if(isLineBreak(escape)||    escape!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  if(isLineBreak(escape)&&  escape  ==  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)&&  escape  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)&&  escape  ==  null)  {	  if(isLineBreak(escape)||    escape    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  if(isLineBreak(escape)&&  isLineBreak(escape))  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)&&  isLineBreak(escape))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)&&  isLineBreak(escape))  {	  if(isLineBreak(escape)||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  isLineBreak(escape))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  isLineBreak(escape))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(escape  ==  null  ||  isLineBreak(escape)||  isLineBreak(escape))  {	  if(isLineBreak(escape)||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if(isLineBreak(escape)||  isLineBreak(line))  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)||  isLineBreak(line))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)||  isLineBreak(line))  {	  if(isLineBreak(escape)||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  Character  character  =  escape.escapeCharacter();  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  Character  character  =  escape.escapeCharacter();  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	Character  character  =  escape.escapeCharacter();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  Character  character  =  escape.charAt(0);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  Character  character  =  escape.charAt(0);  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	Character  character  =  escape.charAt(0);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  Character  character  =  escape.getCharacter();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  Character  character  =  escape.getCharacter();  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	Character  character  =  escape.getCharacter();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  Character  character  =  escape.getChar();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  Character  character  =  escape.getChar();  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	Character  character  =  escape.getChar();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  if(lineBreak  ==  null  ||  isLineBreak(escape))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(lineBreak  ==  null  ||  isLineBreak(escape))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(lineBreak  ==  null  ||  isLineBreak(escape))  {	  if(escape    ==    null    ||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  Character  escapeCharacter  =  escape.charAt(0);  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  Character  escapeCharacter  =  escape.charAt(0);  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	Character  escapeCharacter  =  escape.charAt(0);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  Character  escapeCharacter  =  escape.charValue();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  Character  escapeCharacter  =  escape.charValue();  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	Character  escapeCharacter  =  escape.charValue();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  Character  escapeCharacter  =  escape.charAt(escape.charAt(0));  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  Character  escapeCharacter  =  escape.charAt(escape.charAt(0));  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	Character  escapeCharacter  =  escape.charAt(escape.charAt(0));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  if(lineBreak(escape)||  isLineBreak(escape))  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(lineBreak(escape)||  isLineBreak(escape))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(lineBreak(escape)||  isLineBreak(escape))  {	  if(isLineBreak(escape)||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  if(isLineBreak(escape)&&  escape  instanceof  LineBreak)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)&&  escape  instanceof  LineBreak)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)&&  escape  instanceof  LineBreak)  {	  if(isLineBreak(escape)||    escape    instanceof    LineBreak)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  if(!isLineBreak(escape)||  escape!=  null)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(!isLineBreak(escape)||  escape!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(!isLineBreak(escape)||  escape!=  null)  {	  if(!isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  if(isLineBreak(escape)||  escape!=  nullString)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(escape)||  escape!=  nullString)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(escape)||  escape!=  nullString)  {	  if(isLineBreak(escape)||    escape!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  if(isLineBreak(line)||  isLineBreak(line))  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(isLineBreak(line)||  isLineBreak(line))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(isLineBreak(line)||  isLineBreak(line))  {	  if(isLineBreak(escape)||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  escape  instanceof  LineBreak)  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  escape  instanceof  LineBreak)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(escape  ==  null  ||  isLineBreak(escape)||  escape  instanceof  LineBreak)  {	  if(escape    ==    null    ||    isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  escape!=  null)  {  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  escape!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(escape  ==  null  ||  isLineBreak(escape)||  escape!=  null)  {	  if(isLineBreak(escape)||    escape!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  escape  ==  null)  {  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(escape  ==  null  ||  isLineBreak(escape)||  escape  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(escape  ==  null  ||  isLineBreak(escape)||  escape  ==  null)  {	  if(isLineBreak(escape)||    escape    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  if(!isLineBreak(escape)||  escape.equals(commentMarker.charAt(escape.charAt(0))))  {  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError    [CONTEXT]    public  CSVFormat  withEscape(final  Character  escape)  {    [BUGGY]  if(!isLineBreak(escape)||  escape.equals(commentMarker.charAt(escape.charAt(0))))  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  escape  character  cannot  be  a  line  break   ");  }  return  new  CSVFormat(delimiter,  quoteCharacter,  quoteMode,  commentMarker,  escape,  ignoreSurroundingSpaces,  ignoreEmptyLines,  recordSeparator,  nullString,  headerComments,  header,  skipHeaderRecord,  allowMissingColumnNames,  ignoreHeaderCase);  }  [CLASS]  CSVFormat  Predefined  [METHOD]  withEscape  [RETURN_TYPE]  CSVFormat  Character  escape  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreHeaderCase  ignoreSurroundingSpaces  skipHeaderRecord  Character  c  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  c  commentMarker  delimiter  escape  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  format  other  String  format  hdr  nullString  recordSeparator  String[]  header  headerComments  strings  Predefined  Default  Excel  MySQL  RFC4180  TDF  long  serialVersionUID  	projects/Csv13/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4343722427630694	935	935	10	replace	if(!isLineBreak(escape)||  escape.equals(commentMarker.charAt(escape.charAt(0))))  {	  if(!isLineBreak(escape))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
