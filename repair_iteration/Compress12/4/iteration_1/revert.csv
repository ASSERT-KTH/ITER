projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intthis.recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,longblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intSMALL_BUFFER_SIZE,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringrecordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,inttestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intSMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE){
