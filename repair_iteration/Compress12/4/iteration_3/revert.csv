projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intthis.recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,longblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intSMALL_BUFFER_SIZE,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringrecordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,inttestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intSMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intreadBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,buffer.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,byte[]recordSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,byte[]recordSize,inthasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byteblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,StringblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE,TarBuffer.BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(TarBuffer.DEFAULT_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(this.readBuf,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(blockSize,recordSize);this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(recordSize,blockSize);this.readBuf=is.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(recordSize,blockSize);this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_S
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,this.buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(i,0,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(null,0,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BlockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]block,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]buffer,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferbuffer,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]buffer,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,IntegerblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,0,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(recordSize.readBuffer(),blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,buffer.readBuffer(),blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,StringblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,longblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byteblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,BlockSizeblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intrecordSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,false,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,false,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BlockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,int[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intreadBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(BUFFER_SIZE,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]recordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerblockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]block,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferbuffer,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]buffer,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,BUFFER_SIZE,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,SMALL_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,SMALL_BUFFER_SIZE,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,shortentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE)
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,BlockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE),SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=this.is.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,flags);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.flags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,0,0,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,0,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,0,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,longblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,inthasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,int[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(intis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,0,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,this.buffer,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,this.readBuf,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intthis.recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intthis.recordSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,intthis.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,SMALL_BUFFER_SIZE,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,longblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,0,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(0,0,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,shortentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,longentryOffset,inthasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,IntegerentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79longentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset()-BUFFER_SIZE;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=this.currEntry.getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79shortentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_HITEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+1,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+1-BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(Stringis,StringblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=this.buffer.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuffer(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuffer(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readFully(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,hasHitEOF,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,hasHitEOF,is.readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(BUFFER_SIZE,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(recordSize,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(i,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BlockSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intSMALL_BUFFER_SIZE,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longentrySize,byteblockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerblockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,IntegerblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset,currEntry);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(entryOffset,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset,currEntry.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(blockSize,recordSize,entryOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,finalintblockSize,finalintrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,longblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,BlockSizeblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byteblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79privateTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(intis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79finalTarArchiveInputStream(is,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[MAX_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[SMALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[BUFFER_SIZE+BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BlockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BlockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,this.hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,this.readBuf,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,this.hasHitEOF,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,this.hasHitEOF,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,this.entryOffset,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,longblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intblockSize,intrecordSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intthis.entryOffset,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,0,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,0,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79if(is==null){InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.readBuf=newTarInputStream(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,SMALL_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,SMALL_BUFFER_SIZE,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,0,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=this.buffer.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,false,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,blockSize,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,int[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,String[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,intreadBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]readBuf,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intreadBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]logBuf,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,0,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,intblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,longblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(BUFFER_SIZE,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79longentryOffset=getEntryOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79shortentryOffset=getEntryOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(entrySize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,int[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(Stringis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(Stringname,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=this.buffer.getBytes(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.getBytes(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,SMALL_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,BUFFER_SIZE,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuf(true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuf(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=this.is.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuf(BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,int[]recordSize)throwsIOException{
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=this.getInputStream();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(),READ_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(TarBuffer.DEFAULT_BLOCK_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(),blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getRecordSize();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,SMALL_BUFFER_SIZE,blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,SMALL_BUFFER_SIZE,blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,longtestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,inttestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,int[]blockSize,inttestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,byte[]testSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF,is);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF,is.readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,intblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(intis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,buffer,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,false,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,false,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE),TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,0,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,BlockSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,buffer,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,true,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,true,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,SMALL_BUFFER_SIZE,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize,null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,recordSize,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]this.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferbuffer){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]blockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,0,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,SMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byteblockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,longrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,longblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,longrecordSize,longblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,bytebuffer,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,byte[]testSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byteblockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(byte[]is,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]recordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(null,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,buffer.length,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuffer(0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuffer(length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,String[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,0,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,buffer,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,null,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,0,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]this.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]testSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(intis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[BUFFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=newbyte[4];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]testSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]blockSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intflags,byte[]blockSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,buffer.length,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,int[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,Integer[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]recordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intbufferSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(IResource.DEPRECATED);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream(TarBuffer.DEFAULT_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE,blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0L,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,recordSize,blockSize);this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,SMALL_BUFFER_SIZE,recordSize);this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,0,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,null,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,null,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferbuffer,byte[]recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]readBuf,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,int){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.getBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(getBuffer(),blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BlockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longentrySize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intlogSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intthis.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,inttestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intfileSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intlength){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,buffer,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BUFFER_SIZE,recordSize,null,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset()+SMALL_BUFFER_SIZE;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset()+recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset()-recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0L,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferbuffer,byte[]blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferblockSize,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intBUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,byte[]){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerrecordSize,byteblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,currEntry);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,currEntry.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,currEntry.getEntrySize());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byteblockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(intis,byteblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(null,0,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]recordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,StringrecordSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intrecordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intBUFFER_SIZE,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intBUFFER_SIZE,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,StringblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,Stringbuffer,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,recordSize-readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringrecordSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerrecordSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuf=newbyte[length];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,byte[]blockSize,longentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intthis.recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,0,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,recordSize,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,longblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longrecordSize,longblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,1,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,0,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(intis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,intblockSize,byterecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerblockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,readBuf,recordSize);this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize+3);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(intis,intblockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intrecordSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intrecordSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerrecordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringrecordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intbufferSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(null,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,buffer.length,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,1,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,BUFFER_SIZE,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]buffer){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,IntegerrecordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]checkBuf,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byteSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,byte[]readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longrecordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(this.readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(byte[]is,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicfinalTarArchiveInputStream(InputStreamis,intrecordSize,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79privateTarArchiveInputStream(InputStreamis,byte[]blockSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,inttestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]testSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]testSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(inttestSize,byte[]blockSize,inttestSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,byte[]blockSize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,this.readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]readBuf,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intBUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(BUFFER_SIZE,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(DEFAULT_BASE_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(0,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(TarBuffer.DEFAULT_BASE_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,BUFFER_SIZE,byteblockSize,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byteblockSize,shortrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(buffer,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(buffer,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(this.buffer,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byterecordSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,ByteBufferbuffer,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]readBuf,intblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intthis.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]recordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,readBuf,0,recordSize-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,SMALL_BUFFER_SIZE,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,0,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,BlockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intrecordSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byterecordSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringrecordSize,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,intcheckSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longblockSize,intthis.recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,1,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,hasHitEOF,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intSMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byteblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,longblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicstaticfinalTarArchiveInputStream(InputStreamis,intblockSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,StringrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,1,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readByteBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,BlockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=getInputStream().openStream();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,blockSize,recordSize,SMALL_BUFFER_SIZE,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]buffer,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,byte[]recordSize,longcurrEntry){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,0,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(false,0,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this.buffer=newTarBuffer(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE));
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,SMALL_BUFFER_SIZE,recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,recordSize,this.entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),blockSize,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is.readBuffer(),this.blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]bufferSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]blockSize,intflags){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,true,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE,true){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,blockSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,entryOffset,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,0,newSMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(int,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,intbufferSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]bufferSize,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,SMALL_BUFFER_SIZE,TarBufferbuffer){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79PublicTarArchiveInputStream(InputStreamis,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.readBuffer(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,SMALL_BUFFER_SIZE+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blocks,SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buf,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buffer,int[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,StringrecordSize,byte[]blockSize,intSMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,Integer[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79if(this.readBuf!=null){InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is.readBuf;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79if(this.readBuf!=null){InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]recordSize,longblockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,Stringname,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intSMALL_BUFFER_SIZE,longrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(TarBuffer.DEFAULT_BASE_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(0,0,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byteblockSize,byte[]this.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=is.readBuffer(blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longentryOffset,intrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,this.readBuf,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,0,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,recordSize,0,readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,longentrySize,intentryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,readBuf,1,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,recordSize,SMALL_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79if(this.readBuf==null){InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79if(this.readBuf!=null){InputStreamis=newTarInputStream(is,blockSize,recordSize);this.readBuf=is;}else{buffer=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]buf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,0,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79System.arraycopy(readBuf,0,buffer,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79intentryOffset=getEntryOffset(recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,null,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TEST_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79InputStreamis=newTarInputStream(is,blockSize,recordSize,TarBuffer.DEFAULT);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,int[]this.readBuf){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,intblockSize,int[]recordsize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.testSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,LongrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,SMALL_BUFFER_SIZE,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,1,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]logBuffer,byte[]blockSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,1,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blockSize,intthis.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER_SIZE,TarBuffer.DEFAULT_BASE_BUFFER
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,blockSize,recordSize,null,SMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79this(is,SMALL_BUFFER_SIZE,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79byte[]readBuf=buffer.getBytes(recordSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(InputStreamis,byte[]blocks,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicfinalTarArchiveInputStream(InputStreamis,intblockSize,IntegerrecordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79publicTarArchiveInputStream(intis,byte[]buffer,byte[]recordSize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,recordSize,blockSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java79super(is,blockSize,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE+1);
