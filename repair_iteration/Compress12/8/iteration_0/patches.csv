bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE];	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  this.readBuf  =  is.readBuf;  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  is.readBuf;  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  is.readBuf;	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
5	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  is;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  is;  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  is;	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]    [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize);  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.readBuf  =  new  byte[recordSize];  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize];	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  this.entryOffset  =  is.readOffset();  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset();	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException  [CONTEXT]  public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  [BUGGY]    [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
