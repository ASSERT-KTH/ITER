bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[blockSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[blockSize];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize  +  1];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize  +  1];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize  +  1];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  this.readBuf  =  new  byte[bufferedSize];  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[bufferedSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[bufferedSize];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize  +  BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize  +  BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize  +  BUFFER_SIZE];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[length];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[length];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(this.readBuf,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(this.readBuf,  blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(this.readBuf,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  this.readBuf  =  null;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  null;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  null;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  BlockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  BlockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  BlockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	byte[]  readBuf  =  new  byte[BUFFER_SIZE];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(is,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(is,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(is,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  this.hasHitEOF  =  false;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.hasHitEOF  =  false;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.hasHitEOF  =  false;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  if(recordSize  <  =  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  <  =  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  <  =  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  if(recordSize  <  =  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  <  =  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  <  =  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuf();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  byte[]  readBuf  =  is.readBuf();  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	byte[]  readBuf  =  is.readBuf();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuf;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  byte[]  readBuf  =  is.readBuf;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	byte[]  readBuf  =  is.readBuf;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  recordSize];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  recordSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE  +  recordSize];	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuf(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  byte[]  readBuf  =  is.readBuf(blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	byte[]  readBuf  =  is.readBuf(blockSize,  recordSize);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.hasHitEOF);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.hasHitEOF);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.length);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.length);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.length);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  blockSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  blockSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.blockSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.blockSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  currEntry;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  currEntry;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  currEntry;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.currEntry    =    is;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  this.currEntry  =  new  TarBuffer(is,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarBuffer(is,  blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarBuffer(is,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.currEntry    =    is;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  currEntry;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  currEntry;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  currEntry;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.currEntry    =    is;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);  this.currEntry  =  is;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);  this.currEntry  =  is;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);  this.currEntry  =  is;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.currEntry    =    is;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  if(is!=  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(is!=  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(is!=  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  if(is  ==  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(is  ==  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(is  ==  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  if(is!=  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(is!=  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(is!=  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  if(is  ==  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(is  ==  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(is  ==  null)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  hasHitEOF);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  hasHitEOF);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  entryOffset);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  entryOffset);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  entryOffset);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  this.entryOffset);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  this.entryOffset);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  this.entryOffset);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize  +  1);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  false);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  false);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  hasHitEOF);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  hasHitEOF);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  1);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  readBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  readBuf);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  readBuf);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  false);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  false);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  -  1);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset(recordSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset(recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset(recordSize);	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
57	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset()  -  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset()  -  1;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset()  -  1;	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
58	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset(BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset(BUFFER_SIZE);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset(BUFFER_SIZE);	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
59	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset()  -  blockSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset()  -  blockSize;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset()  -  blockSize;	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
60	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset(blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset(blockSize,  recordSize);	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
61	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset()  +  1;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset()  +  1;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset()  +  1;	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
62	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
65	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  this.readBuf  =  new  byte[SMALL_BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[SMALL_BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[SMALL_BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
68	[BUG]  [BUGGY]  this.readBuf  =  new  byte[MAX_BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[MAX_BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[MAX_BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  this.readBuf  =  new  byte[bUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[bUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[bUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  this.readBuf  =  new  byte[MALL_BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[MALL_BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[MALL_BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  1];  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  1];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE  +  1];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
72	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
73	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
74	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
75	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
76	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  blockSize,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
77	[BUG]  [BUGGY]  this.hasHitEOF  =  true;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.hasHitEOF  =  true;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.hasHitEOF  =  true;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  0,  readBuf,  0,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  is.close();  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  buffer,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  buffer,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  buffer,  0,  recordSize);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  blockSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  blockSize);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  blockSize,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  blockSize,  readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  blockSize,  readBuf,  0,  recordSize);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  this.hasHitEOF);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  this.hasHitEOF);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize  -  1);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(is,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(is,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(is,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  byte[]  readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  byte[]  readBuf  =  new  byte[recordSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	byte[]  readBuf  =  new  byte[recordSize];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[blockSize];  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[blockSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[blockSize];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(recordSize,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(recordSize,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(recordSize,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
92	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
93	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
94	[BUG]  [BUGGY]  if(recordSize!=  0)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
95	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
96	[BUG]  [BUGGY]  buffer.write(readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  buffer.write(readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	buffer.write(readBuf,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(buffer,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(buffer,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(buffer,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
98	[BUG]  [BUGGY]  buffer.write(this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  buffer.write(this.readBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	buffer.write(this.readBuf,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(blockSize,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(blockSize,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(blockSize,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
100	[BUG]  [BUGGY]  this.readBuf  =  is;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  is;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  is;	  this.readBuf    =    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
101	[BUG]  [BUGGY]  this.readBuf  =  new  byte[size()  ];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[size()  ];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[size()  ];	  this.readBuf    =    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
103	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize  -  1);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
104	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
105	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
106	[BUG]  [BUGGY]  this.readBuf  =  new  byte[SALL_BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[SALL_BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[SALL_BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
107	[BUG]  [BUGGY]  this.readBuf  =  new  byte[256];  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[256];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[256];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
108	[BUG]  [BUGGY]  this.readBuf  =  new  byte[4];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[4];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[4];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
109	[BUG]  [BUGGY]  this.readBuf  =  buffer.readBuf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  buffer.readBuf;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  buffer.readBuf;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize  +  1);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
111	[BUG]  [BUGGY]  this.readBuf  =  new  byte[0];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[0];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[0];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
112	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize],  readBuf;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[recordSize],  readBuf;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[recordSize],  readBuf;	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[recordSize];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[blockSize];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[blockSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[blockSize];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  -  1);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  readSize);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  readSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  readSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.recordSize);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  +  1);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
119	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
121	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  null;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  null;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.currEntry  =  null;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.currEntry    =    is;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
122	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  SMALL_BUFFER_SIZE);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  SMALL_BUFFER_SIZE);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
123	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  readBuf);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  readBuf);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  readBuf);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
124	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  recordSize,  blockSize);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  recordSize,  blockSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  recordSize,  blockSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
125	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  SMALL_BUFFER_SIZE,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  SMALL_BUFFER_SIZE,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  SMALL_BUFFER_SIZE,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
126	[BUG]  [BUGGY]  this.readBuf  =  readBuf;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  readBuf;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  readBuf;	  this.readBuf    =    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  this.entryOffset  =  currEntry.readOffset();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  currEntry.readOffset();  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  currEntry.readOffset();	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
128	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset(0,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset(0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset(0,  recordSize);	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
129	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset()  -  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset()  -  recordSize;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset()  -  recordSize;	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
130	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset()  +  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset()  +  recordSize;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset()  +  recordSize;	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
131	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
132	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
133	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
134	[BUG]  [BUGGY]  if(is!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(is!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(is!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
135	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
136	[BUG]  [BUGGY]  if(is!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(is!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(is!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
137	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
138	[BUG]  [BUGGY]  if(recordSize!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
139	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
140	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
141	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(bytes,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(bytes,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(bytes,  0,  readBuf,  0,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
142	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  byte[]  readBuf  =  is.readBuffer();  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	byte[]  readBuf  =  is.readBuffer();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
143	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  is.readBuffer();  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  is.readBuffer();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
144	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
145	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
146	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
147	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
148	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  buffer.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    buffer.close();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
149	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
150	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
151	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  else  {  is.close();  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    else    {    is.close();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
152	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
153	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
154	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.readSize);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.readSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.readSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
156	[BUG]  [BUGGY]  this.readBuf  =  new  byte[RecordSize];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[RecordSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[RecordSize];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(ARRAY_BUFFER_SIZE,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(ARRAY_BUFFER_SIZE,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(ARRAY_BUFFER_SIZE,  readBuf,  0,  recordSize);  byte[]  readBuf  =  new  byte[BUFFER_SIZE];	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    byte[]    readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
158	[BUG]  [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  this.hasHitEOF);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.currEntry  =  new  TarArchiveEntry(is,  blockSize,  recordSize,  this.hasHitEOF);	  this.currEntry    =    new    TarArchiveEntry(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
159	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(hasHitEOF,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(hasHitEOF,  blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(hasHitEOF,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
160	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
161	[BUG]  [BUGGY]  this.readBuf  =  new  byte[this.readSize];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  byte[this.readSize];  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  byte[this.readSize];	  this.readBuf    =    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
162	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  1,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  1,  recordSize);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  1,  recordSize);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  this.readBuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  this.readBuf.length);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  this.readBuf.length);	  System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
164	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  this.hasHitEOF);  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  this.hasHitEOF);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
165	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize)+  1;  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize)+  1;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize)+  1;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
166	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
167	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
168	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  is.close();  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
169	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
170	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  buffer.writeInt(blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  buffer.writeInt(blockSize,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  buffer.writeInt(blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
171	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  0,  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  0,  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  false;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  0,	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
172	[BUG]  [BUGGY]  this.entryOffset  =  is.readOffset()  -  fileSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  is.readOffset()  -  fileSize;  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  is.readOffset()  -  fileSize;	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
173	[BUG]  [BUGGY]  this.entryOffset  =  entrySize.readOffset();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.entryOffset  =  entrySize.readOffset();  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.entryOffset  =  entrySize.readOffset();	  this.entryOffset    =    is.readOffset();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
174	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
175	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
176	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  is.close();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  is.close();  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  is.close();  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
177	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
178	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  System.arraycopy(blockSize,  recordSize,  readBuf,	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
179	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  buffer.writeInt(blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  buffer.writeInt(blockSize,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.hasHitEOF  =  true;  }  else  {  buffer.writeInt(blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
180	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  if(this.currEntry!=  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  if(this.currEntry!=  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  if(this.currEntry!=  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.currEntry    =    is;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
181	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  if(this.currEntry  ==  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  if(this.currEntry  ==  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  if(this.currEntry  ==  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.currEntry    =    is;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
182	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf!=  null)  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf!=  null)  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
183	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;  this.hasHitEOF  =  false;    [BUGGY]  if(this.readBuf!=  null)  {  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }  [BUGGY]      [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	83	83	1	replace	if(this.readBuf!=  null)  {  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  buffer.write(readBuf,  0,  recordSize);  }	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    buffer.write(readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
