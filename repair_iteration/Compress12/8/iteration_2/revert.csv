projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.readBuf=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<=0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<=0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE);this.currEntry=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-blockSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size()];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[256];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[4];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=buffer.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize],readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()+recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(bytes,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[RecordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(hasHitEOF,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.readSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,0,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-fileSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize-recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize/SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize+SMALL_BUFFER_SIZE,recordSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,blockSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,this.hasHitEOF-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,theBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.readSize+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,this.blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.buffer,0,this.blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.blockSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.blockSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,0,readBuf,0,record
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,1,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.readBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bUFFER_SIZE];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+2];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE],BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,blockSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[512];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[64];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[228];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.length];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,blockSize-recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0L,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,blockSize+recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+SMALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BD_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE+BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BRIDGE_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,readBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,readBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,this.readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(buffer,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(buffer,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);buffer.write(buffer,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(buffer,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,SMALL_BUFFER_SIZE+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,READ_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size()-1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size()+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length()];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize()];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size()*recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size()/2];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,false,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,false,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[2];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[3];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[6];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF&=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(BUFFER_SIZE,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,0,recordSize);buffer.write(readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,this.hasHitEOF);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);byte[]readBuf=newbyte[length];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);this.readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,0,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,readBuf);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,0,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.length);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(bUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=buffer.readBuffer(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(BUFFER_SIZE,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,blockSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,blockSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,1,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,readBuf,1,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+2];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+4];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[MAX_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[BUFFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(buffer,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(BUFFER_SIZE,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(BUFFER_SIZE,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(buffered,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.getStartOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,0,readBuf,0,record
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,1,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.buffer,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,this.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.buffer,0,this.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize/1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-5);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-1L);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,blockSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,this.readBuf.length);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,SMALL_BUFFER_SIZE);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);byte[]readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=buffer.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+5);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+1L);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.length];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[RecordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,readBuf);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bUFFER_SIZE];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=fileSize.readOffset()-is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()/fileSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=fileSize.readOffset()-is.readOffset;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()*fileSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);this.readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);byte[]readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[RecordSize+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=buffer.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer(true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer(buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer(0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=blockSize.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.intValue();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SALL_BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=this.readBuf.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(this.buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=buffer;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize,this.entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);}else{this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);}else{this.readBuf=newTarBuffer(is,BlockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);}else{this.readBuf=newTarBuffer(is,blockSize,record
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,isHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,is.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,is.hashCode());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=blockSize.readOffset()-is.readOffset;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()/blockSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-blockSize+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()*blockSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()+blockSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize/1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize-1L);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,this.hasHitEOF);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(buffer,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length-1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length*2];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,this.readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.readSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.readSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize+1,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize+2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[length];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[bufferedSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entryOffset,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(this.entryOffset,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entryOffset+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(blockSize,recordSize,this.entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entryOffset,this.readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entryOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<=0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,1,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bUFFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize+BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+SMALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf,isHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,blockSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.length);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,blockSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.buffer,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ttarBuf,0,readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.hasHitEOF=true;}else{System.arraycopy(blockSize,0,this.readBuf,0,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.hasHitEOF=true;}else{System.arraycopy(blockSize,0,this.readBuf,0,recordSize);hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.hasHitEOF=true;}else{System.arraycopy(blockSize,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.hasHitEOF=true;}else{System.arraycopy(blockSize,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,this.readBuf,0,blockSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[length];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,isHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,HasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,haveHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,is.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,this.readBuf,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,this.hasHitEOF&&this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,false,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()/recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()+SMALL_BUFFER_SIZE;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()*recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(tarBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83||recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,SMALL_BUFFER_SIZE,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,SMALL_BUFFER_SIZE+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,SMALL_BUFFER_SIZE,is);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,SMALL_BUFFER_SIZE,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize)-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize)-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize)-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,blockSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.hasHitEOF+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize+2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.length];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,SMALL_BUFFER_SIZE,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,SMALL_BUFFER_SIZE,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,SMALL_BUFFER_SIZE,recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,entryOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,entryOffset+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,entryOffset,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(blockSize,recordSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,entryOffset-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize)-recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-recordSize+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(blockSize,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(blockSize,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=this.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf,this.hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(tarBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+SMALL_BUFFER_SIZE;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+4;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)/1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+1L;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+3;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize],recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize,recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.hasHitEOF,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(this.hasHitEOF,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.hibernate);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readByteBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBytes(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,readBuf);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+5);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+3);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+1L);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,hasHitEOF,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(recordSize,blockSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.buffer,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.hasHitEOF-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,blockSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(blockSize,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,blockSize,0,recordSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()/1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(),recordSize+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize)+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,blockSize-recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(bytes,0,readBuf,0,record
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);}else{System.arraycopy(bytes,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MALL_BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MALL_BUFFER_SIZE+2];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+MAX_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE+2];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,this.blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,this.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,this.bytes.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,BlockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,blockSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE*recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[buffFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE],readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize],readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize],this.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize],readBuf,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length],readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize],recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE);this.currEntry=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()*1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.blockSize,recordSize);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize],readBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BD_BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize==0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.read=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,blockSize,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(length,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(BUFFER_SIZE,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.hasHitEOF,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize/1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(this.buffer,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,readBuf,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[0];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.read=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,readSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buf,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf==null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,is.hashCode());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83intrecordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[0];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset()-recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(bytes,0,readBuf,1,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(bytes,0,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){System.arraycopy(bytes,0,readBuf,0,recordSize);System.arraycopy(bytes,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+0;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=fileSize-is.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-fileSize+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83intrecordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()+recordSize-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize],recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry==null){this.readBuf=newTarBuffer(is,blockSize,record
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){System.arraycopy(readBuf,0,buffer,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hashitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset(0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,readSize);buffer.write(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);buffer.write(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize-1);buffer.write(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83reader=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,HITE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[RecordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset(blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize)+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[4];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+3);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=blockSize.readOffset()-is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-blockSize+recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,SMALL_BUFFER_SIZE,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize==0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,blockSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,0,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,this.hitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83reader=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize*recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,blockSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-3);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,HITE_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,fileSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,readSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){if(readBuf!=null){this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);byte[]readBuf=newbyte[MAX_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);byte[]readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);byte[]readBuf=newbyte[4];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,SMALL_BUFFER_SIZE,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,blockSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize==0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[MAX_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf==null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,this.readSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[8];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[16];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[length];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,this.readSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,blockSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.hitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(this.readBuf,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,recordSize,blockSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,BlockSize,recordSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(blockSize,recordSize);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,recordSize,blockSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize*recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[RecordSize+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entrySize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(this.entrySize,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entryLimit);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=recordSize){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=recordSize){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE+4];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<=0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize*recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry!=null){this.readBuf=newTarBuffer(is,blockSize,record
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,readBuf,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,readBuf,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[length];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf=buffer;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf=newbyte[size()];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,buffer,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,blockSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,BlockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize*recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=buffer.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(this.buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=this.readBuf.readBuf(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(this.buffer,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=buffer.readBuf(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.read=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[4];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=buffer.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.longValue();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset(blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=recordSize){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=recordSize){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=SMALL_BUFFER_SIZE.readOffset(is);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=SMALL_BUFFER_SIZE.readOffset(blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+3];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize*1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,readBuf.length);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=recordSize){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[4];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[MAJALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,this.readBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,readBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+HIT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize/1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,this.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,0,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,readBuf);}else{System.arraycopy(blockSize,recordSize,readBuf,0,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,this.readSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,recordSize);this.readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(buffer,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newTarBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize,TarBuffer.DEFAULT_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize*BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(is==null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(is==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,SMALL_BUFFER_SIZE,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,READ_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.recordSize-recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);this.readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.readSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,readBuf,isHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,readBuf,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[RecordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[this.readSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,recordSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.recordSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,recordSize-blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,0,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.readSize+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(this.in,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(this,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<=0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,0,readBuf,1,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=hasHitEOF&&is.readSize<recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=hasHitEOF&&is.readBuf()<recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=hasHitEOF&&is.readBuf()>recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.getOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);this.readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize*SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(buffered);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readoffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,haveHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);this.readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(recordSize,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(hasHitEOF,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(buffer,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.blockSize-recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,false,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,buffer,0,recordSize);buffer.write(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize-entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}else{this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+1,this.entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,readSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,recordSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize],recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize*recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,this.size);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}else{this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[4];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.readSize-recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset(currSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(buffer,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,1,recordSize);buffer.write(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(currEntry!=null){this.currEntry=currEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+1,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize],readBuf,this.hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer(buffer,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=is.hashCode()<recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=is.hashCode()>recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=is.hashCode()>=recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=is.hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];is.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize*recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-1,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,0,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE*1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-entrySize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-blockSize,recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.hasHitEOF,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,1,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,this.recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,this.hasHeitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry!=null){this.currEntry=currEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize-1,hasHitEOF);
