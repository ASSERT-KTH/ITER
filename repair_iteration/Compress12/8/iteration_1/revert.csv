projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.readBuf=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bufferedSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize+BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(this.readBuf,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,BlockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<=0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize<=0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuf(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarBuffer(is,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=currEntry;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,SMALL_BUFFER_SIZE);this.currEntry=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is==null){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-blockSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SMALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MAX_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[bUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[MALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE+1];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[BUFFER_SIZE];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[length];System.arraycopy(readBuf,0,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[blockSize];System.arraycopy(readBuf,0,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83This.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,blockSize,readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(is,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(this.readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(recordSize,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){if(readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(buffer,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83buffer.write(this.readBuf,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(blockSize,0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[size()];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[SALL_BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[256];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[4];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=buffer.readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[recordSize],readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,recordSize);byte[]readBuf=newbyte[recordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize);byte[]readBuf=newbyte[blockSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,recordSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);this.currEntry=null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize+SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,recordSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,SMALL_BUFFER_SIZE,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=readBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=currEntry.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset(0,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()+recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(is!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=0){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(recordSize>0){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(bytes,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=is.readBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83byte[]readBuf=is.readBuffer(BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{buffer.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(this.readBuf,0,this.readBuf,0,recordSize);}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf==null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,this.readBuf,0,recordSize);return;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,this.readBuf,0,this.readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[RecordSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(ARRAY_BUFFER_SIZE,readBuf,0,recordSize);byte[]readBuf=newbyte[BUFFER_SIZE];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.currEntry=newTarArchiveEntry(is,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(hasHitEOF,blockSize,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){this.readBuf=newbyte[recordSize];System.arraycopy(readBuf,0,readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newbyte[this.readSize];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,1,recordSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83System.arraycopy(readBuf,0,readBuf,0,this.readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize,this.hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize)+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=false;}else{System.arraycopy(blockSize,recordSize,readBuf,0,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=is.readOffset()-fileSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.entryOffset=entrySize.readOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{is.close();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{System.arraycopy(blockSize,recordSize,readBuf,
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.hasHitEOF){this.readBuf=newTarBuffer(is,blockSize,recordSize);this.hasHitEOF=true;}else{buffer.writeInt(blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry!=null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83this.readBuf=newTarBuffer(is,blockSize,recordSize);if(this.currEntry==null){this.readBuf=newTarBuffer(is,blockSize,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){System.arraycopy(readBuf,0,readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java83if(this.readBuf!=null){System.arraycopy(readBuf,0,this.readBuf,0,recordSize);buffer.write(readBuf,0,recordSize);}
