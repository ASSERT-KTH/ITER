projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){longName=headerBuf.length();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length()==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,0);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length!=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,skipBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0L);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null||headerBuf.length!=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null||headerBuf.length!=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198||headerBuf.length!=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,SMALL_BUFFER_SIZE,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,blockSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198Entry<K,V>currEntry=newTarArchiveEntry(headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,readBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,headerBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,entrySize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,hasHitEOF,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,0,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerLength,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength-headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,headerBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,readBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,headerBuf,numToSkip);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,headerBuf,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,buffer,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null||headerBuf.length==0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null||headerBuf.length==0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0||headerBuf.length==0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0||headerBuf.length!=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,false,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length-1,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length-1+length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,true,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i],hasHitEOF);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(readBuf,headerBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,this);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,headerBuf,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,headerOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=headerBuf.length()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=headerBuf.length()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=headerBuf.length()-2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198shortentryOffset=headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198buffer[i]=newString(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(buffer,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize-1,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198berEntry!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198berEntry==null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,length,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,0,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,length,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198Entry<K,V>currEntry=newTarArchiveEntry(headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){currEntry=newTarArchiveEntry(headerBuf,0);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,0,headerSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerSize,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,length,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,length,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,length,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,headerBuf,SMALL_BUFFER_SIZE);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,SMALL_BUFFER_SIZE,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,headerOffset.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf.length,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198finalTarArchiveEntrycurrEntry=newTarArchiveEntry(headerBuf,headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longName=headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){longName=headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198(headerBuf!=null)?headerBuf.length():Long.parseLong(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){longName=headerBuf.length();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198(headerBuf!=null)?headerBuf.length():longName;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i]
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i],hasHitEOF);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerName,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerOffset,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,skipBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198berEntry!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length-1,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length-6);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.getOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=currEntry.getOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getStartOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getSize();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getLength();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(64);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(16);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(32);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(256);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length/1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length+1,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198||headerBuf.length==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null||headerBuf.length==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length!=0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf.length!=0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf.length==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198||headerBuf.length()==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null||headerBuf.length()==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length()!=0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length()==0||headerBuf.length()==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198readBuf.length(){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferheaderBuf=newStringBuffer(headerBuf.length());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length-1,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,skipBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerSize,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerOffset,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerSize-headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerSize,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,readBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,readBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,entrySize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,entryOffset,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,entrySize,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerOffset,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getHeaderBuf();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getRecord().toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getHeaderBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getRecord().getHeaderBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,entrySize,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,headerBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,skipBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,true,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,headerOffset,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,false,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,headerSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length-1,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length-6);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,hasHitEOF,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.length()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.length()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.length()-2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.length()*2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.length()-6;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize-1,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,false,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerOffset-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerOffset,isEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(currEntry!=null){currEntry=newTarArchiveEntry(headerBuf,0);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(currEntry!=null){headerBuf=newTarArchiveEntry(headerBuf,0);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,1);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,readBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0L);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,skipBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length+1);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i].length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerName);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null||headerBuf.length()==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){currEntry=newTarArchiveEntry(headerBuf,skipBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(currEntry!=null){currEntry=newTarArchiveEntry(headerBuf,skipBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(currEntry==null){currEntry=newTarArchiveEntry(headerBuf,skipBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(buf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,headerSize,readBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,readBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,buffer.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198readBuf.length==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198safeGet(headerBuf,0,headerBuf.length)){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,SMALL_BUFFER_SIZE+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getOffset()-headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getOffset()+headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198(headerBuf!=null)&&longName.charAt(headerBuf.length()-1)!='/'){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){longName=headerBuf.toString();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){longName=headerBuf.substring(0,headerBuf.length()-1);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i].getName());}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf==null){currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length>=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length!=0||headerBuf.length!=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length*1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(80);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(60);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,headerSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,headerSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getRecord(currEntry.getHeaderSize());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,false,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198CurrEntrycurrEntry=newTarArchiveEntry(headerBuf,headerOffset,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0,headerLength);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=currEntry.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize*1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize-1+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headersBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,readBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,0,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length+2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,null,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=startTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNumberEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf,isEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length-headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,header.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,skip);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=headerBuf.length-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,entryOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuff,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0||headerBuf.length==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198while(headerBuf.length<=0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,entrySize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getOffset()-2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null||headerBuf.length<0){currEntry=newTarArchiveEntry(headerBuf,0);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198||headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,0);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0||headerBuf.length()==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length<=0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,1,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextSkipEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length!=SMALL_BUFFER_SIZE){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length!=0||headerBuf.length==0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf,headerLength);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerLength);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,readBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i],hasHitEOF);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<header.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,entryOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(header,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<header.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i],headerSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<header.length;++i){currEntry.setHeader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,hasHitEOF?headerBuf.length:0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i],headerSize);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<header.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i].getName());}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0||headerBuf.charAt(headerBuf.length-1)!='/'){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null&&headerBuf.length()>0){longName=headerBuf.length();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null||headerBuf.length()==0){longName=headerBuf.length();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null||longName==headerBuf.length()){longName=headerBuf.length();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length/2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,length,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,entryOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,entrySize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=getNextTarEntry(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=getNextTarEntry(headerBuf,headerBuf);
