projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198byte[]headerBuf=getRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198intentryOffset=headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){longName=headerBuf.length();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198StringBufferlongName=newStringBuffer(headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length()==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,0);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(readBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length==0){thrownewIllegalArgumentException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198LongentryOffset=getNextTarEntry(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf.length!=0){returnnull;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerSize,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){currEntry=newTarArchiveEntry(headerBuf,skipBuf);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,0L);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHitEOF(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=newString(headerBuf,0,headerBuf.length);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeaderSize(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=currEntry.getOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198longentryOffset=headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){buffer[i]=getNextTarEntry();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198if(headerBuf!=null){for(inti=0;i<headerBuf.length;++i){currEntry.setHeader(headerBuf[i]);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,SMALL_BUFFER_SIZE);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,readBuf,headerLength);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java198currEntry=newTarArchiveEntry(headerBuf,headerOffset,true);
