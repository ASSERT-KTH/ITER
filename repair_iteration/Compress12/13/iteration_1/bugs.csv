bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerSize);  [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	currEntry  =  new  TarArchiveEntry(headerBuf,  headerSize);	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
2	[BUG]  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerBuf.length);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerBuf.length);  [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	currEntry  =  new  TarArchiveEntry(headerBuf,  headerBuf.length);	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
3	[BUG]  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  0);  [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	currEntry  =  new  TarArchiveEntry(headerBuf,  0);	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
4	[BUG]  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerBuf);  [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	currEntry  =  new  TarArchiveEntry(headerBuf,  headerBuf);	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
5	[BUG]  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  readBuf);  [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	currEntry  =  new  TarArchiveEntry(headerBuf,  readBuf);	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]    [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	  	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
7	[BUG]  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  headerOffset);  [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	currEntry  =  new  TarArchiveEntry(headerBuf,  headerOffset);	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
8	[BUG]  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  readBuf  =  null;  }  byte[]  headerBuf  =  getRecord();  if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  [BUGGY]  currEntry  =  new  TarArchiveEntry(headerBuf,  skipBuf);  [BUGGY]  entryOffset  =  0;  entrySize  =  currEntry.getSize();  if  (currEntry.isGNULongNameEntry())  {  StringBuffer  longName  =  new  StringBuffer();  byte[]  buf  =  new  byte[SMALL_BUFFER_SIZE];  int  length  =  0;  while  ((length  =  read(buf))  >=  0)  {  longName.append(new  String(buf,  0,  length));  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	198	198	1	replace	currEntry  =  new  TarArchiveEntry(headerBuf,  skipBuf);	currEntry  =  new  TarArchiveEntry(headerBuf);  	non-compiled	[CE]  illegal  start  of  type	25	None	replace
