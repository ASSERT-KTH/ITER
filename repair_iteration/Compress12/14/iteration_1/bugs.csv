bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hasHitEOF  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  hasHitEOF)  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  hasHitEOF)  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2	[BUG]  [BUGGY]  if(!hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(!hasHitEOF)  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(!hasHitEOF)  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  if(buffer.isEOFRecord(record))  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(buffer.isEOFRecord(record))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(buffer.isEOFRecord(record))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  if(buffer.isEOFRecord(headerBuf))  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(buffer.isEOFRecord(headerBuf))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(buffer.isEOFRecord(headerBuf))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashBuf))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashBuf))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  buffer.isEOFRecord(hashBuf))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]  if(HitEOF.equals(buffer.readRecord()))  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(HitEOF.equals(buffer.readRecord()))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(HitEOF.equals(buffer.readRecord()))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]    [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	  	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
8	[BUG]  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hash))  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hash))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  buffer.isEOFRecord(hash))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
9	[BUG]  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashToSkip))  {  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashToSkip))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  buffer.isEOFRecord(hashToSkip))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
10	[BUG]  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(headerBuf))  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(headerBuf))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  buffer.isEOFRecord(headerBuf))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(getRecord()))  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(getRecord()))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  buffer.isEOFRecord(getRecord()))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
12	[BUG]  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashCode))  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashCode))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  buffer.isEOFRecord(hashCode))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
13	[BUG]  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashOffset))  {  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  private  byte[]  getRecord()  throws  IOException  {  [BUGGY]  if(hasHitEOF  ||  buffer.isEOFRecord(hashOffset))  {  [BUGGY]  return  null;  }  byte[]  headerBuf  =  buffer.readRecord();  if  (headerBuf  ==  null)  {  hasHitEOF  =  true;  }  else  if  (buffer.isEOFRecord(headerBuf))  {  hasHitEOF  =  true;  }  [CLASS]  TarArchiveInputStream  1  [METHOD]  getRecord  [RETURN_TYPE]  byte[]  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	253	253	1	replace	if(hasHitEOF  ||  buffer.isEOFRecord(hashOffset))  {	if  (hasHitEOF)  {  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
