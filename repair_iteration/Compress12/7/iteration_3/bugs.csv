bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  hasHitEOF);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
2	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  1);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
3	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  SMALL_BUFFER_SIZE);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
4	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  SMALL_BUFFER_SIZE);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
5	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  -  1);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  -  1);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
6	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  readBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize,  readBuf);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
7	[BUG]  [BUGGY]  Iterator.HitEOF  =  this.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  this.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  this.hasHitEOF;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
8	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  +  1;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  +  1;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
9	[BUG]  [BUGGY]  Iterator.HitEOF  =  0;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  0;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
10	[BUG]  [BUGGY]  Iterator.HitEOF  =  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  is.hasHitEOF;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
11	[BUG]  [BUGGY]  Iterator.HitEOF  =  is.readBuf;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  is.readBuf;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
12	[BUG]  [BUGGY]  Iterator.HitEOF  =  recordSize;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  recordSize;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
13	[BUG]  [BUGGY]  this.hasHitEOF  |=  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  true;	  this.hasHitEOF    &=    true;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
14	[BUG]  [BUGGY]  this.hashEOF  &=  false;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  false;	  this.hasHitEOF    &=    true;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
15	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  1;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >  1;	  this.hasHitEOF    =    is.hashCode()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
16	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  0;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  <  0;	  this.hasHitEOF    =    is.hashCode()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
17	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  ==  0;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  ==  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  ==  0;	  this.hasHitEOF    =    is.hashCode()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
18	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >=  0;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >=  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >=  0;	  this.hasHitEOF    =    is.hashCode()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
19	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()!=  0;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()!=  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()!=  0;	  this.hasHitEOF    =    is.hashCode()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
20	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >>  0;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >>  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >>  0;	  this.hasHitEOF    =    is.hashCode()    >    0;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
21	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.read;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.read;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.read;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
22	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readBuf  +  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readBuf  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readBuf  +  1;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
23	[BUG]  [BUGGY]  this.readBuf  &=  is.readBuf;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  &=  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  &=  is.readBuf;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
24	[BUG]  [BUGGY]  this.hasHitEOF  &=  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  recordSize;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
25	[BUG]  [BUGGY]  this.hasHitEOF  |=  is.readBuf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  is.readBuf;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
26	[BUG]  [BUGGY]  HasHitEOF  =  true;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  true;	  This.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
27	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF()  +  1;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF()  +  1;	  this.hasHitEOF    |=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF()  &&  hasHitEOF;	  this.hasHitEOF    |=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf;	  this.hasHitEOF    |=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF()  /  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF()  /  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF()  /  BUFFER_SIZE;	  this.hasHitEOF    |=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
31	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf.length()  >  0;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf.length()  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf.length()  >  0;	  this.hasHitEOF    |=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
33	[BUG]  [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
34	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
35	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
36	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
37	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
38	[BUG]  [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
39	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  *  recordSize;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  *  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  *  recordSize;	  this.hasHitEOF    =    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  1;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  +  1;	  this.hasHitEOF    =    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  this.hasHitEOF  =  is.size()  >  0;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.size()  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.size()  >  0;	  this.hasHitEOF    =    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
43	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
44	[BUG]  [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
45	[BUG]  [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
46	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
47	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  [CE]  illegal  start  of  type  [FE]                                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[length];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[length];	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
48	[BUG]  [BUGGY]  This.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
49	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  +  blockSize;	  this.hasHitEOF    =    is.hashCode()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
50	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  /  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  /  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  /  recordSize;	  this.hasHitEOF    =    is.hashCode()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
51	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  +  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    is.hashCode()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
52	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.hasHitEOF);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
53	[BUG]  [BUGGY]  HashTraversal.traverse(is,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(is,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(is,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
54	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  SMALL_BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  SMALL_BUFFER_SIZE);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
55	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
56	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  hasHitEOF);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
57	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  false);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  false);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  false);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
58	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.currEntry);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.currEntry);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.currEntry);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
59	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  ==  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  ==  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  ==  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    ==    recordSize;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
60	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length!=  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length!=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf.length!=  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    ==    recordSize;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
61	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >=  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >=  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    ==    recordSize;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
62	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf!=  null;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf!=  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf!=  null;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    ==    recordSize;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
63	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf!=  recordSize;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf!=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf!=  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    ==    recordSize;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
64	[BUG]  [BUGGY]  this.hasHitEOF  &=  blockSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  blockSize;	  this.hasHitEOF    &=    is.readSize;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
65	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readSize  +  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readSize  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readSize  +  recordSize;	  this.hasHitEOF    &=    is.readSize;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
66	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readSize  +  1;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readSize  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readSize  +  1;	  this.hasHitEOF    &=    is.readSize;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
67	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.read_buffer;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.read_buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.read_buffer;	  this.hasHitEOF    &=    is.readSize;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
68	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF()  +  1;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF()  +  1;	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF(recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF(recordSize);	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF(blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF(blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF(blockSize);	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  this.hashEOF  |=  getHitEOF();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  |=  getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  |=  getHitEOF();	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
72	[BUG]  [BUGGY]  this.hashEOF  &=  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  is.getHitEOF();	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
73	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF()  *  recordSize;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF()  *  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF()  *  recordSize;	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  blockSize;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >  blockSize;	  this.hasHitEOF    =    is.hashCode()    ==    blockSize;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  ==  is;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  ==  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()  ==  is;	  this.hasHitEOF    =    is.hashCode()    ==    blockSize;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  ==  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  ==  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()  ==  hasHitEOF;	  this.hasHitEOF    =    is.hashCode()    ==    blockSize;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >>  blockSize;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >>  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >>  blockSize;	  this.hasHitEOF    =    is.hashCode()    ==    blockSize;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
79	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
80	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
81	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
82	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
83	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
84	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
85	[BUG]  [BUGGY]  this.hasHitEOF  |=  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  SMALL_BUFFER_SIZE;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
86	[BUG]  [BUGGY]  this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  blockSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  blockSize;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
87	[BUG]  [BUGGY]  this.hasHitEOF  |=(recordSize  >=  SMALL_BUFFER_SIZE)?  false  :  blockSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=(recordSize  >=  SMALL_BUFFER_SIZE)?  false  :  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=(recordSize  >=  SMALL_BUFFER_SIZE)?  false  :  blockSize;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
88	[BUG]  [BUGGY]  this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  blockSize  +  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  blockSize  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  blockSize  +  recordSize;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
89	[BUG]  [BUGGY]  this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=(recordSize  <  SMALL_BUFFER_SIZE)?  false  :  recordSize;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  this.readBuf  =  new  byte[MAX_BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[MAX_BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[MAX_BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
91	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  recordSize];  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  recordSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE  +  recordSize];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
92	[BUG]  [BUGGY]  this.readBuf  =  new  byte[SMALL_BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[SMALL_BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[SMALL_BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
93	[BUG]  [BUGGY]  this.readBuf  =  new  byte[bUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[bUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[bUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
94	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  1];  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE  +  1];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE  +  1];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
95	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()!=  is.hashCode;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()!=  is.hashCode;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()!=  is.hashCode;	  this.hasHitEOF    =    is.hashCode()!=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
96	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()!=  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()!=  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()!=  hasHitEOF;	  this.hasHitEOF    =    is.hashCode()!=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
97	[BUG]  [BUGGY]  this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  BUFFER_SIZE;	  this.hasHitEOF    =       "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
98	[BUG]  [BUGGY]  this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  blockSize;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  blockSize;	  this.hasHitEOF    =       "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
99	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.length  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.length  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.length  +  1;	  this.hasHitEOF    &=    is.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
100	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.length  -  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.length  -  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.length  -  1;	  this.hasHitEOF    &=    is.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
101	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.length  *  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.length  *  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.length  *  recordSize;	  this.hasHitEOF    &=    is.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
102	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.length  +  2;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.length  +  2;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.length  +  2;	  this.hasHitEOF    &=    is.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
103	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  READ_BUFFER_SIZE  :  READ_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  READ_BUFFER_SIZE  :  READ_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?  READ_BUFFER_SIZE  :  READ_BUFFER_SIZE;	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
104	[BUG]  [BUGGY]  this.hasHitEOF  :  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  :  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  :  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
105	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
106	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  :, "HALF_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  :, "HALF_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  :, "HALF_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
107	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  +  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  +  1;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  recordSize;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
109	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
110	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  this.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  this.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  this.hasHitEOF;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
111	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  0;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  0;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
112	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  <  0,  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  <  0,  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf  <  0,  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
113	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf  <  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  is.readBuf  <  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
114	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  >=  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  >=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf  >=  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
115	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  ==  recordSize;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  ==  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf  ==  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
116	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  <  =  recordSize;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  <  =  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf  <  =  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
117	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
118	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(recordSize);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
119	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(true);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(true);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(true);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
120	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(BYTE_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(BYTE_BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(BYTE_BUFFER_SIZE);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
121	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE,  recordSize);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(BUFFER_SIZE,  recordSize);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
122	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  >  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  >  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    >    recordSize;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
123	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >  blockSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >  blockSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    >    recordSize;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
124	[BUG]  [BUGGY]  this.readBuf  =  is.readBuf();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuf();	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
125	[BUG]  [BUGGY]  this.readBuf  =  buffer.readBuf(recordSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  buffer.readBuf(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  buffer.readBuf(recordSize);	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
126	[BUG]  [BUGGY]  this.readBuf  =  buffer.readBuffer();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  buffer.readBuffer();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  buffer.readBuffer();	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
127	[BUG]  [BUGGY]  this.readBuf  =  buffer.toByteArray();  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  buffer.toByteArray();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  buffer.toByteArray();	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
128	[BUG]  [BUGGY]  this.hitEOF  =  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  recordSize;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
129	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  <  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  <  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  recordSize  <  SMALL_BUFFER_SIZE;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
130	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  >  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  >  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  recordSize  >  SMALL_BUFFER_SIZE;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
131	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
132	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
133	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf(blockSize,  recordSize);	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
134	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(BUFFER_SIZE);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
135	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(recordSize);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
136	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(BYTE_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(BYTE_BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(BYTE_BUFFER_SIZE);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
137	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(ByteBuffer.DEFAULT_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(ByteBuffer.DEFAULT_BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(ByteBuffer.DEFAULT_BUFFER_SIZE);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
138	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(true);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(true);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(true);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
139	[BUG]  [BUGGY]  This.hitEOF  =  true;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hitEOF  =  true;	  This.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
140	[BUG]  [BUGGY]  This.hitEOF  =  null;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hitEOF  =  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hitEOF  =  null;	  This.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
141	[BUG]  [BUGGY]  This.hitEOF  = " ";  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hitEOF  = " ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hitEOF  = " ";	  This.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
142	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  ==  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  ==  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  ==  BUFFER_SIZE;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
143	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()!=  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()!=  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()!=  BUFFER_SIZE;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
144	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  >=  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  >=  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  >=  BUFFER_SIZE;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
145	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  ==  BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  ==  BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  ==  BUFFER_SIZE);	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
146	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  >  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  >  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  >  SMALL_BUFFER_SIZE;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
147	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  <  recordSize;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  >  BUFFER_SIZE  &&  is.hashCode()  <  recordSize;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
148	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  this.readBuf.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  this.readBuf.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  this.readBuf.hasHitEOF;	  Iterator.hasHitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
149	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.getHitEOF();	  Iterator.hasHitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
150	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hashCode();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hashCode();	  Iterator.hasHitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
151	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hasHitEOF  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hasHitEOF  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hasHitEOF  ||  hasHitEOF;	  Iterator.hasHitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
152	[BUG]  [BUGGY]  this.hasHitEOF  &=(blockSize  >>  recordSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(blockSize  >>  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(blockSize  >>  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
153	[BUG]  [BUGGY]  this.hasHitEOF  &=(blockSize  >=  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(blockSize  >=  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(blockSize  >=  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
154	[BUG]  [BUGGY]  this.hasHitEOF  &=(recordSize  +  recordSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(recordSize  +  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(recordSize  +  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
155	[BUG]  [BUGGY]  this.hasHitEOF  &=(blockSize!=  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(blockSize!=  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(blockSize!=  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
156	[BUG]  [BUGGY]  this.hasHitEOF  &=(blockSize  [Delete]  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(blockSize  [Delete]  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(blockSize  [Delete]  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
157	[BUG]  [BUGGY]  this.hasHitEOF  &=(recordSize  -  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(recordSize  -  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(recordSize  -  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
158	[BUG]  [BUGGY]  this.hasHitEOF  &=(blockSize  ==  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(blockSize  ==  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(blockSize  ==  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
159	[BUG]  [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hasHitEOF  ||  hasHitEOF;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
160	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  is.hasHitEOF;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
161	[BUG]  [BUGGY]  this.hitEOF  =  is.hasHitEOF  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hasHitEOF  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hasHitEOF  &&  hasHitEOF;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
162	[BUG]  [BUGGY]  this.hitEOF  =!is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!is.hasHitEOF;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
163	[BUG]  [BUGGY]  this.hitEOF  =  is.hashCode;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hashCode;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hashCode;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
164	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF()  +  blockSize;	  this.hasHitEOF    &=    getHitEOF()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
165	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF()  *  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF()  *  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF()  *  recordSize;	  this.hasHitEOF    &=    getHitEOF()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
166	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize  +  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize  +  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF()  +  recordSize  +  BUFFER_SIZE;	  this.hasHitEOF    &=    getHitEOF()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
167	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize  +  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF()  +  recordSize  +  1;	  this.hasHitEOF    &=    getHitEOF()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
168	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF()  +  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF()  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF()  +  recordSize;	  this.hasHitEOF    &=    getHitEOF()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
169	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    is.hashCode()    >    recordSize;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
170	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  recordSize  +  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  recordSize  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >  recordSize  +  1;	  this.hasHitEOF    =    is.hashCode()    >    recordSize;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
171	[BUG]  [BUGGY]  Iterator.HitEOF  =  true;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  true;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
172	[BUG]  [BUGGY]  iterator.hasHitEOF  =  true;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  iterator.hasHitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	iterator.hasHitEOF  =  true;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
173	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.next().hashCode()!=  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.next().hashCode()!=  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.next().hashCode()!=  SMALL_BUFFER_SIZE;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
174	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.next().hashCode()  ==  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.next().hashCode()  ==  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.next().hashCode()  ==  SMALL_BUFFER_SIZE;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
175	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  >  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  >  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hashCode()  >  BUFFER_SIZE;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
176	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?  SMALL_BUFFER_SIZE  :  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?  SMALL_BUFFER_SIZE  :  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?  SMALL_BUFFER_SIZE  :  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
177	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?  SMALL_BUFFER_SIZE  :  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?  SMALL_BUFFER_SIZE  :  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?  SMALL_BUFFER_SIZE  :  BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
178	[BUG]  [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
179	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readBuf.hashCode();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readBuf.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readBuf.hashCode();	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
180	[BUG]  [BUGGY]  this.hasHitEOF  &=  blockSize.hashCode();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  blockSize.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  blockSize.hashCode();	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
181	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.read();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.read();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.read();	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
182	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.size();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.size();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.size();	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
183	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.length();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.length();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.length();	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
184	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.read(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.read(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.read(blockSize,  recordSize);	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
185	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.readBuf;	  this.hasHitEOF    =    is.hasHitEOF    &&    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
186	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  ||  is.hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF    &&    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
187	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  &&  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  &&  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  &&  recordSize;	  this.hasHitEOF    =    is.hasHitEOF    &&    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
188	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is;	  this.hasHitEOF    =    is.hasHitEOF    &&    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
189	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.currentSize;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.currentSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.currentSize;	  this.hasHitEOF    =    is.hasHitEOF    &&    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
190	[BUG]  [BUGGY]  this.hasHitEOF  &=  is;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is;	  this.hasHitEOF    &=    null;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
191	[BUG]  [BUGGY]  this.hasHitEOF  |=  null;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  null;	  this.hasHitEOF    &=    null;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
192	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF()  &&  hasHitEOF;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
193	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF()  ||  hasHitEOF;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
194	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  recordSize  <  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  recordSize  <  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF()  &&  recordSize  <  BUFFER_SIZE;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
195	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  blockSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  blockSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF()  &&  blockSize  <  recordSize;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
196	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
197	[BUG]  [BUGGY]  Iterator.HitEOF  =  false;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  false;	  Iterator.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
198	[BUG]  [BUGGY]  Iterator  iterator.hasHitEOF  =  false;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  iterator.hasHitEOF  =  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  iterator.hasHitEOF  =  false;	  Iterator.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
199	[BUG]  [BUGGY]  iterator.hasHitEOF  =  false;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  iterator.hasHitEOF  =  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	iterator.hasHitEOF  =  false;	  Iterator.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
200	[BUG]  [BUGGY]  Iterator.isHitEOF  =  false;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.isHitEOF  =  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.isHitEOF  =  false;	  Iterator.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
201	[BUG]  [BUGGY]  Iterator.haitEOF  =  false;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.haitEOF  =  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.haitEOF  =  false;	  Iterator.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
202	[BUG]  [BUGGY]  Iterator.hasHitEOF  = "HitEOF ";  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  = "HitEOF ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  = "HitEOF ";	  Iterator.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
203	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readBuf;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.readBuf;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
204	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  this.hasHitEOF;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
205	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf.hasHitEOF;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
206	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readBuf();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.readBuf();	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
207	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf.length;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf.length;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf.length;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
208	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.hashCode();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.hashCode();	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
209	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.hasHitEOF;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
210	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.blockSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
211	[BUG]  [BUGGY]  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
212	[BUG]  [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  blockSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
214	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.length);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.length);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.bytes.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.bytes.length);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.bytes.length);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
216	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
217	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
218	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
219	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
220	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
221	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  recordSize  <  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  recordSize  <  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  ||  recordSize  <  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
222	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  recordSize  >  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  recordSize  >  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  ||  recordSize  >  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
223	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length()  >  recordSize;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
224	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[blockSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[blockSize];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
225	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize  +  1];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize  +  1];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize  +  1];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
226	[BUG]  [BUGGY]  this.readBuf  =  new  byte[bufferedSize];  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[bufferedSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[bufferedSize];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
227	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize  +  BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize  +  BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize  +  BUFFER_SIZE];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
228	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  <  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  is.readBuf.length  <  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
229	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  <  0,  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  <  0,  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  <  0,  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
230	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
231	[BUG]  [BUGGY]  reader  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  reader  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	reader  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
232	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
233	[BUG]  [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
234	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
235	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "SMALL_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "SMALL_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "SMALL_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?       "HALF_BUFFER_SIZE   "    :   "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
236	[BUG]  [BUGGY]  this.hasHitEOF  :  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  :  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  :  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?       "HALF_BUFFER_SIZE   "    :   "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
237	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?       "HALF_BUFFER_SIZE   "    :   "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
238	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE. ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE. ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE. ";	  this.hasHitEOF    =    is.hasHitEOF?       "HALF_BUFFER_SIZE   "    :   "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
239	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  +  1;	  this.hasHitEOF    =    is.hashCode;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
240	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  +  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  +  recordSize;	  this.hasHitEOF    =    is.hashCode;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
241	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  ||  hasHitEOF;	  this.hasHitEOF    =    is.hashCode;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
242	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  &&  is.readBuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  &&  is.readBuf.length  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  &&  is.readBuf.length  >  0;	  this.hasHitEOF    =    is.hashCode;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
243	[BUG]  [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  byte[BUFFER_SIZE];	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
244	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(blockSize,  recordSize);	  this.hasHitEOF    &=    getHitEOF(blockSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
245	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(blockSize  +  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(blockSize  +  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(blockSize  +  recordSize);	  this.hasHitEOF    &=    getHitEOF(blockSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
246	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.getHitEOF(blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.getHitEOF(blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.getHitEOF(blockSize);	  this.hasHitEOF    &=    getHitEOF(blockSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
247	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(blockSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(blockSize  +  1);	  this.hasHitEOF    &=    getHitEOF(blockSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
248	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF(blockSize,  recordSize);	  this.hasHitEOF    &=    getHitEOF(blockSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
249	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    buffer;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
250	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(this.readBuf,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(this.readBuf,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(this.readBuf,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    buffer;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
251	[BUG]  [BUGGY]  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  buffer;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    buffer;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
252	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(bitSize,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(bitSize,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(bitSize,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    buffer;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
253	[BUG]  [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  buffer;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    buffer;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
254	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF()  &&  hasHitEOF;	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
255	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF()  ||  hasHitEOF;	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
256	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  recordSize  <  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  recordSize  <  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF()  &&  recordSize  <  BUFFER_SIZE;	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
257	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  blockSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  blockSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF()  &&  blockSize  <  recordSize;	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
258	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF(recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF(recordSize);	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
259	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  recordSize;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF()  &&  recordSize;	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
260	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  null  :  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  null  :  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  null  :  hasHitEOF;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
261	[BUG]  [BUGGY]  this.hitEOF  =  new  byte[blockSize];  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  new  byte[blockSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  new  byte[blockSize];	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
262	[BUG]  [BUGGY]  this.hitEOF  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  new  byte[BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  new  byte[BUFFER_SIZE];	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
263	[BUG]  [BUGGY]  this.hitEOF  =  is;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
264	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  getHitEOF()  :  null;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  getHitEOF()  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  getHitEOF()  :  null;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
265	[BUG]  [BUGGY]  this.hitEOF  =!recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!recordSize;	  this.hitEOF    =!hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
266	[BUG]  [BUGGY]  this.hitEOF  =!isHitEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!isHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!isHitEOF;	  this.hitEOF    =!hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
267	[BUG]  [BUGGY]  this.hitEOF  =!hasHitEOF  &&  is.readBuf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!hasHitEOF  &&  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!hasHitEOF  &&  is.readBuf;	  this.hitEOF    =!hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
268	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(this.buffer,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(this.buffer,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(this.buffer,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
269	[BUG]  [BUGGY]  This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
270	[BUG]  [BUGGY]  HashTraversal.traverse(is,  this.readBuf,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(is,  this.readBuf,  this.hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(is,  this.readBuf,  this.hasHitEOF);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
271	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.readBuf,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.readBuf,  this.hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.readBuf,  this.hasHitEOF);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
272	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  is.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  is.length);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  is.length);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
273	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.readSize,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.readSize,  this.hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.readSize,  this.hasHitEOF);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
274	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  recordSize);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
275	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  is.in);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  is.in);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  is.in);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
276	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf,  hasHitEOF);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
277	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ",  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ",  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ",  hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF?   "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
278	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "SO-8859-1 "  : "SO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "SO-8859-1 "  : "SO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "SO-8859-1 "  : "SO-8859-1 ";	  this.hasHitEOF    =    is.hasHitEOF?   "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
279	[BUG]  [BUGGY]  this.hasHitEOF  :  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  :  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  :  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ";	  this.hasHitEOF    =    is.hasHitEOF?   "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
280	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-859-1 ";  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : "ISO-859-1 ";	  this.hasHitEOF    =    is.hasHitEOF?   "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
281	[BUG]  [BUGGY]  this.hitEOF  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  new  byte[recordSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  new  byte[recordSize];	  this.hitEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
282	[BUG]  [BUGGY]  this.hitEOF  =  new  byte[blockSize  +  recordSize];  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  new  byte[blockSize  +  recordSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  new  byte[blockSize  +  recordSize];	  this.hitEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
283	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readBuf.getHitEOF();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readBuf.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readBuf.getHitEOF();	  this.hasHitEOF    &=    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
284	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.getHitEOF()  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.getHitEOF()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.getHitEOF()  +  1;	  this.hasHitEOF    &=    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
285	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.getHeaderSize();	  this.hasHitEOF    &=    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
286	[BUG]  [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  &&  is.readBuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  &&  is.readBuf.length  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =!is.hasHitEOF  &&  is.readBuf.length  >  0;	  this.hasHitEOF    =!is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
287	[BUG]  [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =!is.hasHitEOF  ||  hasHitEOF;	  this.hasHitEOF    =!is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
288	[BUG]  [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  &&  is.readBuf.length  >  recordSize;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  &&  is.readBuf.length  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =!is.hasHitEOF  &&  is.readBuf.length  >  recordSize;	  this.hasHitEOF    =!is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
289	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : "ISO-8859-1 ",  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : "ISO-8859-1 ",  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : "ISO-8859-1 ",  hasHitEOF;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
290	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?  null  : "ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?  null  : "ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?  null  : "ISO-8859-1 ";	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
291	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : "ISO-859-1 ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : "ISO-859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : "ISO-859-1 ";	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
292	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : ",ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : ",ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  : ",ISO-8859-1 ";	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
293	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?  null  : "ISO-8859-1 "  : "ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?  null  : "ISO-8859-1 "  : "ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?  null  : "ISO-8859-1 "  : "ISO-8859-1 ";	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
294	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  &&  hasHitEOF;	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
295	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  ||  hasHitEOF;	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
296	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.isEOF();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.isEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.isEOF();	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
297	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.close();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.close();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  &&  is.close();	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
298	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.writeBytes(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.writeBytes(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  &&  is.writeBytes(blockSize,  recordSize);	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
299	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.readBuf.length()  >  0;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.readBuf.length()  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  &&  is.readBuf.length()  >  0;	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
300	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  &&  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  &&  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  &&  is.hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
301	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.hashEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.hashEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.hashEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
302	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  recordSize;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
303	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  ||  is.hashCode;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  ||  is.hashCode;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  ||  is.hashCode;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
304	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.hasHitEOF  +  1;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.hasHitEOF  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.hasHitEOF  +  1;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
305	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.length;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.length;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.length;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
306	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 ",  recordSize  :  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 ",  recordSize  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 ",  recordSize  :  null;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
307	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "Tar-8859-1 "  :  null;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "Tar-8859-1 "  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "Tar-8859-1 "  :  null;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
308	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  :  false;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  :  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "ISO-8859-1 "  :  false;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
309	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
310	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  is.readBuf;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  ||  is.readBuf;	  this.hasHitEOF    =    is.hasHitEOF    ||    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
311	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashEOF  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashEOF  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashEOF  ||  hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
312	[BUG]  [BUGGY]  this.readBuf.hasHitEOF  &=  getHitEOF(this.readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf.hasHitEOF  &=  getHitEOF(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf.hasHitEOF  &=  getHitEOF(this.readBuf);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
313	[BUG]  [BUGGY]  this.readBuf  =  getHitEOF(this.readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  getHitEOF(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  getHitEOF(this.readBuf);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
314	[BUG]  [BUGGY]  this.readBuf.setHitEOF(getHitEOF(this.readBuf));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf.setHitEOF(getHitEOF(this.readBuf));  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf.setHitEOF(getHitEOF(this.readBuf));	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
315	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(this.readBuf,  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(this.readBuf,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(this.readBuf,  recordSize);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
316	[BUG]  [BUGGY]  this.readBuf  &=  getHitEOF(this.readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  &=  getHitEOF(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  &=  getHitEOF(this.readBuf);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
317	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(is.readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(is.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(is.readBuf);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
318	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  blockSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  <  blockSize;	  this.hasHitEOF    =    is.hashCode()    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
319	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  recordSize  +  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  recordSize  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  <  recordSize  +  1;	  this.hasHitEOF    =    is.hashCode()    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
320	[BUG]  [BUGGY]  this.readBuf  =  is.readBuf;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuf;	  this.readBuf    =    buffer.readBuf;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
321	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "SO-8859-1 "  : "SO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "SO-8859-1 "  : "SO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?   "SO-8859-1 "  : "SO-8859-1 ";	  this.hasHitEOF    =    hasHitEOF?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
322	[BUG]  [BUGGY]  this.hasHitEOF  :  hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  :  hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  :  hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ";	  this.hasHitEOF    =    hasHitEOF?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
323	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : "ISO-859-1 ";  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : "ISO-859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : "ISO-859-1 ";	  this.hasHitEOF    =    hasHitEOF?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
324	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ",  is);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ",  is);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : "ISO-8859-1 ",  is);	  this.hasHitEOF    =    hasHitEOF?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
325	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?  true  : "ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?  true  : "ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?  true  : "ISO-8859-1 ";	  this.hasHitEOF    =    hasHitEOF?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
326	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
327	[BUG]  [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
328	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
329	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  blockSize,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
330	[BUG]  [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[BUFFER_SIZE];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
331	[BUG]  [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[blockSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
332	[BUG]  [BUGGY]  readBuf  =  new  byte[BUFFER_SIZE];  this.readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[BUFFER_SIZE];  this.readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[BUFFER_SIZE];  this.readBuf  =  new  byte[BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
333	[BUG]  [BUGGY]  this.readBuf  =  new  byte[0];  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[0];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[0];	  this.readBuf    =    new    byte[BUFFER_SIZE];    this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
334	[BUG]  [BUGGY]  readBuf  =  new  byte[BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[BUFFER_SIZE];	  this.readBuf    =    new    byte[BUFFER_SIZE];    this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
335	[BUG]  [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  byte[recordSize];  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  byte[recordSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  byte[recordSize];	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
336	[BUG]  [BUGGY]  this.hitEOF  &=  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  &=  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  &=  false;	  this.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
337	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize  +  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize  +  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize  +  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
338	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize  +  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize  +  recordSize;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
339	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  +  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  +  recordSize;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
340	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  +  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  +  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  +  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
341	[BUG]  [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  blockSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  blockSize;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
342	[BUG]  [BUGGY]  this.hasHitEOF  =  recordSize  +  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  recordSize  +  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  recordSize  +  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
343	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  +  recordSize;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  +  recordSize;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
344	[BUG]  [BUGGY]  this.HitEOF  =  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.HitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.HitEOF  =  true;	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
345	[BUG]  [BUGGY]  This.HitEOF  =  true;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.HitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.HitEOF  =  true;	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
346	[BUG]  [BUGGY]  this.HitEOF  = " ";  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.HitEOF  = " ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.HitEOF  = " ";	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
347	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.getHitEOF(recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.getHitEOF(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.getHitEOF(recordSize);	  this.hasHitEOF    &=    getHitEOF(recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
348	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF(recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF(recordSize);	  this.hasHitEOF    &=    getHitEOF(recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
349	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
350	[BUG]  [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
351	[BUG]  [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
352	[BUG]  [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  if(readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
353	[BUG]  [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
354	[BUG]  [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
355	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  >=  is.hashCode;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  >=  is.hashCode;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()  >=  is.hashCode;	  this.hasHitEOF    =    is.hashCode()    >=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
356	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  >=  is;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  >=  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()  >=  is;	  this.hasHitEOF    =    is.hashCode()    >=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
357	[BUG]  [BUGGY]  this.readBuf  =  new  byte[RecordSize];  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[RecordSize];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[RecordSize];	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
358	[BUG]  [BUGGY]  this.readBuf  =  new  byte[buffFER_SIZE];  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[buffFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[buffFER_SIZE];	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
359	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  SMALL_BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  SMALL_BUFFER_SIZE);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize  +  SMALL_BUFFER_SIZE);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
360	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  recordSize,  blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  recordSize,  blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  recordSize,  blockSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
361	[BUG]  [BUGGY]  Iterator.hitEOF  =  false;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hitEOF  =  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hitEOF  =  false;	  Iterator.hasHitEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
362	[BUG]  [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  recordSize  +  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  recordSize  +  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  recordSize  +  BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
363	[BUG]  [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  *  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  *  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  SMALL_BUFFER_SIZE  *  recordSize;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
364	[BUG]  [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  recordSize  *  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  recordSize  *  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  SMALL_BUFFER_SIZE  +  recordSize  *  BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
365	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF(this.readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF(this.readBuf);	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
366	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF()  +  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF()  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF()  +  recordSize;	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
367	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  recordSize  +  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  >  recordSize  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  >  recordSize  +  recordSize;	  this.hasHitEOF    =    is.hashCode()    >    recordSize;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
368	[BUG]  [BUGGY]  this.readBuf  =  is;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is;	  this.readBuf    =    buffer.readBuf;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
369	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(buffer);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(buffer);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
370	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(0);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(0);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(0);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
371	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  &  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  &  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  &  BUFFER_SIZE;	  this.hasHitEOF    =    is.hashCode;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
372	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  &  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  &  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  &  recordSize;	  this.hasHitEOF    =    is.hashCode;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
373	[BUG]  [BUGGY]  this.HitEOF  =  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.HitEOF  =  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.HitEOF  =  is.hasHitEOF;	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
374	[BUG]  [BUGGY]  this.HitEOF  =  is.hashCode()  >  0;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.HitEOF  =  is.hashCode()  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.HitEOF  =  is.hashCode()  >  0;	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
375	[BUG]  [BUGGY]  this.HitEOF  =  is.hashCode()  <  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.HitEOF  =  is.hashCode()  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.HitEOF  =  is.hashCode()  <  recordSize;	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
376	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
377	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize);	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
378	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  ==  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  ==  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  ==  recordSize;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
379	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : ",HALF_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : ",HALF_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : ",HALF_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
380	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE "  +  recordSize;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE "  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "HALF_BUFFER_SIZE "  +  recordSize;	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
381	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  :  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  :  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  :  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
382	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
383	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
384	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
385	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashEOF  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashEOF  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashEOF  &&  hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF    &&    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
386	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  recordSize  +  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  <  recordSize  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  <  recordSize  +  recordSize;	  this.hasHitEOF    =    is.hashCode()    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
387	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  >>  is;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()  >>  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()  >>  is;	  this.hasHitEOF    =    is.hashCode()    >=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
388	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize  *  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize  *  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF()  +  recordSize  *  recordSize;	  this.hasHitEOF    &=    getHitEOF()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
389	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "IO-8859-1 "  :  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "IO-8859-1 "  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "IO-8859-1 "  :  null;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
390	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "IO/8859-1 "  :  null;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "IO/8859-1 "  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "IO/8859-1 "  :  null;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
391	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : ",ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : ",ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?   "ISO-8859-1 "  : ",ISO-8859-1 ";	  this.hasHitEOF    =    hasHitEOF?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
392	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.getHitEOF();	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
393	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.read(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.read(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.read(blockSize,  recordSize);	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
394	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  this.readBuf;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
395	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.read();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.read();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.read();	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
396	[BUG]  [BUGGY]  this.readBuf  =  new  byte[recordSize  +  2];  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[recordSize  +  2];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[recordSize  +  2];	  this.readBuf    =    new    byte[recordSize];    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
397	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  recordSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  recordSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  recordSize  <  recordSize;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
398	[BUG]  [BUGGY]  this.hasHitEOF  =  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  recordSize;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
399	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
400	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  recordSize  >  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  recordSize  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  recordSize  >  recordSize;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
401	[BUG]  [BUGGY]  this.hasHitEOF  &=  readBuf;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  readBuf;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
402	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readBuf,  recordSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readBuf,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readBuf,  recordSize);	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
403	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readBuf  +  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readBuf  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readBuf  +  recordSize;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
404	[BUG]  [BUGGY]  this.hashEOF  &=  is.readBuf;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  is.readBuf;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
405	[BUG]  [BUGGY]  this.hasHitEOF  =!is.hashEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =!is.hashEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =!is.hashEOF;	  this.hasHitEOF    =!is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
406	[BUG]  [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  ||  recordSize  >  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =!is.hasHitEOF  ||  recordSize  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =!is.hasHitEOF  ||  recordSize  >  recordSize;	  this.hasHitEOF    =!is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
407	[BUG]  [BUGGY]  this.hitEOF  =  is.hasHitEOF  &&  recordSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hasHitEOF  &&  recordSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hasHitEOF  &&  recordSize  <  recordSize;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
408	[BUG]  [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  recordSize  >  0;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  recordSize  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hasHitEOF  ||  recordSize  >  0;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
409	[BUG]  [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  recordSize  +  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  recordSize  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hasHitEOF  ||  recordSize  +  recordSize;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
410	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF?  is.hashCode()  :  0;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF?  is.hashCode()  :  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF?  is.hashCode()  :  0;	  this.hasHitEOF    =    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
411	[BUG]  [BUGGY]  this.hasHitEOF  =  is.readBuf.hashCode();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.readBuf.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.readBuf.hashCode();	  this.hasHitEOF    =    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
412	[BUG]  [BUGGY]  this.hasHitEOF  =  is.size();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.size();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.size();	  this.hasHitEOF    =    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
413	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  recordSize  -  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  recordSize  -  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  +  recordSize  -  1;	  this.hasHitEOF    =    is.hashCode()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
414	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  -  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  -  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  -  recordSize;	  this.hasHitEOF    =    is.hashCode()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
415	[BUG]  [BUGGY]  this.hasHitEOF  =  recordSize.hashCode()  +  is;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  recordSize.hashCode()  +  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  recordSize.hashCode()  +  is;	  this.hasHitEOF    =    is.hashCode()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
416	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?  1  :  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?  1  :  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?  1  :  1;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
417	[BUG]  [BUGGY]  this.hitEOF  &=  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  &=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  &=  recordSize;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
418	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  true  :  false;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  true  :  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  true  :  false;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
419	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  false  :  null;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  false  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  false  :  null;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
420	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  true  :  null;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  true  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  true  :  null;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
421	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  -  1);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize  -  1);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
422	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
423	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  readSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  readSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  readSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
424	[BUG]  [BUGGY]  this.readEOF  &=  getHitEOF(this.readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readEOF  &=  getHitEOF(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readEOF  &=  getHitEOF(this.readBuf);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
425	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF(this.readBuf,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF(this.readBuf,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF(this.readBuf,  recordSize);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
426	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(this.readBuf,  readSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(this.readBuf,  readSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(this.readBuf,  readSize);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
427	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  null  : "   ";  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  null  : "   ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  null  : "   ";	  this.hitEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
428	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  recordSize  >  is.readBuf.length;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  recordSize  >  is.readBuf.length;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  recordSize  >  is.readBuf.length;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    >    recordSize;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
429	[BUG]  [BUGGY]  This.hitEOF  =  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hitEOF  =  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hitEOF  =  is.hasHitEOF;	  This.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
430	[BUG]  [BUGGY]  This.hitEOF  =  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hitEOF  =  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hitEOF  =  is.getHitEOF();	  This.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
431	[BUG]  [BUGGY]  this.readBuf  =  new  byte[4];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[4];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[4];	  this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
432	[BUG]  [BUGGY]  byte[]  readBuf  =  buffer.readBuffer();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  buffer.readBuffer();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  buffer.readBuffer();	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
433	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(this.buffer);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(this.buffer);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(this.buffer);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
434	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(buffer);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(buffer);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
435	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
436	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
437	[BUG]  [BUGGY]  if(recordSize!=  recordSize)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  recordSize)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  recordSize)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
438	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
439	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : ",SMALL_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : ",SMALL_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : ",SMALL_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?       "HALF_BUFFER_SIZE   "    :   "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
440	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE "  +  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE "  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE "  +  recordSize;	  this.hasHitEOF    =    is.hasHitEOF?       "HALF_BUFFER_SIZE   "    :   "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
441	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  :, "SMALL_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  :, "SMALL_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  :, "SMALL_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?       "HALF_BUFFER_SIZE   "    :   "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
442	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  recordSize);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
443	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  TarBuffer.DEFAULT_TEST_BUFFER);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  TarBuffer.DEFAULT_TEST_BUFFER);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  TarBuffer.DEFAULT_TEST_BUFFER);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
444	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  is);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  is);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  is);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
445	[BUG]  [BUGGY]  this.hitEOF  &=  getHitEOF();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  &=  getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  &=  getHitEOF();	  this.hasHitEOF    &=    getHitEOF()    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
446	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.getHitEOF()  +  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.getHitEOF()  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.getHitEOF()  +  recordSize;	  this.hasHitEOF    &=    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
447	[BUG]  [BUGGY]  this.hitEOF  &=  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  &=  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  &=  is.getHitEOF();	  this.hasHitEOF    &=    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
448	[BUG]  [BUGGY]  this.hashEOF  &=  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  recordSize;	  this.hasHitEOF    &=    null;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
449	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
450	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  recordSize;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF()  &&  recordSize;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
451	[BUG]  [BUGGY]  this.hasHitEOF  =  is.readBuf.getHitEOF();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.readBuf.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.readBuf.getHitEOF();	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
452	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  recordSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  &&  recordSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF()  &&  recordSize  <  recordSize;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
453	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  +  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF()  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF()  +  recordSize;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
454	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  recordSize);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
455	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  readBuf);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
456	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  recordSize);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
457	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  readBuf,  this.hasHitEOF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  readBuf,  this.hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  readBuf,  this.hasHitEOF);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
458	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.readSize,  is.readBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.readSize,  is.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.readSize,  is.readBuf);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
459	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
460	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
461	[BUG]  [BUGGY]  this.hasHitEOF  &=  recordSize.hashCode();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  recordSize.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  recordSize.hashCode();	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
462	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.read(buffer,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.read(buffer,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.read(buffer,  0,  recordSize);	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
463	[BUG]  [BUGGY]  this.hasHitEOF  &=(recordSize  >  recordSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(recordSize  >  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(recordSize  >  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
464	[BUG]  [BUGGY]  this.hasHitEOF  &=(recordSize  *  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(recordSize  *  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(recordSize  *  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
465	[BUG]  [BUGGY]  this.hasHitEOF  &=(recordSize  <  recordSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(recordSize  <  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(recordSize  <  recordSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
466	[BUG]  [BUGGY]  this.hasHitEOF  &=(recordSize  >>  blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(recordSize  >>  blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(recordSize  >>  blockSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
467	[BUG]  [BUGGY]  this.hashEOF  &=  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  true;	  this.hasHitEOF    &=    true;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
468	[BUG]  [BUGGY]  this.hasHitEOF  &=  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  hasHitEOF;	  this.hasHitEOF    &=    is.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
469	[BUG]  [BUGGY]  this.hasHitEOF  =  recordSize.hashCode()  ==  is;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  recordSize.hashCode()  ==  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  recordSize.hashCode()  ==  is;	  this.hasHitEOF    =    is.hashCode()    ==    recordSize;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
470	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
471	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
472	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
473	[BUG]  [BUGGY]  this.readBuf  =  new  byte[HITEOF_BUFFER_SIZE];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[HITEOF_BUFFER_SIZE];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[HITEOF_BUFFER_SIZE];	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    byte[BUFFER_SIZE];    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
474	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
475	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  <  recordSize);	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
476	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  ==  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  ==  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  ==  recordSize;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
477	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  +  this.readBuf.length;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  +  this.readBuf.length;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  +  this.readBuf.length;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
478	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf.length  >  0;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
479	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOFR();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOFR();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOFR();	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
480	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF(recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF(recordSize);	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
481	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  &&  recordSize;	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
482	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >>  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >>  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  >>  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
483	[BUG]  [BUGGY]  this.hasHitEOF  |=  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  recordSize;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
484	[BUG]  [BUGGY]  this.hasHitEOF  |=  is.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  is.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  is.getHeaderSize();	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
485	[BUG]  [BUGGY]  this.readBuf  =  buffer.readBuffer(recordSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  buffer.readBuffer(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  buffer.readBuffer(recordSize);	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
486	[BUG]  [BUGGY]  this.readBuf  =  buffer.readBuf(this.readBuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  buffer.readBuf(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  buffer.readBuf(this.readBuf);	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
487	[BUG]  [BUGGY]  this.hitEOF  =!HitEOF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!HitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!HitEOF;	  this.hitEOF    =!hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
488	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(recordSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(recordSize  +  1);	  this.hasHitEOF    &=    getHitEOF(recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
489	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.getHitEOF();	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
490	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.readBuf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.readBuf;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
491	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.isEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.isEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.isEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
492	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(recordSize,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(recordSize,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(recordSize,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
493	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : ",ISO-8859-1 ";  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : ",ISO-8859-1 ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "ISO-8859-1 "  : ",ISO-8859-1 ";	  this.hasHitEOF    =    is.hasHitEOF?   "ISO-8859-1   "    :   "ISO-8859-1   ";    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
494	[BUG]  [BUGGY]  this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  recordSize;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =   "SMALL_BUFFER_SIZE "  +  recordSize;	  this.hasHitEOF    =       "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
495	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
496	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
497	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
498	[BUG]  [BUGGY]  if(recordSize  >=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize  >=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize  >=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
499	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
500	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  recordSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  recordSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  recordSize  <  recordSize;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
501	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  recordSize  <  recordSize;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
502	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  >  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  recordSize  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  recordSize  >  recordSize;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
503	[BUG]  [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.hasHitEOF)  {  if(readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
504	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
505	[BUG]  [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize!=  0)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
506	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
507	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF(blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF(blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF(blockSize);	  this.hasHitEOF    &=    getHitEOF(blockSize);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
508	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
509	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE  &&  hasHitEOF;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
510	[BUG]  [BUGGY]  Iterator.hitEOF  =  true;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hitEOF  =  true;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
511	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hashCode()  ==  BUFFER_SIZE  ||  hasHitEOF;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
512	[BUG]  [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()!=  is;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  blockSize.hashCode()!=  is;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  blockSize.hashCode()!=  is;	  this.hasHitEOF    =    is.hashCode()!=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
513	[BUG]  [BUGGY]  this.hasHitEOF  &=  readBuf.readSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  readBuf.readSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  readBuf.readSize;	  this.hasHitEOF    &=    is.readSize;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
514	[BUG]  [BUGGY]  this.hitEOF  =  is.hashEOF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hashEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hashEOF;	  this.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
515	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  >  recordSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf  >  recordSize;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
516	[BUG]  [BUGGY]  HasHitEOF  =  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hasHitEOF;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
517	[BUG]  [BUGGY]  HasHitEOF  = "hasHitEOF ";  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  = "hasHitEOF ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  = "hasHitEOF ";	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
518	[BUG]  [BUGGY]  HasHitEOF  =  is.isEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.isEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.isEOF();	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
519	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  >  0;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  >  0;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
520	[BUG]  [BUGGY]  hasHitEOF  =  true;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  hasHitEOF  =  true;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	hasHitEOF  =  true;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
521	[BUG]  [BUGGY]  HasHitEOF  =  is.hashCode()  <  recordSize;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.hashCode()  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.hashCode()  <  recordSize;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
522	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  +  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  +  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF()  +  recordSize;	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
523	[BUG]  [BUGGY]  this.hasHitEOF  =  is.readBuf.getAsHitEOF();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.readBuf.getAsHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.readBuf.getAsHitEOF();	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
524	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
525	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
526	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
527	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
528	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  System.arraycopy(readBuf,  0,  readBuf,  0,  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  System.arraycopy(readBuf,  0,  readBuf,  0,  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(blockSize,  recordSize);  }  else  {  System.arraycopy(readBuf,  0,  readBuf,  0,	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
529	[BUG]  [BUGGY]  This.hasHitEOF  =  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hasHitEOF  =  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hasHitEOF  =  is.getHitEOF();	  This.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
530	[BUG]  [BUGGY]  This.hasHitEOF  =  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hasHitEOF  =  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hasHitEOF  =  is.hasHitEOF;	  This.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
531	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.length,  recordSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.length,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.length,  recordSize);	  this.hasHitEOF    &=    is.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
532	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.length);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.length);	  this.hasHitEOF    &=    is.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
533	[BUG]  [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  getHitEOF()  &&  is.readBuf();	  this.hasHitEOF    |=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
534	[BUG]  [BUGGY]  this.hasHitEOF  |=  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  is.getHitEOF();	  this.hasHitEOF    |=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
535	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  recordSize  *  recordSize;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  +  recordSize  *  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  +  recordSize  *  recordSize;	  this.hasHitEOF    =    is.hashCode()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
536	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.entryOffset);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.entryOffset);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.entryOffset);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
537	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.length);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.length);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
538	[BUG]  [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.currentSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.currentSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this,  TarBuffer.DEFAULT_TEST_BUFFER,  this.readBuf,  this.currentSize);	  HashTraversal.traverse(this,    TarBuffer.DEFAULT_TEST_BUFFER,    this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
539	[BUG]  [BUGGY]  this.hashEOF  &=  getHitEOF(is);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hashEOF  &=  getHitEOF(is);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hashEOF  &=  getHitEOF(is);	  this.hashEOF    &=    getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
540	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
541	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
542	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readCode();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readCode();	  this.hasHitEOF    &=    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
543	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()? "SMALL_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()? "SMALL_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()? "SMALL_BUFFER_SIZE "  : "SMALL_BUFFER_SIZE ";	  this.hasHitEOF    =       "SMALL_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
544	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.readSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.readSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  this.readSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
545	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  1,  recordSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  1,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  1,  recordSize);	  System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
546	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
547	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
548	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
549	[BUG]  [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  return  buffer;	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    return    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
550	[BUG]  [BUGGY]  HasHitEOF  =  is.isEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HasHitEOF  =  is.isEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HasHitEOF  =  is.isEOF;	  HasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
551	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.readBuf();	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
552	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf[recordSize]!=  recordSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readBuf[recordSize]!=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.readBuf[recordSize]!=  recordSize;	  this.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
553	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize,  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF()  +  recordSize,  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF()  +  recordSize,  hasHitEOF;	  this.hasHitEOF    &=    getHitEOF()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
554	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  getHitEOF()  :  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  getHitEOF()  :  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  getHitEOF()  :  recordSize;	  this.hitEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
555	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readByte;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readByte;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readByte;	  this.hasHitEOF    &=    is.readBuf;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
556	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(hasHitEOF,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(hasHitEOF,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(hasHitEOF,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    buffer;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
557	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF?  getHitEOF()  :  blockSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF?  getHitEOF()  :  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF?  getHitEOF()  :  blockSize;	  this.hitEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
558	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  &&  is.readEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  &&  is.readEOF;	  this.hasHitEOF    =    is.hasHitEOF    &&    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
559	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  <  2;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  <  2;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf.length  <  2;	  this.hitEOF    =    hasHitEOF    &&    is.readBuf.length    <    recordSize;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
560	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(recordSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(recordSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(recordSize,  recordSize);	  this.hasHitEOF    &=    getHitEOF(recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
561	[BUG]  [BUGGY]  this.hasHitEOF  &=  getHitEOF(recordSize,  this.readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  getHitEOF(recordSize,  this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  getHitEOF(recordSize,  this.readBuf);	  this.hasHitEOF    &=    getHitEOF(recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
562	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  ||  is.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  ||  is.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  ||  is.hasHitEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
563	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.readEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.readEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.readEOF;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
564	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.hasHeaderSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF  ||  is.hasHeaderSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF  ||  is.hasHeaderSize;	  this.hasHitEOF    =    is.hasHitEOF    ||    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
565	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf();	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
566	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  this.readBuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  this.readBuf.length  >  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  this.readBuf.length  >  0;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
567	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.read();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.read();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  is.read();	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
568	[BUG]  [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.HitEOF  =  hasHitEOF  &&  is.readBuf;	  Iterator.HitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
569	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.readEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.readEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.readEOF;	  Iterator.hasHitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
570	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.readBlock();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.readBlock();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  &&  is.readBlock();	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
571	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.readBuf();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()  &&  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()  &&  is.readBuf();	  this.hasHitEOF    =    is.isEOF();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
572	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
573	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  this.readBuf);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
574	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  hasHitEOF);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  hasHitEOF);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
575	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  this.entryOffset);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  this.entryOffset);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  this.entryOffset);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
576	[BUG]  [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  this.currentSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  this.currentSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	HashTraversal.traverse(this.readBuf,  this.hasHitEOF,  is.readBuf,  this.currentSize);	  HashTraversal.traverse(this.readBuf,    this.hasHitEOF,    is.readBuf);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
577	[BUG]  [BUGGY]  this.hasHitEOF  &=(recordSize  >=  blockSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=(recordSize  >=  blockSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=(recordSize  >=  blockSize);	  this.hasHitEOF    &=(recordSize    >=    recordSize);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
578	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuf();	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
579	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  +  this.readBuf.length;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  +  this.readBuf.length;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  +  this.readBuf.length;	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
580	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuffer();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuffer();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  hasHitEOF  &&  is.readBuffer();	  Iterator.hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
581	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer;	  this.readBuf    =    buffer.readBuf;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
582	[BUG]  [BUGGY]  this.readBuf  =  new  byte[size()  ];  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  byte[size()  ];  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  byte[size()  ];	  this.readBuf    =    buffer.readBuf;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
583	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  *  blockSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  *  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  *  blockSize;	  this.hasHitEOF    =    is.hashCode()    >=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
584	[BUG]  [BUGGY]  this.hasHitEOF  =  is.size()  >=  blockSize;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.size()  >=  blockSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.size()  >=  blockSize;	  this.hasHitEOF    =    is.hashCode()    >=    blockSize;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
585	[BUG]  [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  is.readSize  <  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hasHitEOF  ||  is.readSize  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hasHitEOF  ||  is.readSize  <  recordSize;	  this.hitEOF    =    is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
586	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode()  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode()  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode()  &&  hasHitEOF;	  this.hasHitEOF    =    is.hashCode();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
587	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readHeaderSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readHeaderSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readHeaderSize;	  this.hasHitEOF    &=    is.readSize;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
588	[BUG]  [BUGGY]  this.hasHitEOF  =!this.hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =!this.hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =!this.hasHitEOF;	  this.hasHitEOF    =!is.hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
589	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  is.close();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getAsHitEOF()  &&  is.close();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getAsHitEOF()  &&  is.close();	  this.hasHitEOF    =    is.getAsHitEOF();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
590	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(buffered,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(buffered,  blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(buffered,  blockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
591	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  BlockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  BlockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  BlockSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
592	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(bitSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(bitSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(bitSize,  recordSize);	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    null;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
593	[BUG]  [BUGGY]  this.hitEOF  =  is.getHitEOF();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.getHitEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.getHitEOF();	  this.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
594	[BUG]  [BUGGY]  this.hitEOF  =  is.hashCode();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  is.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  is.hashCode();	  this.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
595	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
596	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
597	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
598	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  +  recordSize  :  SMALL_BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  +  recordSize  :  SMALL_BUFFER_SIZE;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  +  recordSize  :  SMALL_BUFFER_SIZE;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
599	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  +  recordSize  :  0;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  +  recordSize  :  0;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?  SMALL_BUFFER_SIZE  +  recordSize  :  0;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
600	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  recordSize  +  SMALL_BUFFER_SIZE  :  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?  recordSize  +  SMALL_BUFFER_SIZE  :  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?  recordSize  +  SMALL_BUFFER_SIZE  :  recordSize;	  this.hasHitEOF    =    SMALL_BUFFER_SIZE    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
601	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "UTF-8 "  :  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "UTF-8 "  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "UTF-8 "  :  null;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
602	[BUG]  [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-859-1 "  :  null;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.isEOF()?   "ISO-859-1 "  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.isEOF()?   "ISO-859-1 "  :  null;	  this.hasHitEOF    =    is.isEOF()?       "ISO-8859-1   "    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
603	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.read(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.read(blockSize,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.read(blockSize,  recordSize);	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
604	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf();	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
605	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuffer[recordSize]!=  recordSize;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuffer[recordSize]!=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuffer[recordSize]!=  recordSize;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
606	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf[recordSize]!=  recordSize;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  &&  is.readBuf[recordSize]!=  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  &&  is.readBuf[recordSize]!=  recordSize;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
607	[BUG]  [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =  hasHitEOF  ||  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =  hasHitEOF  ||  is.readBuf;	  this.hitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
608	[BUG]  [BUGGY]  this.readBuf  =  buffer.readBuf(buffer,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  buffer.readBuf(buffer,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  buffer.readBuf(buffer,  0,  recordSize);	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
609	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(buffer,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(buffer,  0,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(buffer,  0,  recordSize);	  this.readBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
610	[BUG]  [BUGGY]  this.hasHitEOF  &=  is.readEOF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  &=  is.readEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  &=  is.readEOF;	  this.hasHitEOF    &=    null;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
611	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.readEOF;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
612	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readEOF();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  is.readEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  is.readEOF();	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
613	[BUG]  [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.hashEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator  <  HitEOF>  hasHitEOF  =  this.hashEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator  <  HitEOF>  hasHitEOF  =  this.hashEOF;	  Iterator    <    HitEOF>    hasHitEOF    =    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
614	[BUG]  [BUGGY]  This.hitEOF  =  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hitEOF  =  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hitEOF  =  hasHitEOF;	  This.hitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
615	[BUG]  [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  is.currentSize;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  hasHitEOF  ||  is.currentSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  hasHitEOF  ||  is.currentSize;	  this.hasHitEOF    =    is.hasHitEOF    ||    hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
616	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[length];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[length];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
617	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SHALF_BUFFER_SIZE ";  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SHALF_BUFFER_SIZE ";  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hasHitEOF?   "HALF_BUFFER_SIZE "  : "SHALF_BUFFER_SIZE ";	  this.hasHitEOF    =    is.hasHitEOF?   "HALF_BUFFER_SIZE   "    :   "HALF_BUFFER_SIZE   ";    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
618	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.getIterator().hasNext();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.getIterator().hasNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.getIterator().hasNext();	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
619	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hasHitEOF?  true  :  false;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hasHitEOF?  true  :  false;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hasHitEOF?  true  :  false;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
620	[BUG]  [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  <  recordSize;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  Iterator.hasHitEOF  =  is.hashCode()  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	Iterator.hasHitEOF  =  is.hashCode()  <  recordSize;	  Iterator.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
621	[BUG]  [BUGGY]  This.hasHitEOF  =  is.hashCode()  <  recordSize;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  This.hasHitEOF  =  is.hashCode()  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	This.hasHitEOF  =  is.hashCode()  <  recordSize;	  This.hasHitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
622	[BUG]  [BUGGY]  byte[]  readBuf  =  is.readBuffer(buffer,  recordSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  byte[]  readBuf  =  is.readBuffer(buffer,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	byte[]  readBuf  =  is.readBuffer(buffer,  recordSize);	  byte[]    readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
623	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
624	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
625	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  byte[recordSize];  System.arraycopy(this.readBuf,  0,  this.readBuf,  0,  recordSize);  this.readBuf  =  buffer;  }	  if(readBuf!=    null)    {    this.readBuf    =    new    byte[recordSize];    System.arraycopy(readBuf,    0,    this.readBuf,    0,    recordSize);    this.readBuf    =    buffer;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
626	[BUG]  [BUGGY]  this.hasHitEOF  =  is.readEOF;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.readEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.readEOF;	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
627	[BUG]  [BUGGY]  this.hasHitEOF  =  is.getHitEOF(recordSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.getHitEOF(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.getHitEOF(recordSize);	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
628	[BUG]  [BUGGY]  this.hasHitEOF  =  is.readEOF();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.readEOF();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.readEOF();	  this.hasHitEOF    =    is.getHitEOF();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
629	[BUG]  [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize)+  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize)+  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize)+  1;	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
630	[BUG]  [BUGGY]  this.hitEOF  =!hasHitEOF  ||  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!hasHitEOF  ||  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!hasHitEOF  ||  hasHitEOF;	  this.hitEOF    =!hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
631	[BUG]  [BUGGY]  this.hitEOF  =!hasHitEOF  ||  is.readBuf;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!hasHitEOF  ||  is.readBuf;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!hasHitEOF  ||  is.readBuf;	  this.hitEOF    =!hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
632	[BUG]  [BUGGY]  this.hitEOF  =!hasHitEOF  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hitEOF  =!hasHitEOF  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hitEOF  =!hasHitEOF  &&  hasHitEOF;	  this.hitEOF    =!hasHitEOF;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
633	[BUG]  [BUGGY]  this.HitEOF  =  hasHitEOF;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.HitEOF  =  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.HitEOF  =  hasHitEOF;	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
634	[BUG]  [BUGGY]  this.HitEOF  =  is.hashCode()  >  recordSize;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.HitEOF  =  is.hashCode()  >  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.HitEOF  =  is.hashCode()  >  recordSize;	  this.HitEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
635	[BUG]  [BUGGY]  this.hasHitEOF  |=  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  hasHitEOF;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
636	[BUG]  [BUGGY]  this.hasHitEOF  |=  is.hashCode();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  is.hashCode();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  is.hashCode();	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
637	[BUG]  [BUGGY]  this.hasHitEOF  |=  is.hashCode()  <  recordSize;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  |=  is.hashCode()  <  recordSize;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  |=  is.hashCode()  <  recordSize;	  this.hasHitEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
638	[BUG]  [BUGGY]  this.readBuf  =  is.readBuffer(buffer,  recordSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readBuf  =  is.readBuffer(buffer,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readBuf  =  is.readBuffer(buffer,  recordSize);	  this.readBuf    =    is.readBuffer();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
639	[BUG]  [BUGGY]  this.hasHitEOF  =  is.hashCode  &&  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.hasHitEOF  =  is.hashCode  &&  hasHitEOF;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.hasHitEOF  =  is.hashCode  &&  hasHitEOF;	  this.hasHitEOF    =    is.hashCode;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
640	[BUG]  [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf!=  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf!=  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
641	[BUG]  [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(this.readBuf  ==  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(this.readBuf  ==  null)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
642	[BUG]  [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(hasHitEOF)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
643	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	if(recordSize  >  0)  {  this.readBuf  =  new  TarBuffer(is,  blockSize,  recordSize);  }  else  {  System.arraycopy(this.readBuf,  0,  readBuf,  0,  recordSize);  }	  this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    this.readBuf    =    new    TarBuffer(is,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
644	[BUG]  [BUGGY]  this.readEOF  =  getHitEOF(this.readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readEOF  =  getHitEOF(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readEOF  =  getHitEOF(this.readBuf);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
645	[BUG]  [BUGGY]  this.readSize  -=  getHitEOF(this.readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  TarArchiveInputStream(InputStream  is,  int  blockSize,  int  recordSize)  {  this.buffer  =  new  TarBuffer(is,  blockSize,  recordSize);  this.readBuf  =  null;      [BUGGY]  this.readSize  -=  getHitEOF(this.readBuf);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  1  [METHOD]  <init>  [RETURN_TYPE]  InputStream,int,int)  InputStream  is  int  blockSize  int  recordSize  [VARIABLES]  byte[]  readBuf  boolean  hasHitEOF  InputStream  is  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	82	82	1	replace	this.readSize  -=  getHitEOF(this.readBuf);	  this.hasHitEOF    &=    getHitEOF(this.readBuf);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
