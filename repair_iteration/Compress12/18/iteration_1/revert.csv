projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerSize:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.read();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerSize:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerSize:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:header;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:header;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.lengthhasHitEOF?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:null+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:null.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.hashCode();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,buffer.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?buffer.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBufbuzunar?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){hasHitEOF=true;}else{buffer.readRecord();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?buffer.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBufnull:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerToSkip:headerBuf;
