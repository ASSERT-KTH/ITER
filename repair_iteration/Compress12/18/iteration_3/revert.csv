projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerSize:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.read();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerSize:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerSize:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:header;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:header;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.lengthhasHitEOF?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:null+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:null.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.hashCode();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,buffer.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?buffer.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBufbuzunar?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265if(buffer.isEOFRecord(headerBuf)){hasHitEOF=true;}else{buffer.readRecord();}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?buffer.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBufnull:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerToSkip:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-headerSize:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:isEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:HITEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>=null?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBuf:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)||buffer.isEOFRecord(headerBuf)){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.hasHitEOF&&buffer.isEOFRecord(headerBuf)){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferheaderBuf=buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)&&headerBuf.length()>0){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)&&!hasHitEOF){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)&&hasHitEOF!=false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&&headerBuf:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnisEOF?headerBuf:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,headerBuf?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&&headerBuf:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:0;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:this;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hashCode()?headerBuf:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.lengthhasHitEOF?headerBuf:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerSize:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerSize:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?buffer.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?buffer.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf+1,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf+2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null-hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null&&hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null/hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,buffer.readRecord():hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null?hasHitEOF:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF()){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF()){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,buffer.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,buffer.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,buffer.length-headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buffer,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF(headerBuf)){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferheaderBuf=buffer.readRecord();hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:header.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?headerBuf.length:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.length-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?hasHitEOF:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:buffer.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:header.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.toString()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hashEOF?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:hasHitEOF.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?headerBuf.length:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(headerBuf,0,buf,buffer,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(headerBuf,0,buf,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerBuf.length-headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf,headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf,headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>headerBuf.length?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:header.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.toByteArray()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?EOF:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>hasHitEOF?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>0?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>headerBuf.length?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>0?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>headerBuf.length?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length!HitEOF?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>hasHitEOF?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,headerBuf?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length,hasHitEOF?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?null:headerBuf.length-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?null:headerBuf.toByteArray()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?this:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.toByteArray()?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.hashCode();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?null:headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerToSkip;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerToSkip;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderToSkip?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderToSkip>0?headerToSkip:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.toSkip:headerToSkip;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerToSkip:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?buffer.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnisEOF?headerBuf.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?0:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,buffer.length?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?null:headerBuf.length();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hashCode()?header:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hashEOF?header:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferheaderBuf=buffer.readHeaderBuffer(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265headerBuf=buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferbuffer=buffer.readHeaderBuffer(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferheaderBuf=buffer.readHeaderBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265result.add(buffer.readRecord());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?hasHitEOF:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:buffer.readEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,false):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,skipBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnisEOF?headerBuf:buffer.readEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferheaderBuf=buffer.readRecord();hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferbuffer=buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265haveHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?hasHitEOF:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>=null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf<null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:header.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:header;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize?hasHitEOF:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerSize:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:headerBuf.read();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:buffer.readRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?hasHitEOF:buffer.readRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:buffer.readRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.read();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.read(buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.readInt();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:header.read();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:0;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:isEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:header.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf&hasHitEOF:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf.length:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf?headerBuf.length:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&/headerBuf:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf!=null&&headerBuf.length()>0;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:null+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:null+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf)+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length-hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length-headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length/hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length%2!=hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length%2==hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-isHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord()?null:headerBuf.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer?null:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.readRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.getRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.length,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?EOF:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.lengthhasHitEOF?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(headerBuf,0,buf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(headerBuf,0,buffer,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length-2);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length-4);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:buffer.isEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnisEOF?headerBuf:buffer.isEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBuf:buffer.isEOFRecord(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf):this;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?buffer.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?headerBuf.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?buf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?header.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>EOF?headerBuf:buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf,skipBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:header.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerLength;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(headerBuf,0,buf,buffer,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(headerBuf,0,buf,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerSize-headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,bufferSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerSize+1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord()&&hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord()&&headerBuf.length()>0;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord()?null:buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord(headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord()+headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?false:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?true:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:buffer.toByteArray()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBufnull:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBufnull:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBufnull?headerBufnull:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBufnull?headerBufnull:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?headerBufnull:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.lengthhasHitEOF?headerBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?headerBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF&&buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?buf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:null.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.toByteArray():null.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?hasHitEOF:null.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,0,headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf,null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length,null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,headerBuf.length:null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?header:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.read(),hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.toString(),hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,hasHitEOF.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?header.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?header.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheader.length?hasHitEOF:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?header.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>>null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerToSkip:skipBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,skipped):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readUTF(headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length:hasHitEOF+headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length-headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length/hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length<hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>=hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readREcord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?header.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.read()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.length-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>hasHitEOF?header:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>headerBuf.length?headerBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.length/1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf+1L;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length-headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.toByteArray(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.toByteArray()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>0?headerBuf:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf.read(0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?null:headerBuf.toByteArray(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?null:headBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?NULL:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerSize:skipBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerSize:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:skipBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF(headerBuf)){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)||buffer.isEOFRecord(headerBuf)){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)&&hasHitEOF){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?EOF:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize?hasHitEOF:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?null:headerBuf.toByteArray()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.size()>headerBuf.length?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.isEOF?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?EOF:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null?0:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,headerBuf?null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer?null:buffer.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?null:buffer.toByteArray(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,headerBuf,null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBuf,null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBuf,headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,headerBuf.length:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buffer,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerSize-1);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265safely(buffer.readRecord(),headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF(headerBuf)&&headerBuf.length>0){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265haveHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferbuffer=buffer.readRecord();hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferbuffer=buffer.readHeader(headerBuf);hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferbuffer=buffer.readHeader(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferbuffer=buffer.readHeaderByteBuffer(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>headBuf.length?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,headerBuf.length?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:0,headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:skipBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:recordSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,skipped);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,readBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize?headerBuf:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length>0?headerBuf.length:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOF()){for(inti=0;i<headerBuf.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>=null?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,headerBuf,0,headerBuf.length-6);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length-hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null&hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,buffer,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buffer,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:buffer.hashCode();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:skipBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:skipped;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:headBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf,skipBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?buffer.length-headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length:hasHitEOF?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length&hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length%hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBuf:hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf+1L;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord()&&headerBuf.length()!=0;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?hasHitEOF:buffer.readRecord;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?headerBuf.length:skipBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?buffer.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?headerBuf:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf.length-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>hasHitEOF?headerBuf:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265array[headerBuf.length-1]=buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HeaderBufferbuffer=buffer.readHeaderBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265array[headerBuf.length]=buffer.readRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerHeaderSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerSize+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:buffer;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:buffer.readEOFRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOF()){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)&&buffer.length>0){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:buffer.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBufnull:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBufnull:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBufnull:headerBuf,hasHitEOF+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerSize:headerBuf.length-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerSize:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize?headerBuf.length:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,0?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)&&headerBuf.length>0){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)&&hasHitEOF==false){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.shouldEOFRecord(headerBuf)){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.hasEOF(headerBuf)){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,skipBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,skipped;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,readBuf,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf)+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerSize:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerLength:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerEnd:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderHitEOF?hasHitEOF:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:buffer.readEOFRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readHeader(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuff.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length<0?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length}?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,0,headerBuf.length?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBuf.length:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf>>null?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf[Delete]null?null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF?headerBuf.length:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderSize>headerBuf.length?headerSize:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.toString():null.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.toByteArray():null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?buffer.length:header.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,null:headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,headerSize:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null?null:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(bodyBuf,0,buf,headerBuf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.length?headerBuf.length:hashitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length+1:buffer.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265}elseif(buffer.isEOFRecord(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)){for(inti=0;i<buffer.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf,null:headerBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(buffer,0,buf,headerBuf,0,headerSize-headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(bodyBuf,0,buf,headerBuf,0,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerSize:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265}elseif(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOF()){for(inti=0;i<headerBuf.length;++i){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.toString():headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf+1:headerSize;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?headerBuf.length:hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?buffer.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashITEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length:hasHitEOF+headerBuf.length+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf),hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf):this;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF&headerBuf:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf,skipBuf+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashCodeTraversal.traverse(buffer,headerBuf,newReporter());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashCodeTraversal.traverse(buffer,headerBuf,this);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashCodeTraversal.traverse(compiler,headerBuf,buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashCodeTraversal.traverse(buffer,headerBuf,buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.toString():headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf.toByteArray()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf!=null?null:headerBuf.toString();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length-hasHitEOF?headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)){hasHitEOF=false;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)&&hasHitEOF){hasHitEOF=true;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)||buffer.isEOFRecord(headerBuf)){hasHitEOF=true;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,buffer.isEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,headerBuf,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,buffer.isEOFRecord(headerBuf));
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf?null:headerBuf,skipBuf,hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,hasHitEOF?buffer.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashTraversal.traverse(buffer,headerBuf,buffer.readRecord());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashTraversal.traverse(compiler,headerBuf,buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashTraversal.traverse(buffer,headerBuf,buffer.readRecord(),hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashTraversal.traverse(BufferUtil.readBuffer(buffer),headerBuf,buffer.readRecord());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265HashTraversal.traverse(buffer,headerBuf,newReporter());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:newbyte[0];
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readEOFRecord(headerBuf,headerEnd);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265System.arraycopy(bodyBuf,0,buf,0,headerBuf.length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf==null||headerBuf.length==0?null:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.toByteArray()?buffer.toByteArray():headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length,headerBuf.length:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?headerBuf:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.length?headerBuf.length:headerBuf.length-hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?header:headerBuf.hashCode();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?this:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf.hasHitEOF?1:headerBuf.toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf),hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.isEOFRecord(headerBuf,headerBuf):null;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnbuffer.readRecord()?null:buffer.readEOFRecord(headerBuf);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null&&headerBuf.length()>0;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnheaderBuf,null?hasHitEOF:headerBuf.length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?header:headerBuf.length-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.toByteArray()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,headerSize);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,headerEnd);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.readRecord(headerBuf,headerLength);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf.length:headerBuf.length/2+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?headerBuf:buffer.toByteArray()&&hasHitEOF;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265returnhasHitEOF?buffer.toByteArray():headerBuf;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265while(buffer.isEOFRecord(headerBuf)){for(inti=0;i<headerBuf.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){for(inti=1;i<headerBuf.length;++i){hasHitEOF=false;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java265elseif(buffer.isEOFRecord(headerBuf)){inti=0;i<headerBuf.length;++i){hasHitEOF=false;}
