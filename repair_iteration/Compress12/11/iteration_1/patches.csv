bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf();	  byte[]    headerBuf    =    getRecordInputStream();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer();	  byte[]    headerBuf    =    getRecordInputStream();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBuffer();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBuffer();	  byte[]    headerBuf    =    getRecordInputStream();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(skipped);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(skipped);	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes();	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(skipped);	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuffer();	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip);	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(headerBuf);	  byte[]    headerBuf    =    getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped,  readBuf);	  byte[]    headerBuf    =    getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  1);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped  +  1);	  byte[]    headerBuf    =    getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  buffer);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  buffer);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped,  buffer);	  byte[]    headerBuf    =    getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(numToSkip);	  byte[]    headerBuf    =    getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(skipped);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(skipped);	  byte[]    headerBuf    =    getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf().toByteArray();	  byte[]    headerBuf    =    getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuf();	  byte[]    headerBuf    =    getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(headerBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(headerBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(headerBuf);	  byte[]    headerBuf    =    getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordUrl();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordUrl();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordUrl();	  byte[]    headerBuf    =    getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipped);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipBuf);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  headerBuf);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  length);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(skipped);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(skipped);	  byte[]    headerBuf    =    getRecordBytes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesInputStream();	  byte[]    headerBuf    =    getRecordBytes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(skipped);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(skipped);	  byte[]    headerBuf    =    getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().toByteArray();	  byte[]    headerBuf    =    getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length;  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().length;	  byte[]    headerBuf    =    getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBaseBuffer();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getBaseBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBaseBuffer();	  byte[]    headerBuf    =    getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(headerBuf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(headerBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(headerBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  int  numRead  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  int  numRead  =  readBuf.length();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  numRead  =  readBuf.length();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(skipped);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer().toByteArray();	  byte[]    headerBuf    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getBuffer();	  byte[]    headerBuf    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(skipped);	  byte[]    headerBuf    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
43	[BUG]  [BUGGY]  byte[]  headerBuf  =  this.headerBuf;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  this.headerBuf;  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  this.headerBuf;	  byte[]    headerBuf    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
44	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().toByteArray();	  byte[]    headerBuf    =    getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
45	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(skipped);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordSize(skipped);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(skipped);	  byte[]    headerBuf    =    getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBounds();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBounds();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBounds();	  byte[]    headerBuf    =    getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize()  +  1;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordSize()  +  1;  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize()  +  1;	  byte[]    headerBuf    =    getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
49	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  buf);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buffer);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buffer);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  buffer);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf);	  byte[]    headerBuf    =    getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(longName);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(longName);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(longName);	  byte[]    headerBuf    =    getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  len);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  len);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  len);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf);	  byte[]    headerBuf    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getBuffer(length);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(length);	  byte[]    headerBuf    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
57	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf);	  byte[]    headerBuf    =    getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(buffer);	  byte[]    headerBuf    =    getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.toByteArray();	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf);	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readBuf();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.readBuf();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readBuf();	  byte[]    headerBuf    =    buffer.getRecord();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer();	  byte[]    headerBuf    =    getRecordInputStream();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getNextTarEntry();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntry();	  byte[]    headerBuf    =    getRecordInputStream();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordFileBuffer();	  byte[]    headerBuf    =    getRecordInputStream();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInputStream(buffer);	  byte[]    headerBuf    =    getRecordInputStream();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordSize();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getRecordSize();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordSize();	  byte[]    headerBuf    =    getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf;  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf;	  byte[]    headerBuf    =    getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf);	  byte[]    headerBuf    =    getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(headerBuf);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(headerBuf);	  byte[]    headerBuf    =    getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(longName);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(longName);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(longName);	  byte[]    headerBuf    =    getRecordBytes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  buf  =  buffer.getBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  long  headerBuf  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  long  headerBuf  =  readBuf.length();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  readBuf.length();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  long  headerBuf  =  buffer.getHeaderSize();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderSize();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(numToSkip);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(longName);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  buf  =  buffer.getBytes(longName);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(longName);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordInput();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  buffer.getRecordInput();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordInput();	  byte[]    headerBuf    =    getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordURL();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordURL();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordURL();	  byte[]    headerBuf    =    getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(longName);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getBuffer(longName);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(longName);	  byte[]    headerBuf    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
79	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerSize);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerSize);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  headerSize);	  byte[]    headerBuf    =    getRecord(buffer);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerSize);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
81	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset);  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
82	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBindingBuffer();	  byte[]    headerBuf    =    getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
83	[BUG]  [BUGGY]  long  headerBuf  =  readBuf.toString();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  long  headerBuf  =  readBuf.toString();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  readBuf.toString();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  int  entryOffset  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(   "failed  to  skip  current  tar  entry   ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }    [BUGGY]  int  entryOffset  =  readBuf.length();  [BUGGY]      if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  entryOffset  =  readBuf.length();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
