bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipped);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipped);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
2	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
3	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  hasHitEOF);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  hasHitEOF);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
4	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf,  skipBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
5	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipBuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipBuf.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  skipBuf.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
6	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  buffer.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  buffer.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
7	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSizeBuffer();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSizeBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSizeBuffer();	  byte[]    headerBuf    =    getRecordFileBuffer();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
8	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordFileBuffer(skipped);	  byte[]    headerBuf    =    getRecordFileBuffer();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
9	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesBuffer();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesBuffer();	  byte[]    headerBuf    =    getRecordFileBuffer();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
10	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordUrlBuffer();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordUrlBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordUrlBuffer();	  byte[]    headerBuf    =    getRecordFileBuffer();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
11	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaders();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaders();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaders();	  byte[]    headerBuf    =    getRecordBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
12	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readBuf(skipped);	  byte[]    headerBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
13	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer();	  byte[]    headerBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
14	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readBytes(skipped);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readBytes(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readBytes(skipped);	  byte[]    headerBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
15	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordSize(skipped);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordSize(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordSize(skipped);	  byte[]    headerBuf    =    buffer.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
16	[BUG]  [BUGGY]  byte[]  headerBuf  =  currEntry.getRecordSize();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  currEntry.getRecordSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  currEntry.getRecordSize();	  byte[]    headerBuf    =    buffer.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
17	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderSize();	  byte[]    headerBuf    =    buffer.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
18	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skipped);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skipped);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
19	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  numToSkip);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
20	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skipBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skipBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
21	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  readBuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  readBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
22	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(skipped,  numToSkip);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(skipped,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(skipped,  numToSkip);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
23	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skip);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  skip);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
24	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip,  skipped);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip,  skipped);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
25	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip,  skipped);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(numToSkip,  skipped);	  byte[]    headerBuf    =    getRecord(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip,  readBuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(numToSkip,  readBuf);	  byte[]    headerBuf    =    getRecord(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip,  skipBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(numToSkip,  skipBuf);	  byte[]    headerBuf    =    getRecord(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(longName,  readBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(longName,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(longName,  readBuf);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
29	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(longName,  buffer.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(longName,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(longName,  buffer.length);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
30	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(headerBuf);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
31	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(numToSkip);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(numToSkip);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
32	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  buffer.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  buffer.length);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
33	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  buf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  buf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  buf);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
34	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  buf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  buf.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  buf.length);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
35	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(buf,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(buf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(buf,  readBuf);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
36	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  skipBuf);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
37	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray(skipped);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().toByteArray(skipped);	  byte[]    headerBuf    =    getHeaderBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
38	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBaseBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBaseBuffer().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBaseBuffer().toByteArray();	  byte[]    headerBuf    =    getHeaderBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
39	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf();	  byte[]    headerBuf    =    getHeaderBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
40	[BUG]  [BUGGY]  StringBuffer  headerBuf  =  getHeaderBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  StringBuffer  headerBuf  =  getHeaderBuffer().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	StringBuffer  headerBuf  =  getHeaderBuffer().toByteArray();	  byte[]    headerBuf    =    getHeaderBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
41	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(longName);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(longName);	  byte[]    headerBuf    =    buffer.getRecordBytes();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordHeaderBuf();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordHeaderBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordHeaderBuf();	  byte[]    headerBuf    =    buffer.getRecordBytes();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray(skipped);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer().toByteArray(skipped);	  byte[]    headerBuf    =    getBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
44	[BUG]  [BUGGY]  StringBuffer  headerBuf  =  getBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  StringBuffer  headerBuf  =  getBuffer().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	StringBuffer  headerBuf  =  getBuffer().toByteArray();	  byte[]    headerBuf    =    getBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
45	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray()  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer().toByteArray()  +  1;	  byte[]    headerBuf    =    getBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
46	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream(skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesInputStream(skipped);	  byte[]    headerBuf    =    getRecordBytesInputStream();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
47	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesReadBuffer();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesReadBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesReadBuffer();	  byte[]    headerBuf    =    getRecordBytesInputStream();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
48	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream().readBuf();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream().readBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesInputStream().readBuf();	  byte[]    headerBuf    =    getRecordBytesInputStream();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
49	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  skipBuf);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
50	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  readBuf);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
51	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  hasHitEOF);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  hasHitEOF);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
52	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  length);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
53	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer;	  byte[]    headerBuf    =    this.headerBuf;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
54	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.headerBuf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.headerBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.headerBuf;	  byte[]    headerBuf    =    this.headerBuf;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
55	[BUG]  [BUGGY]  byte[]  headerBuf  =  this.headerBuf,  readBuf;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  this.headerBuf,  readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  this.headerBuf,  readBuf;	  byte[]    headerBuf    =    this.headerBuf;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
56	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBuffer(skipped);	  byte[]    headerBuf    =    getRecordBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBuffer().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBuffer().toByteArray();	  byte[]    headerBuf    =    getRecordBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBuffer();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBuffer();	  byte[]    headerBuf    =    getRecordBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBuffer(headerBuf);	  byte[]    headerBuf    =    getRecordBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(buffer);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
61	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  skipped);	  byte[]    headerBuf    =    getRecordBytes(buffer);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
62	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  skipBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  skipBuf);	  byte[]    headerBuf    =    getRecordBytes(buffer);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
63	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerSize);	  byte[]    headerBuf    =    getRecord(buffer,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
64	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  skipped);	  byte[]    headerBuf    =    getRecord(buffer,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
65	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerOffset);	  byte[]    headerBuf    =    getRecord(buffer,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
66	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buf,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buf,  readBuf);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(headerBuf,  readBuf);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
68	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  sink);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  sink);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  sink);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
69	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf,  buffer);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf,  buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped,  readBuf,  buffer);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
70	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped,  readBuf,  skipBuf);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
71	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf,  skipped);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped,  readBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped,  readBuf,  skipped);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  skipBuf);	  byte[]    headerBuf    =    getRecord(readBuf);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
73	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(skipped,  readBuf);	  byte[]    headerBuf    =    getHeaderBuf(skipped);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
74	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(skipped  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(skipped  +  1);	  byte[]    headerBuf    =    getHeaderBuf(skipped);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
75	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(longName);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(longName);	  byte[]    headerBuf    =    getHeaderBuf(skipped);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
76	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(headerBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(headerBuf,  readBuf);	  byte[]    headerBuf    =    getHeaderBuffer(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
77	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(longName);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(longName);	  byte[]    headerBuf    =    getHeaderBuffer(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
78	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(buffer);	  byte[]    headerBuf    =    getHeaderBuffer(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
79	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray(skipped);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf().toByteArray(skipped);	  byte[]    headerBuf    =    getHeaderBuf().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
80	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray()  +  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf().toByteArray()  +  1;	  byte[]    headerBuf    =    getHeaderBuf().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(longName,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(longName,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(longName,  readBuf);	  byte[]    headerBuf    =    getRecord(longName);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
82	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(longName,  buffer);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(longName,  buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(longName,  buffer);	  byte[]    headerBuf    =    getRecord(longName);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
83	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(longName,  buffer.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(longName,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(longName,  buffer.length);	  byte[]    headerBuf    =    getRecord(longName);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
84	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer);	  byte[]    headerBuf    =    getHeaderBuffer().readBuf;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
85	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(skipped);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf(skipped);	  byte[]    headerBuf    =    getHeaderBuffer().readBuf;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
86	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf,  readBuf;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf,  readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf,  readBuf;	  byte[]    headerBuf    =    getHeaderBuffer().readBuf;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
87	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  buffer.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  buffer.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    buffer);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
88	[BUG]  [BUGGY]  int  headerBuf  =  readBuf.toString();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  headerBuf  =  readBuf.toString();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  headerBuf  =  readBuf.toString();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
89	[BUG]  [BUGGY]  long  headerBuf  =  buffer.toString();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.toString();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.toString();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
90	[BUG]  [BUGGY]  long  headerBuf  =  readBuf.toByteArray();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  readBuf.toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  readBuf.toByteArray();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
91	[BUG]  [BUGGY]  long  headerBuf  =  buf.toString();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buf.toString();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buf.toString();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
92	[BUG]  [BUGGY]  byte  headerBuf  =  readBuf.toString();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte  headerBuf  =  readBuf.toString();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte  headerBuf  =  readBuf.toString();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
93	[BUG]  [BUGGY]  long  headerBuf  =  currEntry.toString();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  currEntry.toString();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  currEntry.toString();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
94	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(headerBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(headerBuf,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
95	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  headerBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  headerBuf);	  byte[]    headerBuf    =    getRecordBytes(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
96	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(headerBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(headerBuf);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
97	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(buffer);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(buffer);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
98	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(skipped  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(skipped  +  1);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
99	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(readBuf);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
100	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(skipped,  readBuf);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
101	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(numToSkip);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(numToSkip);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
102	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize(buffer,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize(buffer,  skipped);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
103	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(skipped);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.toByteArray(skipped);	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
104	[BUG]  [BUGGY]  byte[]  headerBuf  =  currEntry.toByteArray();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  currEntry.toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  currEntry.toByteArray();	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
105	[BUG]  [BUGGY]  byte[]  headerBuf  =  this.buffer.toByteArray();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  this.buffer.toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  this.buffer.toByteArray();	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
106	[BUG]  [BUGGY]  StringBuffer  headerBuf  =  buffer.toByteArray();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  StringBuffer  headerBuf  =  buffer.toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	StringBuffer  headerBuf  =  buffer.toByteArray();	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
107	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  headerBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  headerBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
108	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(skipped);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(skipped);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
109	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf,  readBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
110	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buf,  skipBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
111	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buf,  headerBuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buf,  headerBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
112	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buf,  skipped);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buf,  skipped);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
113	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
114	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(skipped  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(skipped  +  1);	  byte[]    headerBuf    =    getHeaderBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
115	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(skipped,  readBuf);	  byte[]    headerBuf    =    getHeaderBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
116	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(numToSkip);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(numToSkip);	  byte[]    headerBuf    =    getHeaderBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
117	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(length  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(length  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(length  +  1);	  byte[]    headerBuf    =    getBuffer(length);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
118	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(length,  readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(length,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(length,  readBuf);	  byte[]    headerBuf    =    getBuffer(length);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
119	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip,  skipped);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip,  skipped);	  byte[]    headerBuf    =    buffer.getRecordBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
120	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped,  numToSkip);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(skipped,  numToSkip);	  byte[]    headerBuf    =    buffer.getRecordBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
121	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip,  readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip,  readBuf);	  byte[]    headerBuf    =    buffer.getRecordBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
122	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(numToSkip  +  1);	  byte[]    headerBuf    =    buffer.getRecordBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
123	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf,  buffer);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf,  buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(headerBuf,  buffer);	  byte[]    headerBuf    =    getRecord(buffer,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
124	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerBuf);	  byte[]    headerBuf    =    getRecord(buffer,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
125	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
126	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  headerSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
127	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(skipped  +  1);	  byte[]    headerBuf    =    buffer.getRecordBytes(skipped);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
128	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(skipped,  readBuf);	  byte[]    headerBuf    =    buffer.getRecordBytes(skipped);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
129	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(headerBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(headerBuf);	  byte[]    headerBuf    =    buffer.getRecordBytes(skipped);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
130	[BUG]  [BUGGY]  int  numRead  =  headerBuf.length();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  numRead  =  headerBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  numRead  =  headerBuf.length();	  int    numRead    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
131	[BUG]  [BUGGY]  long  numRead  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  numRead  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  numRead  =  readBuf.length();	  int    numRead    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
132	[BUG]  [BUGGY]  int  numRead  =  readBuf.length()  +  1;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  numRead  =  readBuf.length()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  numRead  =  readBuf.length()  +  1;	  int    numRead    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
133	[BUG]  [BUGGY]  int  numRead  =  readBuf.length()  -  1;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  numRead  =  readBuf.length()  -  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  numRead  =  readBuf.length()  -  1;	  int    numRead    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
134	[BUG]  [BUGGY]  byte  numRead  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte  numRead  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte  numRead  =  readBuf.length();	  int    numRead    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
135	[BUG]  [BUGGY]  int  numRead  =  this.readBuf.length();  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  numRead  =  this.readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  numRead  =  this.readBuf.length();	  int    numRead    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
136	[BUG]  [BUGGY]  int  headerBuf  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  headerBuf  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  headerBuf  =  readBuf.length();	  long    headerBuf    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
137	[BUG]  [BUGGY]  long  headerBuf  =  readBuf.length()  -  1;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  readBuf.length()  -  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  readBuf.length()  -  1;	  long    headerBuf    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
138	[BUG]  [BUGGY]  long  headerBuf  =  buffer.length();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.length();	  long    headerBuf    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
139	[BUG]  [BUGGY]  long  headerBuf  =  readBuf.length()  +  1;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  readBuf.length()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  readBuf.length()  +  1;	  long    headerBuf    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
140	[BUG]  [BUGGY]  byte  headerBuf  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte  headerBuf  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte  headerBuf  =  readBuf.length();	  long    headerBuf    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
141	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordHeaderBuffer();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordHeaderBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordHeaderBuffer();	  byte[]    headerBuf    =    buffer.getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
142	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordInput(skipped);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordInput(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordInput(skipped);	  byte[]    headerBuf    =    buffer.getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
143	[BUG]  [BUGGY]  long  entryOffset  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  entryOffset  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  entryOffset  =  readBuf.length();	  int    entryOffset    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
144	[BUG]  [BUGGY]  int  entryOffset  =  headerBuf.length();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  entryOffset  =  headerBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  entryOffset  =  headerBuf.length();	  int    entryOffset    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
145	[BUG]  [BUGGY]  int  entryOffset  =  readBuf.length()  -  1;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  entryOffset  =  readBuf.length()  -  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  entryOffset  =  readBuf.length()  -  1;	  int    entryOffset    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
146	[BUG]  [BUGGY]  int  entryOffset  =  readBuf.length()  +  1;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  entryOffset  =  readBuf.length()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  entryOffset  =  readBuf.length()  +  1;	  int    entryOffset    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
147	[BUG]  [BUGGY]  short  entryOffset  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  short  entryOffset  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	short  entryOffset  =  readBuf.length();	  int    entryOffset    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
148	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeader();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeader();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeader();	  byte[]    headerBuf    =    getRecordUrl();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
149	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordUrl().toByteArray();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordUrl().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordUrl().toByteArray();	  byte[]    headerBuf    =    getRecordUrl();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
150	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBaseBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBaseBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBaseBuffer(skipped);	  byte[]    headerBuf    =    getBaseBuffer();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
151	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getBaseBuffer();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getBaseBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getBaseBuffer();	  byte[]    headerBuf    =    getBaseBuffer();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
152	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  buffer.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  buffer.length);	  byte[]    headerBuf    =    getHeaderBuf(readBuf);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
153	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  skipBuf);	  byte[]    headerBuf    =    getHeaderBuf(readBuf);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
154	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  buffer.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf,  buffer.length);	  byte[]    headerBuf    =    getHeaderBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
155	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf,  skipBuf);	  byte[]    headerBuf    =    getHeaderBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
156	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf,  readBuf);	  byte[]    headerBuf    =    getHeaderBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
157	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  buf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  buf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf,  buf);	  byte[]    headerBuf    =    getHeaderBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
158	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(longName,  readBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(longName,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(longName,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
159	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(numToSkip);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(numToSkip);	  byte[]    headerBuf    =    getRecordBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
160	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(lengthName,  readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(lengthName,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(lengthName,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
161	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getBuffer(skipped);	  byte[]    headerBuf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
162	[BUG]  [BUGGY]  byte[]  headerBuf  =  currEntry.getBuffer();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  currEntry.getBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  currEntry.getBuffer();	  byte[]    headerBuf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
163	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getBytes(skipped);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getBytes(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getBytes(skipped);	  byte[]    headerBuf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
164	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(skipped  +  1);	  byte[]    headerBuf    =    getBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
165	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(skipped,  readBuf);	  byte[]    headerBuf    =    getBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
166	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped,  buffer.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(skipped,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(skipped,  buffer.length);	  byte[]    headerBuf    =    getBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
167	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  buf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  buf.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  buf.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
168	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  buffer.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  buffer.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
169	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  readSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  readSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  readSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
170	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readOffset);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
171	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length  +  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().length  +  1;	  byte[]    headerBuf    =    getHeaderBuffer().length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
172	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer().length;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer().length;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuffer().length;	  byte[]    headerBuf    =    getHeaderBuffer().length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
173	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length  -  1;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length  -  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().length  -  1;	  byte[]    headerBuf    =    getHeaderBuffer().length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
174	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(headerBuf  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(headerBuf  +  1);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
175	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  1,  buffer.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  1,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped  +  1,  buffer.length);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
176	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(numToSkip  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(numToSkip  +  1);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
177	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  2);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  2);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped  +  2);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
178	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  1,  readBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  1,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped  +  1,  readBuf);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
179	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  len);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  len);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  0,  len);	  byte[]    headerBuf    =    getRecord(buffer,    len);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
180	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  len,  readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  len,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  len,  readBuf);	  byte[]    headerBuf    =    getRecord(buffer,    len);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
181	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  len);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  len);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  len);	  byte[]    headerBuf    =    getRecord(buffer,    len);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
182	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  offset,  len);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  offset,  len);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  offset,  len);	  byte[]    headerBuf    =    getRecord(buffer,    len);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
183	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(skipped);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf(skipped);	  byte[]    headerBuf    =    getRecordHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
184	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(headerBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf(headerBuf);	  byte[]    headerBuf    =    getRecordHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
185	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf().toByteArray();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf().toByteArray();	  byte[]    headerBuf    =    getRecordHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
186	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf().length;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf().length;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf().length;	  byte[]    headerBuf    =    getRecordHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
187	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  buffer.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  buffer.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipped);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
188	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  numToSkip);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  numToSkip);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipped);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
189	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  buffer);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  buffer);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipped);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
190	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf,  skipped);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  readBuf,  skipped);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipped);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
191	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(skipped);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(skipped);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
192	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(longName,  readBuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(longName,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(longName,  readBuf);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
193	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(headerBuf);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(headerBuf);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
194	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(name);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(name);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(name);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
195	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(nullName);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(nullName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(nullName);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
196	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  buf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  buf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  buf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
197	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip,  skipped);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip,  skipped);	  byte[]    headerBuf    =    buffer.readByteBuffer(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
198	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(0,  numToSkip);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(0,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(0,  numToSkip);	  byte[]    headerBuf    =    buffer.readByteBuffer(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
199	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip  +  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip  +  1);	  byte[]    headerBuf    =    buffer.readByteBuffer(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
200	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(headerBuf);	  byte[]    headerBuf    =    buffer.readByteBuffer(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
201	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(chunkBuf,  numToSkip);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(chunkBuf,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(chunkBuf,  numToSkip);	  byte[]    headerBuf    =    buffer.readByteBuffer(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
202	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buf,  readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buf,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    buf);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
203	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(skipped,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    buf);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
204	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(headerBuf,  buf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(headerBuf,  buf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(headerBuf,  buf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    buf);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
205	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer(skipped);	  byte[]    headerBuf    =    getRecordByteBuffer();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
206	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer().toByteArray();	  byte[]    headerBuf    =    getRecordByteBuffer();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
207	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(numToSkip);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer(numToSkip);	  byte[]    headerBuf    =    getRecordByteBuffer();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
208	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(skipped,  readBuf);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
209	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(skipped  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(skipped  +  1);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
210	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(headerBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(headerBuf);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
211	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(numToSkip);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(numToSkip);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
212	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(longName);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(longName);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
213	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(buffer,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(buffer,  skipped);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
214	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
215	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  headerOffset);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  headerOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
216	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  hasHitEOF);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  hasHitEOF);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
217	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  numToSkip);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  numToSkip);	  byte[]    headerBuf    =    getRecord(buffer,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
218	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  entrySize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  entrySize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  entrySize);	  byte[]    headerBuf    =    getRecord(buffer,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
219	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBindingBuffer(skipped);	  byte[]    headerBuf    =    getRecordBindingBuffer();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
220	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBindingBuffer(headerBuf);	  byte[]    headerBuf    =    getRecordBindingBuffer();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
221	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(numToSkip);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBindingBuffer(numToSkip);	  byte[]    headerBuf    =    getRecordBindingBuffer();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
222	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(lengthName);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(lengthName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBindingBuffer(lengthName);	  byte[]    headerBuf    =    getRecordBindingBuffer();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
223	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipped,  readBuf);	  byte[]    headerBuf    =    getRecord(buffer,    skipped);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
224	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped,  buffer.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipped,  buffer.length);	  byte[]    headerBuf    =    getRecord(buffer,    skipped);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
225	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped,  length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipped,  length);	  byte[]    headerBuf    =    getRecord(buffer,    skipped);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
226	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray(skipped);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().toByteArray(skipped);	  byte[]    headerBuf    =    getRecordSize().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
227	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray()  +  1;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().toByteArray()  +  1;	  byte[]    headerBuf    =    getRecordSize().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
228	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray(buffer);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().toByteArray(buffer);	  byte[]    headerBuf    =    getRecordSize().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
229	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length,  readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  length,  readBuf);	  byte[]    headerBuf    =    getRecord(buffer,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
230	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  length);	  byte[]    headerBuf    =    getRecord(buffer,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
231	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  0,  length);	  byte[]    headerBuf    =    getRecord(buffer,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
232	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length,  skipBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  length,  skipBuf);	  byte[]    headerBuf    =    getRecord(buffer,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
233	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer(skipped);	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
234	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer(headerBuf);	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
235	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer().toByteArray();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer().toByteArray();	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
236	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(longName);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer(longName);	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
237	[BUG]  [BUGGY]  int  headerBuf  =  buffer.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  headerBuf  =  buffer.getHeaderSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  headerBuf  =  buffer.getHeaderSize();	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
238	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  -  1;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  -  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderSize()  -  1;	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
239	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  +  1;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderSize()  +  1;	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
240	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  -  numToSkip;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  -  numToSkip;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderSize()  -  numToSkip;	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
241	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  +  numToSkip;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  +  numToSkip;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderSize()  +  numToSkip;	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
242	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  /  BUFFER_SIZE;  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.getHeaderSize()  /  BUFFER_SIZE;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderSize()  /  BUFFER_SIZE;	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
243	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(headerBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(headerBuf,  readBuf);	  byte[]    headerBuf    =    getHeaderBuf(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
244	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  headerBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(buffer,  headerBuf);	  byte[]    headerBuf    =    getHeaderBuf(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
245	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(buffer,  readBuf);	  byte[]    headerBuf    =    getHeaderBuf(buffer);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
246	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(buffer,  skipped);	  byte[]    headerBuf    =    getHeaderBuf(buffer);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
247	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  skipBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(buffer,  skipBuf);	  byte[]    headerBuf    =    getHeaderBuf(buffer);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
248	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(buffer,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(buffer,  length);	  byte[]    headerBuf    =    getHeaderBuf(buffer);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
249	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip,  skipped);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(numToSkip,  skipped);	  byte[]    buf    =    buffer.getBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
250	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip  +  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(numToSkip  +  1);	  byte[]    buf    =    buffer.getBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
251	[BUG]  [BUGGY]  byte[]  buf  =  currEntry.getBytes(numToSkip);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  currEntry.getBytes(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  currEntry.getBytes(numToSkip);	  byte[]    buf    =    buffer.getBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
252	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip,  readBuf);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(numToSkip,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(numToSkip,  readBuf);	  byte[]    buf    =    buffer.getBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
253	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuf(skipped);	  byte[]    headerBuf    =    buffer.getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
254	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(headerBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuf(headerBuf);	  byte[]    headerBuf    =    buffer.getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
255	[BUG]  [BUGGY]  byte[]  headerBuf  =  currEntry.getHeaderBuf();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  currEntry.getHeaderBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  currEntry.getHeaderBuf();	  byte[]    headerBuf    =    buffer.getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
256	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(skipped  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(skipped  +  1);	  byte[]    headerBuf    =    getRecordBytes(skipped);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
257	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped  +  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(skipped  +  1);	  byte[]    headerBuf    =    buffer.readByteBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
258	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped,  readBuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(skipped,  readBuf);	  byte[]    headerBuf    =    buffer.readByteBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
259	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped,  length);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(skipped,  length);	  byte[]    headerBuf    =    buffer.readByteBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
260	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  hasHitEOF);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  hasHitEOF);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
261	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
262	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuffer(skipped);	  byte[]    headerBuf    =    buffer.getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
263	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuffer(headerBuf);	  byte[]    headerBuf    =    buffer.getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
264	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(numToSkip);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuffer(numToSkip);	  byte[]    headerBuf    =    buffer.getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
265	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordURL().toByteArray();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordURL().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordURL().toByteArray();	  byte[]    headerBuf    =    getRecordURL();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
266	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordURL(skipped);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordURL(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordURL(skipped);	  byte[]    headerBuf    =    getRecordURL();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
267	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  skipped);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  skipped);	  byte[]    headerBuf    =    buffer.getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
268	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  skipBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  skipBuf);	  byte[]    headerBuf    =    buffer.getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
269	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextByteBuffer();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextByteBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextByteBuffer();	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
270	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntry(skipped);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextTarEntry(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntry(skipped);	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
271	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextEntry();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextEntry();	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
272	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntry().getHeaderBuffer();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextTarEntry().getHeaderBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntry().getHeaderBuffer();	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
273	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInputStream(buffer,  readBuf);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
274	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInputStream(buffer,  skipped);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
275	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  skipBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInputStream(buffer,  skipBuf);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
276	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInputStream(buffer,  length);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
277	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(skipped);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInputStream(skipped);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
278	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer(skipped);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBuffer(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer(skipped);	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
279	[BUG]  [BUGGY]  byte[]  buf  =  buffer.toByteArray();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.toByteArray();	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
280	[BUG]  [BUGGY]  byte[]  buf  =  this.buffer.getBuffer();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  this.buffer.getBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  this.buffer.getBuffer();	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
281	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer(length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBuffer(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer(length);	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
282	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer(0);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBuffer(0);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer(0);	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
283	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  sink);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  sink);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  sink);	  byte[]    headerBuf    =    getRecord(skipped,    buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
284	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  column);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  column);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  column);	  byte[]    headerBuf    =    getRecord(skipped,    buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
285	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  scan);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  scan);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  scan);	  byte[]    headerBuf    =    getRecord(skipped,    buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
286	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  selected);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  selected);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  selected);	  byte[]    headerBuf    =    getRecord(skipped,    buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
287	[BUG]  [BUGGY]  ByteBuffer  headerBuf  =  getRecordSize();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  ByteBuffer  headerBuf  =  getRecordSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	ByteBuffer  headerBuf  =  getRecordSize();	  byte[]    headerBuf    =    getRecordSize()    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
288	[BUG]  [BUGGY]  byte[]  headerBuf  =  this.getRecordSize();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  this.getRecordSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  this.getRecordSize();	  byte[]    headerBuf    =    getRecordSize()    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
289	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().length;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize().length;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().length;	  byte[]    headerBuf    =    getRecordSize()    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
290	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  buf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  buf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  buf);	  byte[]    headerBuf    =    getHeaderBuf(readBuf);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
291	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  buffer);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  buffer);	  byte[]    headerBuf    =    getHeaderBuf(readBuf);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
292	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  readBuf);	  byte[]    headerBuf    =    getHeaderBuf(readBuf);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
293	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordFileBuffer();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordFileBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordFileBuffer();	  byte[]    headerBuf    =    buffer.getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
294	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordURL();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordURL();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordURL();	  byte[]    headerBuf    =    buffer.getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
295	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordByteBuffer();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordByteBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordByteBuffer();	  byte[]    headerBuf    =    buffer.getRecordInput();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
296	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream(buffer);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesInputStream(buffer);	  byte[]    headerBuf    =    getRecordBytesInputStream();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
297	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream().readBuf;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream().readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesInputStream().readBuf;	  byte[]    headerBuf    =    getRecordBytesInputStream();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
298	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream(readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesInputStream(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesInputStream(readBuf);	  byte[]    headerBuf    =    getRecordBytesInputStream();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
299	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(headerBuf,  skipped);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(headerBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(headerBuf,  skipped);	  byte[]    headerBuf    =    getHeaderBuf(skipped);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
300	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  headerBuf);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
301	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  readBuf);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
302	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(readBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(readBuf);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
303	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(length);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
304	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skip);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skip);	  byte[]    headerBuf    =    getRecordBytes(skipped);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
305	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  selected);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  selected);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  selected);	  byte[]    headerBuf    =    getRecordBytes(skipped);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
306	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer(readBuf);	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
307	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer().readBuf;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer().readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer().readBuf;	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
308	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer(buffer);	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
309	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  skipBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  skipBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
310	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  headerSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  0,  headerSize);	  byte[]    headerBuf    =    getRecord(buffer,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
311	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().readBuf();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize().readBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().readBuf();	  byte[]    headerBuf    =    getRecordSize().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
312	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray(length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize().toByteArray(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().toByteArray(length);	  byte[]    headerBuf    =    getRecordSize().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
313	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
314	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  readSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  readSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  readSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
315	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
316	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getBuffer(readBuf);	  byte[]    headerBuf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
317	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getBuffer(length);	  byte[]    headerBuf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
318	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf  =  buffer.readBuf;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf  =  buffer.readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf  =  buffer.readBuf;	  byte[]    headerBuf    =    getHeaderBuffer().readBuf;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
319	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(headerBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf(headerBuf);	  byte[]    headerBuf    =    getHeaderBuffer().readBuf;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
320	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer,  numToSkip);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer,  numToSkip);	  byte[]    headerBuf    =    getHeaderBuffer().readBuf;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
321	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  readBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
322	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  skipBuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  skipBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
323	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  0,  skipped);	  byte[]    headerBuf    =    getRecord(buffer,    skipped);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
324	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf.length);	  byte[]    headerBuf    =    getRecord(buffer,    skipped);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
325	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuf(readBuf);	  byte[]    headerBuf    =    buffer.getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
326	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(longName);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuf(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuf(longName);	  byte[]    headerBuf    =    buffer.getHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
327	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(readBuf,  numToSkip);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(readBuf,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(readBuf,  numToSkip);	  byte[]    buf    =    buffer.getBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
328	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(headerBuf,  numToSkip);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(headerBuf,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(headerBuf,  numToSkip);	  byte[]    buf    =    buffer.getBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
329	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray(readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().toByteArray(readBuf);	  byte[]    headerBuf    =    getHeaderBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
330	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray(length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().toByteArray(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().toByteArray(length);	  byte[]    headerBuf    =    getHeaderBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
331	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  headerOffset);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  headerOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
332	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(length);	  byte[]    headerBuf    =    buffer.getRecordBytes();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
333	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip,  readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(numToSkip,  readBuf);	  byte[]    headerBuf    =    buffer.readByteBuffer(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
334	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(16);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(16);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(16);	  byte[]    headerBuf    =    buffer.readByteBuffer(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
335	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  0,  numToSkip);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  0,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  0,  numToSkip);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
336	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip  +  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  numToSkip  +  1);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
337	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  headerOffset);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(buffer,  numToSkip,  headerOffset);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
338	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuffer(readBuf);	  byte[]    headerBuf    =    buffer.getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
339	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(longName);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getHeaderBuffer(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getHeaderBuffer(longName);	  byte[]    headerBuf    =    buffer.getHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
340	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  skipBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  0,  skipBuf);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
341	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBindingBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBindingBuffer(readBuf);	  byte[]    headerBuf    =    getRecordBindingBuffer();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
342	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBindingBuffer();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBindingBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBindingBuffer();	  byte[]    headerBuf    =    getRecordBindingBuffer();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
343	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  headerBuf);	  byte[]    headerBuf    =    buffer.getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
344	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  readBuf);	  byte[]    headerBuf    =    buffer.getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
345	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  buf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  buf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  buf);	  byte[]    headerBuf    =    buffer.getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
346	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  longName);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  longName);	  byte[]    headerBuf    =    buffer.getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
347	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(headerBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readBuf(headerBuf);	  byte[]    headerBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
348	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(buffer);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readBuf(buffer);	  byte[]    headerBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
349	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readerBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readerBuf);	  byte[]    headerBuf    =    getRecord(buffer,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
350	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  1,  len);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  1,  len);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  1,  len);	  byte[]    headerBuf    =    getRecord(buffer,    len);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
351	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  numToSkip);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  numToSkip);	  byte[]    headerBuf    =    buffer.getRecordBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
352	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(recordSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(recordSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(recordSize);	  byte[]    headerBuf    =    buffer.getRecordBytes(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
353	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  headerSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
354	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordFileBuffer(readBuf);	  byte[]    headerBuf    =    getRecordFileBuffer();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
355	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  buffer);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  buffer);	  byte[]    headerBuf    =    getRecord(readBuf);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
356	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  buf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  buf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  buf);	  byte[]    headerBuf    =    getRecord(readBuf);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
357	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  readBuf);	  byte[]    headerBuf    =    getRecord(readBuf);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
358	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  buffer.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  buffer.length);	  byte[]    headerBuf    =    getRecord(readBuf);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
359	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  headerBuf);	  byte[]    headerBuf    =    getRecord(readBuf);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
360	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length  +  readBuf.length;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().length  +  readBuf.length;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().length  +  readBuf.length;	  byte[]    headerBuf    =    getHeaderBuffer().length;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
361	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordUrl();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordUrl();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordUrl();	  byte[]    headerBuf    =    getRecordUrl();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
362	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordUrl().readBuf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordUrl().readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordUrl().readBuf;	  byte[]    headerBuf    =    getRecordUrl();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
363	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordURI();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordURI();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordURI();	  byte[]    headerBuf    =    getRecordUrl();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
364	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBaseBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBaseBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBaseBuffer(readBuf);	  byte[]    headerBuf    =    getBaseBuffer();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
365	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBaseBuffer().readBuf;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBaseBuffer().readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBaseBuffer().readBuf;	  byte[]    headerBuf    =    getBaseBuffer();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
366	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBaseBuffer(length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBaseBuffer(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBaseBuffer(length);	  byte[]    headerBuf    =    getBaseBuffer();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
367	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBounds();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBounds();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBounds();	  byte[]    headerBuf    =    getRecordBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
368	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordUpperBounds();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordUpperBounds();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordUpperBounds();	  byte[]    headerBuf    =    getRecordBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
369	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBounds(length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBounds(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBounds(length);	  byte[]    headerBuf    =    getRecordBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
370	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBounds(readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBounds(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBounds(readBuf);	  byte[]    headerBuf    =    getRecordBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
371	[BUG]  [BUGGY]  byte[]  headerBuf  =  readBuf.toByteArray();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  readBuf.toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  readBuf.toByteArray();	  byte[]    headerBuf    =    getBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
372	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray(readBuf);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer().toByteArray(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer().toByteArray(readBuf);	  byte[]    headerBuf    =    getBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
373	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf  +  1);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
374	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer  +  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer  +  1);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
375	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  +  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped  +  readBuf);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
376	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped  +  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipped  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipped  +  1);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
377	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(readBuf);	  byte[]    headerBuf    =    buffer.readByteBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
378	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(buffer,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(buffer,  readBuf);	  byte[]    headerBuf    =    buffer.readByteBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
379	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(0,  readBuf);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(0,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(0,  readBuf);	  byte[]    headerBuf    =    buffer.readByteBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
380	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderBuffer();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.getHeaderBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderBuffer();	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
381	[BUG]  [BUGGY]  short  headerBuf  =  buffer.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  short  headerBuf  =  buffer.getHeaderSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	short  headerBuf  =  buffer.getHeaderSize();	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
382	[BUG]  [BUGGY]  long  headerBuf  =  buffer.getHeaderBufferSize();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.getHeaderBufferSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.getHeaderBufferSize();	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
383	[BUG]  [BUGGY]  long  headerBuf  =  buffer.readBuf();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buffer.readBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buffer.readBuf();	  long    headerBuf    =    buffer.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
384	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer(buffer);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
385	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordEntry(buffer);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordEntry(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordEntry(buffer);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
386	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInternalBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordInternalBuffer(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInternalBuffer(buffer);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
387	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntry(headerBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextTarEntry(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntry(headerBuf);	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
388	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntry().buffer;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextTarEntry().buffer;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntry().buffer;	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
389	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getNextTarEntry();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getNextTarEntry();	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
390	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntry(buffer);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextTarEntry(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntry(buffer);	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
391	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntry().readBuf;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextTarEntry().readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntry().readBuf;	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
392	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBuffer(readBuf);	  byte[]    headerBuf    =    getRecordBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
393	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBuffer(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBuffer(buffer);	  byte[]    headerBuf    =    getRecordBuffer();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
394	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray(buffer);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().toByteArray(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf().toByteArray(buffer);	  byte[]    headerBuf    =    getHeaderBuf().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
395	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().readBuf();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf().readBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf().readBuf();	  byte[]    headerBuf    =    getHeaderBuf().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
396	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buffer,  headerSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buffer,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  buffer,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    buffer);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
397	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  buffer.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  buffer.length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    buffer);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
398	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(readBuf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(readBuf);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
399	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecord(buffer,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecord(buffer,  readBuf);	  byte[]    headerBuf    =    buffer.getRecord(skipped);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
400	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  longName);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  longName);	  byte[]    headerBuf    =    getRecord(longName);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
401	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(buffer);	  byte[]    headerBuf    =    getBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
402	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(buffer,  skipped);	  byte[]    headerBuf    =    getBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
403	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer,  readBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(buffer,  readBuf);	  byte[]    headerBuf    =    getBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
404	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(readBuf);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.toByteArray(readBuf);	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
405	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray()  +  1;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray()  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.toByteArray()  +  1;	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
406	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.toByteArray(length);	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
407	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(longName);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.toByteArray(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.toByteArray(longName);	  byte[]    headerBuf    =    buffer.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
408	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerBuf);	  byte[]    headerBuf    =    getHeaderBuf(headerBuf);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
409	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  longName);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(buffer,  longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(buffer,  longName);	  byte[]    headerBuf    =    getRecordBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
410	[BUG]  [BUGGY]  int  entryOffset  =  readBuf.length()  -  headerBuf.length();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  int  entryOffset  =  readBuf.length()  -  headerBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	int  entryOffset  =  readBuf.length()  -  headerBuf.length();	  int    entryOffset    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
411	[BUG]  [BUGGY]  long  headerBuf  =  readBuf.toUpperCase();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  readBuf.toUpperCase();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  readBuf.toUpperCase();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
412	[BUG]  [BUGGY]  short  headerBuf  =  readBuf.toString();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  short  headerBuf  =  readBuf.toString();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	short  headerBuf  =  readBuf.toString();	  long    headerBuf    =    readBuf.toString();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
413	[BUG]  [BUGGY]  byte[]  buf  =  buffer.readBuf();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.readBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.readBuf();	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
414	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer(readBuf);	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
415	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer(headerBuf);	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
416	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer(buffer,  headerBuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBuffer(buffer,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer(buffer,  headerBuf);	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
417	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  selected);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  selected);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  selected);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
418	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  scan);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  scan);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  scan);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
419	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  skipped);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(readBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(readBuf,  skipped);	  byte[]    headerBuf    =    getRecord(skipped,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
420	[BUG]  [BUGGY]  long  headerBuf  =  buf.length();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  long  headerBuf  =  buf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	long  headerBuf  =  buf.length();	  long    headerBuf    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
421	[BUG]  [BUGGY]  short  headerBuf  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  short  headerBuf  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	short  headerBuf  =  readBuf.length();	  long    headerBuf    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
422	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerEnd);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerEnd);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerEnd);	  byte[]    headerBuf    =    getRecord(buffer,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
423	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerLength);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerLength);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  readBuf,  headerLength);	  byte[]    headerBuf    =    getRecord(buffer,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
424	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(buffer);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf(buffer);	  byte[]    headerBuf    =    getRecordHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
425	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf(readBuf);	  byte[]    headerBuf    =    getRecordHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
426	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf().readBuf;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuf().readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuf().readBuf;	  byte[]    headerBuf    =    getRecordHeaderBuf();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
427	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  errorBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  errorBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  errorBuf);	  byte[]    headerBuf    =    getRecord(skipped,    buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
428	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  selectedSkipped);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  selectedSkipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  selectedSkipped);	  byte[]    headerBuf    =    getRecord(skipped,    buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
429	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  split);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  split);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  split);	  byte[]    headerBuf    =    getRecord(skipped,    buffer);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
430	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer(readBuf);	  byte[]    headerBuf    =    getRecordByteBuffer();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
431	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer(headerBuf);	  byte[]    headerBuf    =    getRecordByteBuffer();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
432	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer,  longName);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer,  longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(buffer,  longName);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
433	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(buffer.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(buffer.length);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
434	[BUG]  [BUGGY]  byte[]  headerBuf  =  readBuf;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  readBuf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  readBuf;	  byte[]    headerBuf    =    this.headerBuf;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
435	[BUG]  [BUGGY]  byte[]  headerBuf  =  buf;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buf;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buf;	  byte[]    headerBuf    =    this.headerBuf;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
436	[BUG]  [BUGGY]  byte[]  headerBuf  =  this.headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  this.headerBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  this.headerBuf,  readBuf);	  byte[]    headerBuf    =    this.headerBuf;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
437	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer().length  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordByteBuffer().length  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordByteBuffer().length  +  1;	  byte[]    headerBuf    =    getRecordSize()    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
438	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBounds().length  +  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBounds().length  +  1;  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBounds().length  +  1;	  byte[]    headerBuf    =    getRecordSize()    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
439	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordURL(buffer);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordURL(buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordURL(buffer);	  byte[]    headerBuf    =    getRecordURL();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
440	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  skipped);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  0,  skipped);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipped);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
441	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  headerOffset);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
442	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(readBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(readBuf,  headerSize);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
443	[BUG]  [BUGGY]  byte[]  headerBuf  =  readBuf(headerBuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  readBuf(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  readBuf(headerBuf);	  byte[]    headerBuf    =    getBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
444	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerOffset);	  byte[]    headerBuf    =    getHeaderBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
445	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerSize);	  byte[]    headerBuf    =    getHeaderBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
446	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer(readBuf,  headerBuf);	  byte[]    headerBuf    =    getHeaderBuffer(readBuf);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
447	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(buffer,  0,  headerBuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readBuf(buffer,  0,  headerBuf.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readBuf(buffer,  0,  headerBuf.length);	  byte[]    headerBuf    =    buffer.readBuf();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
448	[BUG]  [BUGGY]  byte[]  headerBuf  =  getNextTarEntryBytes();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getNextTarEntryBytes();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getNextTarEntryBytes();	  byte[]    headerBuf    =    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
449	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  0);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  0);	  byte[]    headerBuf    =    getRecord(buffer,    skipped);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
450	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBounds(skipped);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBounds(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBounds(skipped);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
451	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeader(skipped);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeader(skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeader(skipped);	  byte[]    headerBuf    =    getRecordSize(skipped);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
452	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBufferInsertionBuffer();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBufferInsertionBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBufferInsertionBuffer();	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
453	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBuffer(buffer,  0,  buf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBuffer(buffer,  0,  buf.length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBuffer(buffer,  0,  buf.length);	  byte[]    buf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
454	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  readBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  readBuf);	  byte[]    headerBuf    =    getRecord(buffer,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
455	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  hasHitEOF);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  hasHitEOF);	  byte[]    headerBuf    =    getRecord(buffer,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
456	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  headerBuf,  length);	  byte[]    headerBuf    =    getRecord(buffer,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
457	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipBuf,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
458	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  start,  skipBuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  start,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  start,  skipBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
459	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerEnd);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerEnd);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readBuf,  headerEnd);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readBuf);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
460	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  entryOffset);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  entryOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  entryOffset);	  byte[]    headerBuf    =    getRecord(buffer,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
461	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(longName,  headerBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(longName,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(longName,  headerBuf);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
462	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(longName,  false);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(longName,  false);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(longName,  false);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
463	[BUG]  [BUGGY]  byte[]  buf  =  buffer.getBytes(longName  +  1);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  buf  =  buffer.getBytes(longName  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  buf  =  buffer.getBytes(longName  +  1);	  byte[]    buf    =    buffer.getBytes(longName);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
464	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  headerSize);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
465	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  skipBuf,  headerOffset);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
466	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  offset,  skipBuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  offset,  skipBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  offset,  skipBuf);	  byte[]    headerBuf    =    getRecord(buffer,    skipBuf);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
467	[BUG]  [BUGGY]  byte[]  headerBuf  =  readBuf().toByteArray();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  readBuf().toByteArray();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  readBuf().toByteArray();	  byte[]    headerBuf    =    getBuffer().toByteArray();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
468	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerOffset);	  byte[]    headerBuf    =    getHeaderBuf(readBuf);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
469	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuf(readBuf,  headerSize);	  byte[]    headerBuf    =    getHeaderBuf(readBuf);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
470	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytesReadBuf();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytesReadBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytesReadBuf();	  byte[]    headerBuf    =    getRecordBytesInputStream();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
471	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  readOffset);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  readOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  readOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
472	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
473	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  readSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  readSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  readSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
474	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  headerOffset);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  headerOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
475	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  skipped);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerBuf,  skipped);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerBuf);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
476	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
477	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  0);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  0);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerSize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
478	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBounds();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBounds();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBounds();	  byte[]    headerBuf    =    getRecordBounds();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
479	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  0);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  0);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf,  0);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
480	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  0,  numToSkip);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  0,  numToSkip);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf,  0,  numToSkip);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
481	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip,  readBuf);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip,  readBuf);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
482	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip  +  1);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.read(headerBuf,  numToSkip  +  1);	  byte[]    headerBuf    =    buffer.read(headerBuf,    numToSkip);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
483	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped  +  length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.readByteBuffer(skipped  +  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.readByteBuffer(skipped  +  length);	  byte[]    headerBuf    =    buffer.readByteBuffer(skipped);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
484	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.reset();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.reset();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.reset();	  byte[]    headerBuf    =    buffer.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
485	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  skipped,  length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    skipped);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
486	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buf,  headerSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  buf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  buf,  headerSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    buf);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
487	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer(headerBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordFileBuffer(headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordFileBuffer(headerBuf);	  byte[]    headerBuf    =    getRecordFileBuffer();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
488	[BUG]  [BUGGY]  bytes[]  headerBuf  =  getRecordSize();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  bytes[]  headerBuf  =  getRecordSize();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	bytes[]  headerBuf  =  getRecordSize();	  byte[]    headerBuf    =    getRecordSize()    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
489	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordSize().cloneTarBuffer();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordSize().cloneTarBuffer();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordSize().cloneTarBuffer();	  byte[]    headerBuf    =    getRecordSize()    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
490	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  /  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  /  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped  /  1);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
491	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(skipped  -  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(skipped  -  1);	  byte[]    headerBuf    =    getRecord(skipped    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
492	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  length);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
493	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  skipped);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  skipped);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  skipped);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
494	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset  +  1);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
495	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  readSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  readSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  readSize);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
496	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  readBuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  readBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  headerOffset,  readBuf);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    headerOffset);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
497	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length  +  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  length  +  1);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  length  +  1);	  byte[]    headerBuf    =    getRecord(buffer,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
498	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  offset,  length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecord(buffer,  offset,  length);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecord(buffer,  offset,  length);	  byte[]    headerBuf    =    getRecord(buffer,    length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
499	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer().readBuf();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordHeaderBuffer().readBuf();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordHeaderBuffer().readBuf();	  byte[]    headerBuf    =    getRecordHeaderBuffer();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
500	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  headerBuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordInputStream(buffer,  headerBuf);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordInputStream(buffer,  headerBuf);	  byte[]    headerBuf    =    getRecordInputStream(buffer);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
501	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  headerSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  headerSize);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getRecordBytes(readBuf,  headerSize);	  byte[]    headerBuf    =    buffer.getRecordBytes(readBuf);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
502	[BUG]  [BUGGY]  byte[]  headerBuf  =  getBuffer(longName,  buffer);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getBuffer(longName,  buffer);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getBuffer(longName,  buffer);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
503	[BUG]  [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(longName);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  buffer.getBuffer(longName);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  buffer.getBuffer(longName);	  byte[]    headerBuf    =    getBuffer(longName);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
504	[BUG]  [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer,  0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer,  0);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getHeaderBuffer().readBuf(buffer,  0);	  byte[]    headerBuf    =    getHeaderBuffer().readBuf;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
505	[BUG]  [BUGGY]  short  numRead  =  readBuf.length();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  short  numRead  =  readBuf.length();  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	short  numRead  =  readBuf.length();	  int    numRead    =    readBuf.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
506	[BUG]  [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  headerOffset);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      long  skipped  =  skip(numToSkip);  if  (skipped  <=  0)  {  throw  new  RuntimeException(     "failed  to  skip  current  tar  entry     ");  }  numToSkip  -=  skipped;  }  readBuf  =  null;  }      [BUGGY]  byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  headerOffset);  [BUGGY]        if  (hasHitEOF)  {  currEntry  =  null;  return  null;  }  currEntry  =  new  TarArchiveEntry(headerBuf);  entryOffset  =  0;  entrySize  =  currEntry.getSize();  [CLASS]  TarArchiveInputStream  1  [METHOD]  getNextTarEntry  [RETURN_TYPE]  TarArchiveEntry  [VARIABLES]  byte[]  buf  headerBuf  readBuf  skipBuf  StringBuffer  longName  boolean  hasHitEOF  TarBuffer  buffer  int  BUFFER_SIZE  SMALL_BUFFER_SIZE  blockSize  length  numRead  realSkip  recordSize  long  entryOffset  entrySize  numToSkip  skip  skipped  TarArchiveEntry  currEntry  	projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.3779644730092272	191	191	1	replace	byte[]  headerBuf  =  getRecordBytes(readBuf,  readSize,  headerOffset);	  byte[]    headerBuf    =    getRecordBytes(readBuf,    readSize);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
