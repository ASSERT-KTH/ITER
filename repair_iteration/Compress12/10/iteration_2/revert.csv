projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry!=null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset!=entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset!=null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset!=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry==null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize!=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>=hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(longName);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getValue();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize!=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=LAST_ENTRY_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(longName);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>>0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry==null||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry==null||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry==null||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize!=null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF-8");
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize>=hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>=hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<=hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset==hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getCurrentTarEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextFileEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)getNextEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>=entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<=entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>MAX_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.BUFFER_SIZE||entryOffset<=EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.BUFFER_SIZE||entryOffset>EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==null||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==0||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry!=null||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==0||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==null||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==entrySize||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177shortentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177LongentryOffset=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset()-2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextArchiveEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=(TarBuffer)getNextEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextByteBuffer();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry==null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getCurrentTarEntry();if(currEntry!=null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177finalTarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextHitEOF();if(currEntry!=null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=this.getNextTarEntry();if(currEntry!=null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>entryOffset.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getHitEOF()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getHitEOF()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getHitEOF().length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getHitEOF()/2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntrySize();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==null||entryOffset<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==null||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==entrySize||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==null||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==0||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||currEntry==null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize<entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(lengthName);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(256);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(64);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(32);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(length);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(100);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntryOffset.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=EntryOffset.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=EntryOffset.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset&&hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=entrySize||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(longName,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(longName,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(longName,entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(getHitEOF());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(longName,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||entryOffset==BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||entryOffset>=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||entryOffset>BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||entryOffset>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset.length-1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>entrySize.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset.length||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset.length+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177finalTarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextHitEOF();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=this.getNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>entrySize+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset+1||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset+1&&hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset+2){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>0||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset&&entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=MAX_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset||entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=HIT_EOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<LAST_ENTRY_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=LAST_ENTRY_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=LAST_ENTRY_SIZE||entryOffset>BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<LAST_ENTRY_SIZE||entryOffset<=LAST_ENTRY_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<LAST_ENTRY_SIZE||entryOffset>BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=EntrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MIN_VALUE||entrySize<=EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MAX_VALUE||entryOffset>EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MAX_VALUE||entryOffset<EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MAX_VALUE||entryOffset<=EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<0||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<0||entrySize>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>entrySize,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset,hasHitEOF||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryOffset()-2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryOffset()/2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getNextEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getTarEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getHitEOF()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getHitEOF()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getEntryOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getHitEOF()/BUFFER_SIZE;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getHitEOF().length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=getHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getKey();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.clone();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getNext();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getValue()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getValue()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getValue()/2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntryOffset.MIN_VALUE||entrySize>EntryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntryOffset.MIN_VALUE||entrySize>EntryOffset.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntryOffset.MIN_VALUE||entryOffset>EntryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntryOffset.MIN_VALUE||entryOffset>EntryOffset.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=EntryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=EntryOffset.MIN_VALUE||entrySize>EntryOffset.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getHitEOF()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getHitEOF()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177LongentryOffset=getHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getHitEOF().length;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getHitEOF()/2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=this.buffer.getBytes("UTF-8");
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes(".UTF-8");
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes(",UTF-8");
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=getBuffer().getBytes("UTF-8");
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF-8",longName);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset&&entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entrySize>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entrySize<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=entrySize||entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entrySize<=MAX_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(lengthName);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(longName,false);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(getHitEOF());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(longName,true);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(longName,null);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(longName,0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<BUFFER_SIZE||entryOffset<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=SMALL_BUFFER_SIZE||entryOffset<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=SMALL_BUFFER_SIZE||entrySize<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset+skip){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset&&hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>entrySize||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset-1||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=entrySize+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset+1||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset+1||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<=entryOffset+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177finalTarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextHitEOF();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextFileEntry();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextEntry();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==null||entrySize<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==entrySize||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==0||entrySize<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==null||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==0||currEntry==null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset()-1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset()+1;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset()-2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MIN_VALUE||entryOffset>EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=EntrySize.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MIN_VALUE||entryOffset>EntrySize.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MIN_VALUE||entrySize>EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=EntrySize.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MIN_VALUE||entryOffset<=EntrySize.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<EntrySize.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.MIN_VALUE||entrySize>EntryOffset.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.MIN_VALUE||entryOffset>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=EntryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>>null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>EntryOffset.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.STATE_OFFSET){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(longName,buffer);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(HitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.entry.getValue();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.rawEntry.getValue();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.chars.getValue();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset>=hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==0||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=null||entryOffset<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=null||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>EntrySize.BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(HitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=LAST_ENTRY_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=LAST_ENTRY_SIZE||entryOffset>LAST_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)getNextTarEntry();if(currEntry!=null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(null);if(currEntry!=null){thrownewRuntimeException("");}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset+1){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=BUFFER_SIZE||entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset+|entrySize<=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entrySize>=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=entrySize||entrySize<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(hasHitEOF){TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)getNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(null);if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(0);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(512);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset,isEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry().getValue();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)getNextTarEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=(TarBuffer)getNextTarEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset()+2;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getNextTarEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(hasHitEOF){TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)getNextTarEntry();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=HITE_EOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=DEFAULT_TAR_ENTRY_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MAX_VALUE||entryOffset>entrySize.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MAX_VALUE||entryOffset>EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MAX_VALUE||entryOffset>=EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<BUFFER_SIZE||entryOffset>SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset+|hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize<=BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize>=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<0||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=null||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=0||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==0||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry==null||currEntry.hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(currEntry==null||isEOF()){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*6*entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*HITEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF-8").toByteArray();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF-8").getBytes();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF-8").reset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MIN_VALUE||entryOffset>EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MIN_VALUE||entryOffset>entrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MIN_VALUE||entryOffset>entrySize.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getNextTarEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entrySize<=HIT_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>entryLimit){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(longName,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset>entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<EntrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MAX_VALUE||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<0||entrySize>MAX_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<0||entrySize>SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset+entryOffset||hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=null){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.MIN_VALUE||entryOffset>EntrySize.MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>EntryOffset.MIN_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.MIN_VALUE||entryOffset>MAX_VALUE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryOffset()-4;
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getHitEOF(entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset!=entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.STANDARD_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){thrownewRuntimeException(""));}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){thrownewRuntimeException("".);}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=newTarBuffer(length());
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getData();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)this.currEntry.getObject();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*HITEEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=LAST_ENTRY_SIZE||entryOffset>MAX_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=LAST_ENTRY_SIZE||entryOffset>MAX_ENTRY_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<BUFFER_SIZE||entryOffset<=SMALL_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>EntrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<entryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset<length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>EntryOffset){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryLength>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryStart>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(entryOffset);if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=createNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||entrySize<=0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntryOffset.STANDARD_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=getNextTarEntry(entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarBufferbuffer=(TarBuffer)getNextHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntrySize();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry==null||currEntry.getName()!=null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextStandardEntry();if(currEntry==null){returncurrEntry;}
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||entryOffset<0){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF-8",hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF-16");
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177byte[]buf=buffer.getBytes("UTF8");
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>EntrySize.length){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entry.length+entryOffset>entrySize){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=0||entryOffset>MAX_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MIN_VALUE||entryOffset>MAX_BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=EntrySize.MIN_VALUE||entryOffset>BUFFER_SIZE){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=(TarArchiveEntry)getNextHitEOF();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextHitEOF(entryOffset);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextRecordEntry();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize+entryOffset>HITEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntrySize();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getTarOffset();
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177TarArchiveEntrycurrEntry=getNextTarEntry(longName,hasHitEOF);
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset+1,hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset+hasHitEOF){
projects/Compress12/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset+entryOffset||hasHitEOF){
