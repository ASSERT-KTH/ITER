bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	21	None	replace
2	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  month);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
3	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  missing  return  statement	21	None	replace
4	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisDom);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  missing  return  statement	21	None	replace
5	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  missing  return  statement	21	None	replace
6	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYearMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYearMonth(instant,  month);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
7	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  not  a  statement  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  not  a  statement	31	None	add
8	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  possible  loss  of  precision  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	31	None	add
9	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  not  a  statement  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  not  a  statement	31	None	add
10	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	31	None	add
11	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	add
12	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  thisMonth  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  possible  loss  of  precision  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  thisMonth  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  thisMonth  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	31	None	add
13	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	add
14	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	add
15	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	add
16	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom);  [CE]  not  a  statement  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom);	  timeout    	non-compiled	[CE]  not  a  statement	31	None	add
17	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
18	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  missing  return  statement  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  missing  return  statement	29	None	replace
19	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant);  [CE]  missing  return  statement  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDayOfMonth(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  missing  return  statement	29	None	replace
20	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
21	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	29	None	replace
22	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDom);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	17	None	replace
23	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  missing  return  statement  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  missing  return  statement	17	None	replace
24	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  missing  return  statement  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  missing  return  statement	17	None	replace
25	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  month);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
26	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	17	None	replace
27	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  missing  return  statement  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  missing  return  statement	17	None	replace
28	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisDom);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
29	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisYear);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
30	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month  +  1);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
31	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDay);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisDay);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	26	None	replace
32	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisHeapMonth);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	26	None	replace
33	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisHeight);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisHeight);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	26	None	replace
34	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month)-  1;	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
35	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month)+  1;	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
36	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom);	      int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
37	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;	      int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
38	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;	      int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
39	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);	      int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
40	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(month,  instant);	      int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
41	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(dayOfMonth);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
42	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
43	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(dayOfMonth,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
44	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(year,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
45	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisYear);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
46	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  thisMax)+  iChronology.getDaysInYearMonth(instant);  [CE]  cannot  find  symbol  thisMax  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  thisMax)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  thisMax)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMax	30	None	replace
47	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
48	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisLeapMonth);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisLeapMonth);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	30	None	replace
49	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)+  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
50	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisHeight);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisHeight);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	30	None	replace
51	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisMinuend);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisMinuend);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	30	None	replace
52	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(month,  thisYear,  thisDom)+  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(month,  thisYear,  thisDom)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(month,  thisYear,  thisDom)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
53	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  not  a  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  timeout    	non-compiled	[CE]  not  a  statement	33	None	add
54	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  possible  loss  of  precision  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  timeout    	non-compiled	[CE]  possible  loss  of  precision	33	None	add
55	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  not  a  statement  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  timeout    	non-compiled	[CE]  not  a  statement	33	None	add
56	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  timeout    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	add
57	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	add
58	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	add
59	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	add
60	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	add
61	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
62	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
63	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMax);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMax);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
64	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
65	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisLeapMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisLeapMonth);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
66	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinuend);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinuend);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinuend);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
67	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisDom);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
68	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
69	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [timeout]  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	1	None	replace
70	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	1	None	replace
71	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
72	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)/  iChronology.getMillisOfDay(instant);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	1	None	replace
73	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisDom,  month)/  iChronology.getMillisOfDay(instant);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisDom,  month)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  thisDom,  month)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	1	None	replace
74	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisYear);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
75	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  dayOfMonth.getMillisOfDay(instant);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  dayOfMonth.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  dayOfMonth.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	1	None	replace
76	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
77	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
78	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
79	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
80	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth;	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
81	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.daysInYearMonth(instant);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.daysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.daysInYearMonth(instant);	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
82	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
83	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
84	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
85	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
86	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
87	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
88	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  dayOfMonth.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  dayOfMonth.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  dayOfMonth.getMillisOfDay(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
89	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.millisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.millisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.millisOfDay(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
90	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
91	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMax)+  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  thisMax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMax)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMax)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMax	3	None	replace
92	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(instant,  month,  thisDom)+  iChronology.getMillisOfDay(thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(instant,  month,  thisDom)+  iChronology.getMillisOfDay(thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(instant,  month,  thisDom)+  iChronology.getMillisOfDay(thisYear);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
93	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisLeapMonth);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisLeapMonth);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
94	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom),  iMax,  iChronology.getMillisOfDay(instant);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom),  iMax,  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom),  iMax,  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  ';'  expected	3	None	replace
95	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
96	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisMax);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisMax);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
97	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisMinuend);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisMinuend);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisMinuend);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
98	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
99	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	39	None	replace
100	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	39	None	replace
101	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDayOfMonth(instant);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	39	None	replace
102	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	39	None	replace
103	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
104	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(instant,  month,  thisDom)-  iChronology.getMillisOfDay(thisYear);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(instant,  month,  thisDom)-  iChronology.getMillisOfDay(thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(instant,  month,  thisDom)-  iChronology.getMillisOfDay(thisYear);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	39	None	replace
105	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)-  iChronology.getMillisOfDay(instant);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)-  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)-  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	39	None	replace
106	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  instant);	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
107	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  month);	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
108	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
109	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
110	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  month);	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
111	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	22	None	replace
112	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  missing  return  statement  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  missing  return  statement	22	None	replace
113	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  thisDom);  [CE]  missing  return  statement  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(month,  thisDom);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  missing  return  statement	22	None	replace
114	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(yearToUse,  month);  [CE]  cannot  find  symbol  yearToUse  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(yearToUse,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(yearToUse,  month);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	22	None	replace
115	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear,  maxDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear,  maxDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear,  maxDom);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	22	None	replace
116	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	22	None	replace
117	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	22	None	replace
118	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  month);  [CE]  missing  return  statement  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(month,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(month,  month);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  missing  return  statement	22	None	replace
119	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(instant,  month,  thisDom)+  iChronology.getMillisOfDay(thisYear);  [timeout]  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(instant,  month,  thisDom)+  iChronology.getMillisOfDay(thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(instant,  month,  thisDom)+  iChronology.getMillisOfDay(thisYear);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	2	None	replace
120	[BUG]  [BUGGY]  return  iChronology.getMonthOfYear(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthOfYear(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthOfYear(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	2	None	replace
121	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	2	None	replace
122	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  thisYear,  month)+  iChronology.getMillisOfDay(instant);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  thisYear,  month)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  thisYear,  month)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	2	None	replace
123	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMinutesInYearMonth(instant);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMinutesInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMinutesInYearMonth(instant);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
124	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iMax;  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iMax;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[timeout]	10	None	replace
125	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iLeapMonth;  [timeout]  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iLeapMonth;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iLeapMonth;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[timeout]	10	None	replace
126	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
127	[BUG]  [BUGGY]  timeout  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  thisDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  thisDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	compilable	timeout	10	1	replace
128	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  thisDom;  timeout  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  thisDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  thisDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	compilable	timeout	10	1	replace
129	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
130	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iMax;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iMax;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	10	None	replace
131	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iMax;  [timeout]  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iMax;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[timeout]	10	None	replace
132	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisDom);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
133	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisYear);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
134	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
135	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1;	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
136	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1;	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
137	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month),  thisDom);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month),  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month),  thisDom);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  ';'  expected	14	None	replace
138	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(thisYear,  month);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
139	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisHeight);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month,  thisHeight);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	14	None	replace
140	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  thisYear  =  iChronology.getYear(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	        thisYear    =    iChronology.getYear(instant);    thisYear  =  iChronology.getYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	28	8	add
141	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  thisYear  =  iChronology.getYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  thisYear  =  iChronology.getYear(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    thisYear  =  iChronology.getYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	28	8	add
142	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	28	None	add
143	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear!=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  incomparable  types:  int  and  <null>  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear!=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear!=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	28	None	add
144	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(month  ==  1)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	        thisYear    =    iChronology.getYear(instant);    if(month  ==  1)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	28	8	add
145	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(month  ==  1)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(month  ==  1)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(month  ==  1)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	28	8	add
146	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(iChronology.getDaysInYearMonth(instant)  ==  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(iChronology.getDaysInYearMonth(instant)  ==  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(iChronology.getDaysInYearMonth(instant)  ==  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	28	None	add
147	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(iChronology.getDaysInYearMonth(instant)!=  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(iChronology.getDaysInYearMonth(instant)!=  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(iChronology.getDaysInYearMonth(instant)!=  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	28	None	add
148	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  >=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  >=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  >=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	28	None	add
149	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	28	None	add
150	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear!=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear!=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear!=  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	28	None	add
151	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(iChronology.getDaysInYearMonth(instant)  ==  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(iChronology.getDaysInYearMonth(instant)  ==  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(iChronology.getDaysInYearMonth(instant)  ==  thisYear)  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	28	None	add
152	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDom);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
153	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
154	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisDom);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
155	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMax);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMax);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
156	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(year,  thisYear);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
157	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMinuend);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMinuend);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMinuend);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDayOfMonth(instant,  month);	  	compilable	  [FE]  AssertionFailedError  	20	5	add
159	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDayOfMonth(instant,  month);	  	compilable	  [FE]  AssertionFailedError  	20	5	add
160	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	20	None	add
161	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]        AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    int  thisYear  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	20	None	add
162	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]          AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDayOfMonth(instant,  year);	  	non-compiled	[CE]  cannot  find  symbol  year	20	None	add
163	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMillis(instant,  month);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMillis(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDayOfMillis(instant,  month);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
164	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  ThisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  ThisYear  [FE]              AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  ThisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    ThisYear  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  cannot  find  symbol  ThisYear	20	None	add
165	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayofMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayofMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDayofMonth(instant,  month);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
166	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMONTth(instant,  month);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMONTth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDayOfMONTth(instant,  month);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
167	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(month,  thisDom);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(month,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(month,  thisDom);	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
168	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(month,  thisDom);  [CE]  missing  return  statement  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(month,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(month,  thisDom);	      	non-compiled	[CE]  missing  return  statement	11	None	replace
169	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
170	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
171	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisYear);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
172	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisDom);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
173	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	      int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
174	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisDom);	      int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
175	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month),  thisDom);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month),  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month),  thisDom);	      int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  ';'  expected	13	None	replace
176	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);	      int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
177	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
178	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
179	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
180	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
181	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
182	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
183	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisDom);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
184	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisYear);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
185	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
186	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisDay);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisDay);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	37	None	replace
187	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisHeapMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisHeapMonth);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	37	None	replace
188	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month)+  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month)+  1;	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
189	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisHeight);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month,  thisHeight);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	37	None	replace
190	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
191	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
192	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
193	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
194	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
195	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
196	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.millisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.millisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.millisOfDay(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
197	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iMax;	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
198	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisYear);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
199	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth(instant);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
200	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
201	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.dayOfMonth();	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
202	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.setMillisOfDay(instant);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
203	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthOfMonth(instant);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
204	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
205	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getDayOfMonth(instant);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[timeout]	34	None	replace
206	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[timeout]	34	None	replace
207	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	34	None	replace
208	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[timeout]	34	None	replace
209	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[timeout]	34	None	replace
210	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)+  iChronology.getDayOfMonth(instant);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  thisYear,  month)+  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[timeout]	34	None	replace
211	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month)+  iChronology.getMillisOfDay(instant);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    thisYear,    month)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	7	None	replace
212	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    thisYear,    month)+    iChronology.getMillisOfDay(instant);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	7	1	replace
213	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisDom);  [FE]  ExceptionInInitializerError  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    thisYear,    month)+    iChronology.getMillisOfDay(instant);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	7	1	replace
214	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month)+  thisDom;  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month)+  thisDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month)+  thisDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    thisYear,    month)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	7	None	replace
215	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisYear);  [timeout]  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisYear);	  return    iChronology.getYearMonthDayMillis(thisYear,    thisYear,    month)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[timeout]	7	None	replace
216	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(year);	      int    month    =    iChronology.getMonthOfYear(month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	15	None	replace
217	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  maxDom;  [timeout]  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[timeout]	32	None	replace
218	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[timeout]	32	None	replace
219	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
220	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
221	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  maxDom;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	32	None	replace
222	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  maxDom;  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[timeout]	32	None	replace
223	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  maxDom;  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[timeout]	32	None	replace
224	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  not  a  statement  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  not  a  statement	9	None	add
225	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  not  a  statement  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    iChronology.setYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  not  a  statement	9	None	add
226	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  possible  loss  of  precision  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	9	None	add
227	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  possible  loss  of  precision  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	9	None	add
228	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  cannot  assign  a  value  to  final  variable  iMax  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iMax	9	None	add
229	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	9	None	add
230	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  iMax  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	add
231	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iChronology.setDaysInYearMonth(thisYear,  month,  thisDom)+  iMax;  [CE]  not  a  statement  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  iChronology.setDaysInYearMonth(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    iChronology.setDaysInYearMonth(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  not  a  statement	9	None	add
232	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [CE]  possible  loss  of  precision  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);	  timeout    	non-compiled	[CE]  possible  loss  of  precision	9	None	add
233	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMin;  [CE]  cannot  find  symbol  iMin  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMin;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMin;	  timeout    	non-compiled	[CE]  cannot  find  symbol  iMin	9	None	add
234	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(month,  thisDom);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(month,  thisDom);	      thisYear    =    iChronology.getYear(month);    [timeout]    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	19	None	replace
235	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);	      int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	27	None	replace
236	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom);	      int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	27	None	replace
237	[BUG]  [BUGGY]  timeout  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	compilable	timeout	8	1	replace
238	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  1;  timeout  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	compilable	timeout	8	1	replace
239	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  1;  [CE]  possible  loss  of  precision  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
240	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
241	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthDayMillis(thisYear,  month,  thisDom)+  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
242	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  1;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
243	[BUG]  [BUGGY]  timeout  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  2;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  2;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	compilable	timeout	8	1	replace
244	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  2;  timeout  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  2;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  2;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	compilable	timeout	8	1	replace
245	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  1;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	8	None	replace
246	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  1;  [timeout]  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[timeout]	8	None	replace
247	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisDom);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisDom);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	38	None	replace
248	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(month,  instant);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(month,  instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(month,  instant);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	38	None	replace
249	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisYear);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	38	None	replace
250	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisDay);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisDay);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	38	None	replace
251	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisMillis);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisMillis);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	38	None	replace
252	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisMonth);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	38	None	replace
253	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month  +  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month  +  1);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	38	None	replace
254	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisHeapMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisHeapMonth);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	38	None	replace
255	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisMinuend);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisMinuend);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	38	None	replace
256	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  1;  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[timeout]	8	None	replace
257	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  3;  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  3;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  3;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[timeout]	8	None	replace
258	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  1;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  1;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    1;    [timeout]    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
259	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
260	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  year);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  year);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  year	14	None	replace
261	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(month  >  maxDom)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	        thisYear    =    iChronology.getYear(instant);    if(month  >  maxDom)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	28	8	add
262	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(month  >  maxDom)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(month  >  maxDom)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(month  >  maxDom)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	28	8	add
263	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear(  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear(  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear(	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
264	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getMonthOfYearMonth(month,  month);  thisYear  =  iChronology.getDaysInYearMonth(  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getMonthOfYearMonth(month,  month);  thisYear  =  iChronology.getDaysInYearMonth(  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getMonthOfYearMonth(month,  month);  thisYear  =  iChronology.getDaysInYearMonth(	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
265	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(yearToUse,  month);  thisYear  =  iChronology.getYear(  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(yearToUse,  month);  thisYear  =  iChronology.getYear(  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(yearToUse,  month);  thisYear  =  iChronology.getYear(	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
266	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear	  	non-compiled	[CE]  ';'  expected	28	None	add
267	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  incomparable  types:  int  and  <null>  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	28	None	add
268	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getMonthOfYearMonth(month,  month);  thisYear  =  iChronology.getDaysInYearMon  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getMonthOfYearMonth(month,  month);  thisYear  =  iChronology.getDaysInYearMon  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getMonthOfYearMonth(month,  month);  thisYear  =  iChronology.getDaysInYearMon	  	non-compiled	[CE]  ';'  expected	28	None	add
269	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear(instant);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  ==  null)  {  thisYear  =  iChronology.getYear(instant);  }  else  {  int  month  =  iChronology.getDaysInYearMonth(month,  month);  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	28	None	add
270	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  minuendMonth;  [CE]  cannot  find  symbol  minuendMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  minuendMonth;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  minuendMonth;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	10	None	replace
271	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  max;  [CE]  cannot  find  symbol  max  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  max;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  max;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[CE]  cannot  find  symbol  max	10	None	replace
272	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iMax;  [timeout]  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iMax;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[timeout]	10	None	replace
273	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  datePart;  [timeout]  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  datePart;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  datePart;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	non-compiled	[timeout]	10	None	replace
274	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
275	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
276	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	add
277	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  long  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  unreachable  statement  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  long  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    long  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  unreachable  statement	9	None	add
278	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  Integer  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  Integer  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    Integer  iMax  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  incompatible  types	9	None	add
279	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getYearMonth(instant,  month);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
280	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  maxDom;	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
281	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
282	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  months,  thisDom)+  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  months,  thisDom)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  months,  thisDom)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  months	35	None	replace
283	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant  +  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant  +  1);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant  +  1);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
284	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisDom);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month  +  1,  thisDom);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	38	None	replace
285	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisDate);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisDate);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDate	38	None	replace
286	[BUG]  [BUGGY]  return  iChronology.getMonthOfYear(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthOfYear(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisYear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthOfYear(instant,  thisYear,  month)+  iChronology.getMillisOfDay(thisYear);	  return    iChronology.getYearMonthDayMillis(thisYear,    thisYear,    month)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	7	None	replace
287	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
288	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
289	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  maxDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  maxDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  maxDom);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
290	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisHeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisHeapMonth);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisHeapMonth);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
291	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisJear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisJear);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisJear);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
292	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
293	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  maxDom;	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
294	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthsInYearMonth(instant);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthsInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.monthsInYearMonth(instant);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
295	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  year);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  year	17	None	replace
296	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  missing  return  statement  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  missing  return  statement	17	None	replace
297	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month  +  1);	      int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	27	None	replace
298	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  maxDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  maxDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  maxDom);	      int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	27	None	replace
299	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
300	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  year);	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
301	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMillis(instant);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMillis(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMillis(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	29	None	replace
302	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
303	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(thisYear,  month);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(thisYear,  month);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	29	None	replace
304	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	2	None	replace
305	[BUG]  [BUGGY]  return  iChronology.getYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
306	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMinuteOfYear(instant);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMinuteOfYear(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMinuteOfYear(instant);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
307	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthsInYearMonth(instant,  thisYear);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
308	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear);	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
309	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(year,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(year,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(year,  thisYear);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
310	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	      int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
311	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);	      int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
312	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  year);	      int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
313	[BUG]  [BUGGY]  iChronology.setDaysInYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  iChronology.setDaysInYearMonth(thisYear,  month);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	iChronology.setDaysInYearMonth(thisYear,  month);	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
314	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(minute,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(minute,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(minute,  thisYear);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
315	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisXear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisXear  [FE]    AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisXear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisXear  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  cannot  find  symbol  thisXear	20	None	add
316	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMonth(instant,  month;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getDayOfMonth(instant,  month;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getDayOfMonth(instant,  month;	  	non-compiled	[CE]  ')'  expected	20	None	add
317	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(thisYear,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(thisYear,  month);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
318	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month)-  1;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month)-  1;	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
319	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month  -  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month  -  1);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
320	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month),  thisDom);  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month),  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month),  thisDom);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	37	None	replace
321	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMinutesInYearMonth(instant);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMinutesInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMinutesInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
322	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(month);	      thisYear    =    iChronology.getYear(month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
323	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  missing  return  statement	21	None	replace
324	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  month);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
325	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  maxDom);	      int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
326	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
327	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  dayOfMonth.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  dayOfMonth.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  dayOfMonth.getMillisOfDay(instant);	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
328	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(thisYear,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(thisYear,  month);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
329	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month  -  1);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
330	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month;  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month;  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month;	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  ')'  expected	26	None	replace
331	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	add
332	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	add
333	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  maxDom;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  maxDom;	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	add
334	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
335	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iFieldType.getMillisOfDay(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
336	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  months,  thisDom)+  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  months,  thisDom)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  months,  thisDom)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  months	4	None	replace
337	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  month  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	add
338	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getMonthOfYear(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getMonthOfYear(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  month  =  iChronology.getMonthOfYear(instant);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	add
339	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    int  month  =  iChronology.getMonthDayMillis(thisYear,  month,  thisDom);	  timeout    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	add
340	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  maxDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  maxDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  maxDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
341	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisMax);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisMax);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMax	30	None	replace
342	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisWeekMonth);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisWeekMonth);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	30	None	replace
343	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
344	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonthMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
345	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getYearMonth(month,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  yearToUse  =  iChronology.getYearMonth(month,  month);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  yearToUse  =  iChronology.getYearMonth(month,  month);	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
346	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  yearToUse  =  iChronology.getYearMonth(instant,  month);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  yearToUse  =  iChronology.getYearMonth(instant,  month);	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
347	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
348	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)/    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
349	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month  *  DateTimeConstants.MILLIS_PER_DAY);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
350	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  thisDom);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  thisDom);	      thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
351	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
352	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  month,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(year,  month,  thisYear);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
353	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
354	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  missing  return  statement  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  missing  return  statement	16	None	replace
355	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  unreachable  statement  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  unreachable  statement	9	None	add
356	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  thisMonth  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  possible  loss  of  precision  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  thisMonth  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  thisMonth  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	9	None	add
357	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  MIN  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [CE]  possible  loss  of  precision  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  int  MIN  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    int  MIN  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iMax;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	9	None	add
358	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	2	None	replace
359	[BUG]  [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  maxDom);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  maxDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonth(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  maxDom);	  return    iChronology.getDayOfMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	2	None	replace
360	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  datePart);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  datePart);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  datePart);	      int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
361	[BUG]  [BUGGY]  return  iChronology.getMonthOfYear(instant,  thisYear,  month)+  iChronology.getMillisOfDay(instant);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthOfYear(instant,  thisYear,  month)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthOfYear(instant,  thisYear,  month)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    thisYear,    month)+    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	7	None	replace
362	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
363	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
364	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
365	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYearMonthMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYearMonthMonth(instant,  month);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYearMonthMonth(instant,  month);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
366	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
367	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  }  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
368	[BUG]  [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getYear(instant);  if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getYear(instant);    if(thisYear  <  =  iChronology.getYear(instant))  {  thisYear  =  iChronology.getYear(instant);  }  else  {  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
369	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  unreachable  statement  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  unreachable  statement	31	None	add
370	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  if(thisYear!=  month)  {  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  }  [CE]  unreachable  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  if(thisYear!=  month)  {  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  }  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    if(thisYear!=  month)  {  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  }	  timeout    	non-compiled	[CE]  unreachable  statement	31	None	add
371	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  maxDom;	  timeout    	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	31	None	add
372	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [timeout]  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [timeout]  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [timeout]	      thisYear    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
373	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  maxDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  maxDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  maxDom);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
374	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
375	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month),  thisDom);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month),  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month),  thisDom);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	26	None	replace
376	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  thisDom);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  thisDom);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
377	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonth(instant,  year);	      thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  year	26	None	replace
378	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
379	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant);	      thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
380	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
381	[BUG]  [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [timeout]  [FE]    AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]      thisYear  =  iChronology.getDayOfMonth(instant,  month);  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	        thisYear    =    iChronology.getDayOfMonth(instant,    month);    thisYear  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[timeout]	20	None	add
382	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	17	None	replace
383	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisDom);  [CE]  missing  return  statement  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisDom);	      thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  missing  return  statement	17	None	replace
384	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  maxDom;  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  maxDom;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)/  maxDom;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    maxDom;    timeout    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
385	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisDom);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisDom);	      thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  missing  return  statement	21	None	replace
386	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
387	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(year,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(year,  month,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(year,  month,  thisYear);	      int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	12	None	replace
388	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
389	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month),  thisDom);  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month),  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month),  thisDom);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  ';'  expected	38	None	replace
390	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  months,  thisDom);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  months,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  months,  thisDom);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  months	38	None	replace
391	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	38	None	replace
392	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  maxDom);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  maxDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYear(instant,  month,  maxDom);	      thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	38	None	replace
393	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
394	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDaysInYearMonth(instant,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDaysInYearMonth(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getDaysInYearMonth(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
395	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom),  iChronology.getDaysInYearMonth(instant,  thisDom);  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom),  iChronology.getDaysInYearMonth(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom),  iChronology.getDaysInYearMonth(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  ';'  expected	30	None	replace
396	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  maxDom)+  iChronology.getDaysInYearMonth(instant);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  maxDom)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  maxDom)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
397	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  datePart)+  iChronology.getDaysInYearMonth(instant);  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  datePart)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  datePart)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	30	None	replace
398	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  thisMaxDom)+  iChronology.getDaysInYearMonth(instant);  [CE]  cannot  find  symbol  thisMaxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  thisMaxDom)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom,  thisMaxDom)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMaxDom	30	None	replace
399	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
400	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  day);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  day);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  day);	      int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
401	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [CE]  unreachable  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant);	  timeout    	non-compiled	[CE]  unreachable  statement	33	None	add
402	[BUG]  [BUGGY]  timeout  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  MIN;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  MIN;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	compilable	timeout	10	1	replace
403	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  MIN;  timeout  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  MIN;  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  MIN;	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iMax;    timeout    	compilable	timeout	10	1	replace
404	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
405	[BUG]  [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysMonthDayMillis(thisYear,  month,  thisDom)+  datePart.getMillisOfDay(instant);	  return    iChronology.getDaysMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
406	[BUG]  [BUGGY]  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	add	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	compilable	timeout	34	1	replace
407	[BUG]  [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant,  thisDom);  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDayOfMonth(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	compilable	timeout	34	1	replace
408	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)+  iChronology.getDaysInYearMonth(instant);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)+    iChronology.getDayOfMonth(instant);    timeout    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
409	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  maxDom)+  iChronology.getMillisOfDay(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  maxDom)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  maxDom)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
410	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom),  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom),  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom),  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  ';'  expected	3	None	replace
411	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  datePart)+  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  datePart)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  datePart)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	3	None	replace
412	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	3	None	replace
413	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMaxDom)+  iChronology.getMillisOfDay(instant);  [CE]  cannot  find  symbol  thisMaxDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMaxDom)+  iChronology.getMillisOfDay(instant);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMaxDom)+  iChronology.getMillisOfDay(instant);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMaxDom	3	None	replace
414	[BUG]  [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMonth)+  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMonth)+  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMonth)+  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	3	None	replace
415	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1,  thisDom);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1,  thisDom);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
416	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  thisYear  =  iChronology.getYearMonthMonth(instant,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	thisYear  =  iChronology.getYearMonthMonth(instant,  year);	      thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  year	37	None	replace
417	[BUG]  [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getDayOfMonthMillis(thisYear,  month,  thisDom)+  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getDayOfMonthMillis(thisYear,    month,    thisDom)+    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
418	[BUG]  [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]    iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	return  iChronology.getMonthDayMillis(thisYear,  month,  thisDom)-  iChronology.getMillisOfDay(instant,  thisDom);	  return    iChronology.getYearMonthDayMillis(thisYear,    month,    thisDom)-    iChronology.getMillisOfDay(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
419	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisDom);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisDom);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
420	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  year);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
421	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear);  [BUGGY]    return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +    iChronology.getMillisOfDay(instant);  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	304	305	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	18	None	replace
