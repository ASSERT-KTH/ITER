bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
2	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
3	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
4	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisYear);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
5	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
6	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
7	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDate);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
8	[BUG]  [BUGGY]  int  minDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  minDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  minDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    min,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	252	None	replace
9	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    min,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	252	None	replace
10	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis,  iMax);  [CE]  cannot  find  symbol  thisMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    min,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	252	None	replace
11	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMin);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMin);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    min,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	252	None	replace
12	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	278	None	replace
13	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	278	None	replace
14	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	278	None	replace
15	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	74	None	replace
16	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	74	None	replace
17	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	74	None	replace
18	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    dayToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	251	None	replace
19	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayOfMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayOfMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    dayToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	251	None	replace
20	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
21	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
22	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
23	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
24	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(thisYear,  thisYear);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
25	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
26	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDate);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
27	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
28	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
29	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month),  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month),  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	92	None	replace
30	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  -  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
31	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month));  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month));  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month));	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	92	None	replace
32	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)-  1;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)-  1;	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
33	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  maxDom	180	None	replace
34	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	180	None	replace
35	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	180	None	replace
36	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	180	None	replace
37	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  possible  loss  of  precision  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	char  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  possible  loss  of  precision	191	None	replace
38	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  possible  loss  of  precision  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  possible  loss  of  precision	191	None	replace
39	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	191	None	replace
40	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	37	None	replace
41	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	37	None	replace
42	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfMonth(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	37	None	replace
43	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	227	None	replace
44	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
45	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	227	None	replace
46	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	227	None	replace
47	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
48	[BUG]  [BUGGY]  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	String  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  incompatible  types	227	None	replace
49	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
50	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisDom);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
51	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
52	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
53	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
54	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinue);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinue);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
55	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  *  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  *  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	19	None	replace
56	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  /  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	add	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  /  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	19	8	replace
57	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  /  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  /  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  /  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	19	8	replace
58	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  *  1);  [CE]  cannot  find  symbol  thisMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  *  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	19	None	replace
59	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  *  1);  [timeout]  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  *  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	non-compiled	[timeout]	19	None	replace
60	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  1);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	non-compiled	[timeout]	19	None	replace
61	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  *  1);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  *  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	non-compiled	[timeout]	19	None	replace
62	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  months	183	None	replace
63	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  ')'  expected	183	None	replace
64	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  months	183	None	replace
65	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	166	None	replace
66	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	166	None	replace
67	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	166	None	replace
68	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	166	None	replace
69	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	166	None	replace
70	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	166	None	replace
71	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom  +  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
72	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  +  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
73	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  +  1);  [CE]  cannot  find  symbol  thisMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  +  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	95	None	replace
74	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  2);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  2);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
75	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
76	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month)-  1;	  int    month    =    iChronology.getMonthOfYear()    -    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	53	None	replace
77	[BUG]  [BUGGY]  int  month  =  thisYear.getMonthOfYear()  -  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  thisYear.getMonthOfYear()  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  thisYear.getMonthOfYear()  -  1;	  int    month    =    iChronology.getMonthOfYear()    -    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	53	None	replace
78	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay()  -  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay()  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay()  -  1;	  int    month    =    iChronology.getMonthOfYear()    -    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	53	None	replace
79	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear()  *  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear()  *  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear()  *  1;	  int    month    =    iChronology.getMonthOfYear()    -    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	53	None	replace
80	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
81	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
82	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
83	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMONTthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	268	None	replace
84	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
85	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
86	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
87	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
88	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
89	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
90	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	114	None	replace
91	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisDom,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisDom,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	114	None	replace
92	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	114	None	replace
93	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth,  iMax);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	114	None	replace
94	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	114	None	replace
95	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  minuendMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  minuendMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	114	None	replace
96	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	114	None	replace
97	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinuendMonth,  iMax);  [CE]  cannot  find  symbol  thisMinuendMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinuendMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinuendMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMinuendMonth	114	None	replace
98	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	171	None	replace
99	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	171	None	replace
100	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	171	None	replace
101	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  month);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	171	None	replace
102	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	171	None	replace
103	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisDom);  [CE]  cannot  find  symbol  months  [FE]                                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	171	None	replace
104	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDayOfMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
105	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMonthOfDay(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
106	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinuteDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinuteDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinuteDayOfMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
107	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMillisOfDay(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	249	None	replace
108	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDayOfMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
109	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinuteOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinuteOfDay(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinuteOfDay(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
110	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	249	None	replace
111	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
112	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	83	None	replace
113	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	83	None	replace
114	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
115	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	83	None	replace
116	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	126	None	replace
117	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	126	None	replace
118	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	126	None	replace
119	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDom);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	126	None	replace
120	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  month);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  month);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	126	None	replace
121	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	126	None	replace
122	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisDom);  [CE]  cannot  find  symbol  yearToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	126	None	replace
123	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
124	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisDay);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	220	None	replace
125	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisDom);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
126	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisYear);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
127	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeight);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	220	None	replace
128	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  month);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
129	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisLeapMonth);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	220	None	replace
130	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisMillis);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	220	None	replace
131	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
132	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
133	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
134	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
135	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
136	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
137	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
138	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
139	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(thisYear);	  int    month    =    iChronology.getMonthsInYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	202	None	replace
140	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  month);	  int    month    =    iChronology.getMonthsInYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	202	None	replace
141	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(month);	  int    month    =    iChronology.getMonthsInYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	202	None	replace
142	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(month,  thisYear);	  int    month    =    iChronology.getMonthsInYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	202	None	replace
143	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
144	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	45	None	replace
145	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
146	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	45	None	replace
147	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  thisHeight);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	45	None	replace
148	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
149	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  months	80	None	replace
150	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  maxDom	80	None	replace
151	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois);  [CE]  cannot  find  symbol  mois  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  mois	80	None	replace
152	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	88	None	replace
153	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  thisYear);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	88	None	replace
154	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	88	None	replace
155	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	42	None	replace
156	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	42	None	replace
157	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	42	None	replace
158	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	42	None	replace
159	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	215	None	replace
160	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  double  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	double  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	215	None	replace
161	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	215	None	replace
162	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  long  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	long  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	215	None	replace
163	[BUG]  [BUGGY]  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	215	None	replace
164	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	215	None	replace
165	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	59	None	replace
166	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	256	None	replace
167	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	256	None	replace
168	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	256	None	replace
169	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	193	None	replace
170	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisWeekMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisWeekMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	193	None	replace
171	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	193	None	replace
172	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	255	None	replace
173	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	255	None	replace
174	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	255	None	replace
175	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	255	None	replace
176	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	255	None	replace
177	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	255	None	replace
178	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	255	None	replace
179	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	255	None	replace
180	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	90	None	replace
181	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHeight);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	90	None	replace
182	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  month);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
183	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
184	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	90	None	replace
185	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  null);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  null);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
186	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisMillis);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	90	None	replace
187	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear    -    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	179	None	replace
188	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1);  [timeout]  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear    -    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
189	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  +  1);  [timeout]  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear    -    1);    [timeout]    	non-compiled	[timeout]	179	None	replace
190	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear  -  1);  [timeout]  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear    -    1);    [timeout]    	non-compiled	[timeout]	179	None	replace
191	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  int  cannot  be  dereferenced  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	79	None	replace
192	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	9	None	replace
193	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	9	None	replace
194	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	9	None	replace
195	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [CE]  possible  loss  of  precision  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
196	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;  [CE]  cannot  find  symbol  maxDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	9	None	replace
197	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	161	None	replace
198	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
199	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	161	None	replace
200	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	161	None	replace
201	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
202	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	161	None	replace
203	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
204	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	43	None	replace
205	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	43	None	replace
206	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
207	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	43	None	replace
208	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
209	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeart);  [CE]  cannot  find  symbol  thisHeart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeart);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeart	43	None	replace
210	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	43	None	replace
211	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  minuendMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  minuendMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    isize);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	265	None	replace
212	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  null);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  null);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  null);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    isize);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	265	None	replace
213	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisMonth    +    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
214	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisMonth    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
215	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisMonth  +  1);  [CE]  cannot  find  symbol  thisMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisMonth  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisMonth  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisMonth    +    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	16	None	replace
216	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisDom);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
217	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
218	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  -  1);  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  -  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	207	None	replace
219	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  2);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  2);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
220	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	207	None	replace
221	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  -  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  -  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
222	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month,  thisDom);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
223	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	269	None	replace
224	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(month,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(month,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(month,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
225	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	269	None	replace
226	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisDom);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
227	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
228	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  month);	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
229	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	275	None	replace
230	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	275	None	replace
231	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  month);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	275	None	replace
232	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	275	None	replace
233	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  instant,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  instant,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  instant,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	275	None	replace
234	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeight);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	275	None	replace
235	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  null);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  null);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  null);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	275	None	replace
236	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	10	None	replace
237	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	10	None	replace
238	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  maxDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	10	None	replace
239	[BUG]  [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	84	None	replace
240	[BUG]  [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  not  a  statement  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  not  a  statement	84	None	replace
241	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant);  [CE]  no  suitable  method  found  for  dayOfMonth(long)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long)	41	None	replace
242	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.dayOfMonth();	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  incompatible  types	41	None	replace
243	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  instant);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  instant);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
244	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	164	None	replace
245	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	164	None	replace
246	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	164	None	replace
247	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisDom);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	164	None	replace
248	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  3);  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  3);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    3);    [timeout]    	non-compiled	[timeout]	203	None	replace
249	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [timeout]  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    3);    [timeout]    	non-compiled	[timeout]	203	None	replace
250	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);  [timeout]  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    3);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
251	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month);  [timeout]  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
252	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [timeout]  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
253	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [thisDom]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
254	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [timeout]  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
255	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [thisDom]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
256	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear);  [timeout]  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
257	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month);  [thisDom]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
258	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	225	None	replace
259	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	225	None	replace
260	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	225	None	replace
261	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	225	None	replace
262	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	225	None	replace
263	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	225	None	replace
264	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  months	224	None	replace
265	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	176	None	replace
266	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	176	None	replace
267	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	176	None	replace
268	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  -  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	176	None	replace
269	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  -  1,  thisDom);  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  -  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  -  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	176	None	replace
270	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	176	None	replace
271	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	176	None	replace
272	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisWeekMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	144	None	replace
273	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinuendMonth);  [CE]  cannot  find  symbol  thisMinuendMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinuendMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinuendMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisWeekMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMinuendMonth	144	None	replace
274	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisWeekMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	144	None	replace
275	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
276	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
277	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
278	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
279	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
280	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
281	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
282	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
283	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
284	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
285	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	170	None	replace
286	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	170	None	replace
287	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	170	None	replace
288	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear  +  1);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	119	None	replace
289	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  maxDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	119	None	replace
290	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  null);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,<null>)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  null);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,<null>)	119	None	replace
291	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	70	None	replace
292	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	103	None	replace
293	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	103	None	replace
294	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear  -  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    -    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
295	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear  -  1);  [CE]  cannot  find  symbol  yearToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    -    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	175	None	replace
296	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	201	None	replace
297	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMin,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMin,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMin,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	201	None	replace
298	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDay);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
299	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisDay);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisDay);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisDay	47	None	replace
300	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisMillis);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	47	None	replace
301	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisWeekMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisWeekMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	47	None	replace
302	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	51	None	replace
303	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
304	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisHeight);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	51	None	replace
305	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(month,  thisYear);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(month,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
306	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
307	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisDay);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisDay);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	51	None	replace
308	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	101	None	replace
309	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	101	None	replace
310	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisDom);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	101	None	replace
311	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisMonth);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	replace
312	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisDay);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisDay);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisDay	52	None	replace
313	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisMonth);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	replace
314	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisMonth);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	replace
315	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
316	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	250	None	replace
317	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisYear);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
318	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeight);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	250	None	replace
319	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  month);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
320	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	250	None	replace
321	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  month);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
322	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisMillis);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	250	None	replace
323	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  null);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  null);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
324	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
325	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  minDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  minDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  minDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
326	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	229	None	add
327	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
328	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  minuendDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  minuendDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  minuendDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
329	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  maxDOm  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
330	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  tempDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  tempDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  tempDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
331	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  superDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  superDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  superDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
332	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
333	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
334	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
335	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
336	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
337	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
338	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
339	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(instant,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(instant,  month);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
340	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  +  1);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
341	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month)-  1;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month)-  1;	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
342	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month),  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month),  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	44	None	replace
343	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month));  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month));  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month));	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	44	None	replace
344	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	75	None	replace
345	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisDom);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
346	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfMonth(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
347	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMine);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	276	None	replace
348	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	127	None	replace
349	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	127	None	replace
350	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisMinuend);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisMinuend);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisMinuend);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	236	None	replace
351	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	173	None	replace
352	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	173	None	replace
353	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  thisDom);	  int    month    =    iChronology.getYearMonth(thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	235	None	replace
354	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  maxDom  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	121	None	replace
355	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	121	None	replace
356	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	121	None	replace
357	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	121	None	replace
358	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	121	None	replace
359	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisDom);  [CE]  cannot  find  symbol  months  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	121	None	replace
360	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
361	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	38	None	replace
362	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	38	None	replace
363	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  month,  thisDom);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
364	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDayMillis(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDayMillis(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDayMillis(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
365	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(thisYear,  month,  thisDom);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
366	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(thisYear,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(thisYear,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(thisYear,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
367	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
368	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	50	None	replace
369	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisHeapMonth);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	50	None	replace
370	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisDay);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisDay);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	50	None	replace
371	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  thisMonth);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	50	None	replace
372	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisYear);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
373	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month  +  1);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month  +  1);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
374	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisDay	128	None	replace
375	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	272	None	replace
376	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLastMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	272	None	replace
377	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	148	None	replace
378	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	148	None	replace
379	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	148	None	replace
380	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	148	None	replace
381	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	148	None	replace
382	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	133	None	replace
383	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	133	None	replace
384	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	133	None	replace
385	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	104	None	replace
386	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	104	None	replace
387	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
388	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
389	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	104	None	replace
390	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
391	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	223	None	replace
392	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1L);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,long)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1L);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1L);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,long)	223	None	replace
393	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  0);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	223	None	replace
394	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	223	None	replace
395	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)	223	None	replace
396	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  2;  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  2;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	77	None	replace
397	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	40	None	replace
398	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDate);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	40	None	replace
399	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	40	None	replace
400	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	40	None	replace
401	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
402	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
403	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
404	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
405	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
406	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
407	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
408	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDom);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
409	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	100	None	replace
410	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	100	None	replace
411	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth,  thisDom);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	100	None	replace
412	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
413	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisWeekMonth,  iMax);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisWeekMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisWeekMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	112	None	replace
414	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  dayToUse,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  dayToUse,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	112	None	replace
415	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMinuendMonth,  iMax);  [CE]  cannot  find  symbol  thisMinuendMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMinuendMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMinuendMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMinuendMonth	112	None	replace
416	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
417	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
418	[BUG]  [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  iChronologist  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronologist.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  iChronologist	65	None	replace
419	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	262	None	replace
420	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisyear);  [CE]  cannot  find  symbol  thisyear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisyear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisyear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisyear	262	None	replace
421	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisXear);  [CE]  cannot  find  symbol  thisXear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisXear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisXear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisXear	262	None	replace
422	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
423	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
424	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
425	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
426	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
427	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
428	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
429	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
430	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	258	None	replace
431	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear);	  int    month    =    iChronology.getMonthOfDay(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	258	None	replace
432	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
433	[BUG]  [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	228	None	replace
434	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	111	None	replace
435	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	111	None	replace
436	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	111	None	replace
437	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	111	None	replace
438	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	169	None	replace
439	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisWeekMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	169	None	replace
440	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	89	None	replace
441	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMax	89	None	replace
442	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	89	None	replace
443	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisWeekMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisWeekMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	89	None	replace
444	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  month,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	89	None	replace
445	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinuend);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinuend);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	89	None	replace
446	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisHeight);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	213	None	replace
447	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	213	None	replace
448	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	184	None	replace
449	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear),  month);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear),  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear),  month);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	184	None	replace
450	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1),  thisYear);  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1),  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1),  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	184	None	replace
451	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    2);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	177	None	replace
452	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    2);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	177	None	replace
453	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  2);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    2);    [timeout]    	non-compiled	[timeout]	177	None	replace
454	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  -  2);  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  -  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  -  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    2);    [timeout]    	non-compiled	[timeout]	177	None	replace
455	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
456	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
457	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
458	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
459	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	14	None	replace
460	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	14	None	replace
461	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  1,  thisDom);  [CE]  cannot  find  symbol  thisMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	14	None	replace
462	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	14	None	replace
463	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	14	None	replace
464	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisDom);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisDom);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisDom);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
465	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	189	None	replace
466	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	189	None	replace
467	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	189	None	replace
468	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
469	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeight);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	189	None	replace
470	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
471	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeart);  [CE]  cannot  find  symbol  thisHeart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHeart);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeart	189	None	replace
472	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
473	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	154	None	replace
474	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	154	None	replace
475	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)	154	None	replace
476	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	172	None	replace
477	[BUG]  [BUGGY]  nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
478	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
479	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
480	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
481	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
482	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
483	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
484	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
485	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
486	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
487	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
488	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
489	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
490	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
491	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
492	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
493	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)	221	None	replace
494	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	221	None	replace
495	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(month,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	221	None	replace
496	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	221	None	replace
497	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	221	None	replace
498	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	221	None	replace
499	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	221	None	replace
500	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(thisYear,  thisDom);	  int    month    =    iChronology.getMillisOfDay(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	87	None	replace
501	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(thisYear,  month,  thisDom);	  int    month    =    iChronology.getMillisOfDay(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	87	None	replace
502	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(thisYear,  thisYear);	  int    month    =    iChronology.getMillisOfDay(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	87	None	replace
503	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(thisYear,  thisMonth);	  int    month    =    iChronology.getMillisOfDay(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	87	None	replace
504	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(month,  thisYear);	  int    month    =    iChronology.getMillisOfDay(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	87	None	replace
505	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	186	None	replace
506	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	186	None	replace
507	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  month);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	186	None	replace
508	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	186	None	replace
509	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	186	None	replace
510	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	186	None	replace
511	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocalMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocalMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	186	None	replace
512	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinuend);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinuend);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	186	None	replace
513	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	186	None	replace
514	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
515	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	93	None	replace
516	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisHeapMonth);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	93	None	replace
517	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(month,  thisYear);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(month,  thisYear);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
518	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
519	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
520	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
521	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
522	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
523	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisDom);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	181	None	replace
524	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month)+  1;	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
525	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month  +  1);	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
526	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear)+  1;	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
527	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(1);	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
528	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	91	None	replace
529	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisHeight);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	91	None	replace
530	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
531	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
532	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	91	None	replace
533	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
534	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
535	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
536	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month),  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month),  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  ';'  expected	6	None	replace
537	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
538	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	188	None	replace
539	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	1	None	replace
540	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)/  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)/  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)/  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	1	None	replace
541	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  2;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)+  2;	  int    month    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	1	None	replace
542	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)+  1L;	  int    month    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	1	None	replace
543	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  3;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  3;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)+  3;	  int    month    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	1	None	replace
544	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  thisDom;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  thisDom;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)+  thisDom;	  int    month    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	1	None	replace
545	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDom);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	231	None	replace
546	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(month,  thisYear);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	231	None	replace
547	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month)+  1;	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	187	None	replace
548	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  thisYear);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
549	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfDay(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumMonthOfDay(instant,  thisYear);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
550	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxYear(instant,  thisYear);  [CE]  method  getMaxYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxYear(instant,  thisYear);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getMaxYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	230	None	replace
551	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxYearOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxYearOfDay(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxYearOfDay(instant,  thisYear);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
552	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
553	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	124	None	replace
554	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisDom);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
555	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeight);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	124	None	replace
556	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
557	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	124	None	replace
558	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisYear);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
559	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMillis);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	124	None	replace
560	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfMonth(instant,  thisYear);	  int    month    =    iChronology.getMillisOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	238	None	replace
561	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfMonth(thisYear,  month);	  int    month    =    iChronology.getMillisOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	238	None	replace
562	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfYear(instant);	  int    month    =    iChronology.getMillisOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	238	None	replace
563	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
564	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
565	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
566	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeight);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
567	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
568	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
569	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisTear);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisTear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisTear);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
570	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	130	None	replace
571	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  month,  thisDom);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	98	None	replace
572	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
573	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
574	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
575	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
576	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
577	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
578	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
579	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisMinute);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMinute	212	None	replace
580	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
581	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMillis);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
582	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
583	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
584	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisHeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	48	None	replace
585	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	48	None	replace
586	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
587	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  minDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  minDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  minDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
588	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
589	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1));  [CE]  ';'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1));  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1));	  	non-compiled	[CE]  ';'  expected	18	None	add
590	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
591	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  year  *  1);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  year  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  year  *  1);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
592	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months  *  1);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months  *  1);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
593	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  tempDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  tempDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  tempDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
594	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	246	None	replace
595	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	246	None	replace
596	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay,  thisYear);  [CE]  cannot  find  symbol  thisDay  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	246	None	replace
597	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	246	None	replace
598	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	246	None	replace
599	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisWeek,  thisYear);  [CE]  cannot  find  symbol  thisWeek  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisWeek,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisWeek,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	246	None	replace
600	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	246	None	replace
601	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	200	None	replace
602	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	200	None	replace
603	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	200	None	replace
604	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	200	None	replace
605	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisMax);    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
606	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
607	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHeight);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	49	None	replace
608	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisDay);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	49	None	replace
609	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	49	None	replace
610	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  month);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
611	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	49	None	replace
612	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisMillis);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	49	None	replace
613	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisDom    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	64	None	replace
614	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
615	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
616	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  2);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  +  2);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
617	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  3);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  +  3);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
618	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
619	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	3	None	replace
620	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  1L;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	3	None	replace
621	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  2;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  2;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	3	None	replace
622	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  thisYear;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  thisYear;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  thisYear;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	3	None	replace
623	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month),  thisDom  -  1;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month),  thisDom  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month),  thisDom  -  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	3	None	replace
624	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDate);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	136	None	replace
625	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	136	None	replace
626	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	136	None	replace
627	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	280	None	replace
628	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	280	None	replace
629	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	280	None	replace
630	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeight);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	280	None	replace
631	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	280	None	replace
632	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMillis);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	280	None	replace
633	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeart);  [CE]  cannot  find  symbol  thisHeart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHeart);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeart	280	None	replace
634	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisDate);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	280	None	replace
635	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(dayOfMonth);	  int    month    =    iChronology.getDaysInYearMonth(month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	34	None	replace
636	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);	  thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	125	None	replace
637	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  cannot  find  symbol  maxDom  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);	  thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	125	None	replace
638	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;	  thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	125	None	replace
639	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDom);	  thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	125	None	replace
640	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  maxDom  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;	  thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	125	None	replace
641	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisDom);  [CE]  cannot  find  symbol  maxDom  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisDom);	  thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	125	None	replace
642	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);	  thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	125	None	replace
643	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
644	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
645	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
646	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
647	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
648	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
649	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	145	None	replace
650	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisMax);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	145	None	replace
651	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	199	None	replace
652	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	199	None	replace
653	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	199	None	replace
654	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  ';'  expected	199	None	replace
655	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
656	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    months,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
657	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    months,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
658	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse,  MIN,  iMax);  [CE]  cannot  find  symbol  yearToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    months,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	243	None	replace
659	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    months,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMax	243	None	replace
660	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYear(thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	55	None	replace
661	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	162	None	replace
662	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month  -  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
663	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  -  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
664	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  instant  -  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  instant  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  instant  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
665	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
666	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	226	None	replace
667	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	226	None	replace
668	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	226	None	replace
669	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	122	None	replace
670	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	122	None	replace
671	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	122	None	replace
672	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisDom);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	122	None	replace
673	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	122	None	replace
674	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(thisYear,  instant);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	122	None	replace
675	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisDom,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisDom,  thisYear);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	122	None	replace
676	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	122	None	replace
677	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	113	None	replace
678	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	113	None	replace
679	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	113	None	replace
680	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	113	None	replace
681	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin,  iMax);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	113	None	replace
682	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	113	None	replace
683	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax,  thisMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	113	None	replace
684	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	167	None	replace
685	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	60	None	replace
686	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    2);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	15	None	replace
687	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  2);  [timeout]  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  +  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    2);    [timeout]    	non-compiled	[timeout]	15	None	replace
688	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);  [timeout]  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    2);    [timeout]    	non-compiled	[timeout]	15	None	replace
689	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);  [timeout]  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    2);    [timeout]    	non-compiled	[timeout]	15	None	replace
690	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  +  2);  [timeout]  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  +  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  +  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    2);    [timeout]    	non-compiled	[timeout]	15	None	replace
691	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1),  thisYear);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1),  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1),  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  ';'  expected	12	None	replace
692	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  +  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
693	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
694	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
695	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
696	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisYear,  month);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
697	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	63	None	replace
698	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	63	None	replace
699	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	63	None	replace
700	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfDay(instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfDay(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfDay(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
701	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisYear);	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
702	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month  +  1);	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
703	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisDom);	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
704	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month)+  1;	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
705	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month)-  1;	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
706	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month  -  1);	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
707	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month,  thisDay);	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	219	None	replace
708	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	153	None	replace
709	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	153	None	replace
710	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  thisDom);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	266	None	replace
711	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
712	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
713	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
714	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
715	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
716	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
717	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
718	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear));  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
719	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth();  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth();	  int    month    =    iChronology.getMonthOfDay();    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	54	None	replace
720	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay()  +  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay()  +  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay()  +  1;	  int    month    =    iChronology.getMonthOfDay();    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	54	None	replace
721	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeart);  [CE]  cannot  find  symbol  thisHeart  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeart);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeart);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeart);    	non-compiled	[CE]  cannot  find  symbol  thisHeart	76	None	replace
722	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeart);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeart);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeart);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeart);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	76	None	replace
723	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(thisYear,  month);	  int    month    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	274	None	replace
724	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month);	  int    month    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	274	None	replace
725	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(month);	  int    month    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	274	None	replace
726	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(thisYear);	  int    month    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	274	None	replace
727	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
728	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
729	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	260	None	replace
730	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisDom);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
731	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
732	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	260	None	replace
733	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	260	None	replace
734	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  month);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
735	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	142	None	replace
736	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  iLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  iLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	142	None	replace
737	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  thisDom);  [CE]  cannot  find  symbol  yearToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	142	None	replace
738	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear,  thisDom);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	142	None	replace
739	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  thisLeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	46	None	replace
740	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
741	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	156	None	replace
742	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	156	None	replace
743	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
744	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	94	None	replace
745	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisHeight);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	94	None	replace
746	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	94	None	replace
747	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	94	None	replace
748	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(dayOfMonth,  thisYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(dayOfMonth,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(dayOfMonth,  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	94	None	replace
749	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(year,  month,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(year,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(year,  month,  thisYear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	94	None	replace
750	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	222	None	replace
751	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  dayToUse,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  dayToUse,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	115	None	replace
752	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  dayOfMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  dayOfMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	115	None	replace
753	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	115	None	replace
754	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisWeekMonth,  iMax);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisWeekMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisWeekMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	115	None	replace
755	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  thisYear,  iMax);  [CE]  cannot  find  symbol  months  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	115	None	replace
756	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	270	None	replace
757	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	270	None	replace
758	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	270	None	replace
759	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	270	None	replace
760	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	270	None	replace
761	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  minuendMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  minuendMonth,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	270	None	replace
762	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisMillis,  iMax);  [CE]  cannot  find  symbol  thisMillis  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisMillis,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisMillis,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	270	None	replace
763	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(dayOfMonth);	  int    month    =    iChronology.getMonthOfYear(month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	163	None	replace
764	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	190	None	replace
765	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	190	None	replace
766	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  null);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)	190	None	replace
767	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	208	None	replace
768	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	208	None	replace
769	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	208	None	replace
770	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [thisDom]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
771	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [timeout]  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [timeout]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
772	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear);  [timeout]  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear);  [timeout]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
773	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(instant,  month);  [thisDom]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
774	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [out]  [CE]  illegal  start  of  expression  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [out]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [out]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
775	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  month);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  month);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  month);  [timeout]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
776	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	204	None	replace
777	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	204	None	replace
778	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	204	None	replace
779	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	204	None	replace
780	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	204	None	replace
781	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisDom,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	204	None	replace
782	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	204	None	replace
783	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMillis);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	204	None	replace
784	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocalMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocalMillis);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	204	None	replace
785	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
786	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
787	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
788	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisDom);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
789	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	129	None	replace
790	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
791	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	72	None	replace
792	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	72	None	replace
793	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom);	  int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
794	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
795	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
796	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
797	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
798	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	123	None	replace
799	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  month);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
800	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	123	None	replace
801	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	123	None	replace
802	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisDom);  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisDom);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
803	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  month);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
804	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
805	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
806	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
807	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
808	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  thisYear);  [CE]  cannot  find  symbol  thisMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	73	None	replace
809	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  instant);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  instant);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
810	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
811	[BUG]  [BUGGY]  char  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  char  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	char  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
812	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  instant);  [CE]  cannot  find  symbol  thisMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  instant);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  instant);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	73	None	replace
813	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  month  +  1);	  int    month    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	234	None	replace
814	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
815	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
816	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisDom);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
817	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
818	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
819	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
820	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
821	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear,  thisDom);  [CE]  cannot  find  symbol  thisXear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisXear	138	None	replace
822	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	138	None	replace
823	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
824	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
825	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
826	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
827	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	20	None	replace
828	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	20	None	replace
829	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
830	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear  +  1);  [CE]  cannot  find  symbol  yearToUse  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	13	None	replace
831	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLast);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLast);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLast);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
832	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisLast);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisLast);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisLast);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
833	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisLast);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisLast);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisLast);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
834	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  thisYear,  thisLast);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  thisYear,  thisLast);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  thisYear,  thisLast);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
835	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
836	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
837	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
838	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisDom);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
839	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinuendToUse,  iMax);  [CE]  cannot  find  symbol  thisMinuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinuendToUse,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinuendToUse,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    minuendToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMinuendToUse	242	None	replace
840	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MILLIS_PER_DAY,  iMax);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MILLIS_PER_DAY,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MILLIS_PER_DAY,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MAX_MONTH,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	253	None	replace
841	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
842	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
843	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
844	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
845	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
846	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
847	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
848	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
849	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
850	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
851	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisLeapMonth,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	245	None	replace
852	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  minuendMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  minuendMonth,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	245	None	replace
853	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
854	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDay,  iMax);  [CE]  cannot  find  symbol  thisDay  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDay,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDay,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisDay	245	None	replace
855	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisDom);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisDom);    [timeout]    	non-compiled	[timeout]	211	None	replace
856	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMillisOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	86	None	replace
857	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisMonth);	  int    month    =    iChronology.getMillisOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	86	None	replace
858	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMillisOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	86	None	replace
859	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getMillisOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	86	None	replace
860	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfYear(instant,  thisYear);	  int    month    =    iChronology.getMillisOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	86	None	replace
861	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisHeight);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	141	None	replace
862	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMillis);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
863	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
864	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
865	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [thisDom]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    [timeout]    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
866	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [timeout]  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    [timeout]    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
867	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  -  1);  [timeout]  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  -  1);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  -  1);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    [timeout]    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
868	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
869	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
870	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
871	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
872	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
873	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	240	None	replace
874	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	240	None	replace
875	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear);  [CE]  cannot  find  symbol  thisyear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  thisyear	240	None	replace
876	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	210	None	replace
877	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom  +  1);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
878	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  1,  thisDom);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  1,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
879	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  2);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  2);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
880	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  *  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  *  1);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
881	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);	  thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	120	None	replace
882	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	120	None	replace
883	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;	  thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	120	None	replace
884	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  maxDom  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);	  thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	120	None	replace
885	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	97	None	replace
886	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  month);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
887	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	97	None	replace
888	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	97	None	replace
889	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisDate);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	150	None	replace
890	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDate);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	150	None	replace
891	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	150	None	replace
892	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	165	None	replace
893	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	165	None	replace
894	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth,  thisYear);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	165	None	replace
895	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	165	None	replace
896	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	165	None	replace
897	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek,  thisYear);  [CE]  cannot  find  symbol  thisWeek  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	165	None	replace
898	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth,  thisYear);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	165	None	replace
899	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinth);  [CE]  cannot  find  symbol  thisMinth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMinth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMin);    	non-compiled	[CE]  cannot  find  symbol  thisMinth	263	None	replace
900	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMine);  [CE]  cannot  find  symbol  thisMine  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMine);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMine);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMin);    	non-compiled	[CE]  cannot  find  symbol  thisMine	263	None	replace
901	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLam);  [CE]  cannot  find  symbol  thisLam  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLam);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisLam);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMin);    	non-compiled	[CE]  cannot  find  symbol  thisLam	263	None	replace
902	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear));	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	109	None	replace
903	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear));  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear));	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	109	None	replace
904	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month  +  1);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	5	None	replace
905	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month)+  1;	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	5	None	replace
906	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month)-  1;	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	5	None	replace
907	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisDom);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisDom);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
908	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  thisDom);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
909	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  month,  thisYear);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
910	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisYear,  thisMonth);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	218	None	replace
911	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  month);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisYear,  month);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
912	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisYear,  thisDay);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	218	None	replace
913	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisMonth,  thisYear);  [CE]  cannot  find  symbol  thisMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisMonth,  thisYear);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	218	None	replace
914	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  month);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  month);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
915	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisDay,  thisYear);  [CE]  cannot  find  symbol  thisDay  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisDay,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisDay,  thisYear);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	218	None	replace
916	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	254	None	replace
917	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	254	None	replace
918	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHear);  [CE]  cannot  find  symbol  thisHear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHour);    	non-compiled	[CE]  cannot  find  symbol  thisHear	241	None	replace
919	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
920	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [thisDom]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
921	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [out]  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [out]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [out]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
922	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
923	[BUG]  [BUGGY]  long  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  long  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	long  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
924	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
925	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
926	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
927	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
928	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
929	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
930	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
931	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMinthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMinthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMinthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
932	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
933	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	8	None	replace
934	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	8	None	replace
935	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  -  1);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  -  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	8	None	replace
936	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	8	None	replace
937	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);  [CE]  cannot  find  symbol  maxDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	8	None	replace
938	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisMillis);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	143	None	replace
939	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	168	None	replace
940	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	168	None	replace
941	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear);  [CE]  cannot  find  symbol  thisXear  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisXear	168	None	replace
942	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	69	None	replace
943	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	69	None	replace
944	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	69	None	replace
945	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	69	None	replace
946	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinuend);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinuend);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	69	None	replace
947	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeight);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	69	None	replace
948	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisWeek);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisWeek);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	69	None	replace
949	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLocalMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLocalMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	69	None	replace
950	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	247	None	replace
951	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	247	None	replace
952	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMax	247	None	replace
953	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	247	None	replace
954	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  MIN);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[timeout]	247	None	replace
955	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisMinuendMonth);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisMinuendMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisMinuendMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[timeout]	247	None	replace
956	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	247	None	replace
957	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	132	None	replace
958	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	132	None	replace
959	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	132	None	replace
960	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	132	None	replace
961	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	132	None	replace
962	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMillis);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	132	None	replace
963	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	132	None	replace
964	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	118	None	replace
965	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	118	None	replace
966	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisDay);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	118	None	replace
967	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	118	None	replace
968	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
969	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
970	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
971	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMillis);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
972	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(thisYear,  thisYear);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
973	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
974	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	195	None	replace
975	[BUG]  [BUGGY]  int  thisMonth  =  iChronologist.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  iChronologist  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronologist.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronologist.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMonth    =    iChronologist.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iChronologist	108	None	replace
976	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  3);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  3);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    3);    [timeout]    	non-compiled	[timeout]	239	None	replace
977	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  3);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  3);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    3);    [timeout]    	non-compiled	[timeout]	239	None	replace
978	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [timeout]  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    3);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	239	None	replace
979	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  thisMonth);	  int    month    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	237	None	replace
980	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfMonth(instant,  month);	  int    month    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	237	None	replace
981	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  month)-  1;	  int    month    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	237	None	replace
982	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  month)+  1;	  int    month    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	237	None	replace
983	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfYear(instant,  month);	  int    month    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	237	None	replace
984	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  month  +  1);	  int    month    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	237	None	replace
985	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	196	None	replace
986	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	196	None	replace
987	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	196	None	replace
988	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	7	None	replace
989	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	7	None	replace
990	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	7	None	replace
991	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
992	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	248	None	add
993	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  minDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  minDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  minDom  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
994	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  Integer  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  Integer  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
995	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  minDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  minDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  minDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);	  	non-compiled	[CE]  cannot  find  symbol	248	None	add
996	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDOm  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDOm  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  maxDOm  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
997	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  minDom  =  iChronology.getMinuteOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  minDom  =  iChronology.getMinuteOfDay(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  minDom  =  iChronology.getMinuteOfDay(instant,  thisYear);	  	non-compiled	[CE]  cannot  find  symbol	248	None	add
998	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  tempDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  tempDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  tempDom  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
999	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  possible  loss  of  precision  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  possible  loss  of  precision	216	None	replace
1000	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	216	None	replace
1001	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1002	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	216	None	replace
1003	[BUG]  [BUGGY]  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  incompatible  types	216	None	replace
1004	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  Char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  Char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  Char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1005	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1,  thisDom);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	271	None	replace
1006	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	271	None	replace
1007	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  +  1,  thisDom);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear  +  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	271	None	replace
1008	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  +  1,  thisDom);  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisMonth  +  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	271	None	replace
1009	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisHeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	271	None	replace
1010	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	271	None	replace
1011	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	71	None	replace
1012	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	71	None	replace
1013	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMillis);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	39	None	replace
1014	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMillis);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	39	None	replace
1015	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear  -  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear  -  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1016	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1017	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  2);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  -  2);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1018	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1019	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months  -  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months  -  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1020	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	140	None	replace
1021	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthsInYearMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	30	None	replace
1022	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	30	None	replace
1023	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	30	None	replace
1024	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	30	None	replace
1025	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	11	None	replace
1026	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [CE]  possible  loss  of  precision  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
1027	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;  [CE]  cannot  find  symbol  maxDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	11	None	replace
1028	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [CE]  cannot  find  symbol  maxDom  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	11	None	replace
1029	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	116	None	replace
1030	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMax	116	None	replace
1031	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  iMax);  [CE]  cannot  find  symbol  yearToUse  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	116	None	replace
1032	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(dayOfMonth,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	116	None	replace
1033	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  month);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	40	None	replace
1034	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisDate);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	40	None	replace
1035	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(month,  thisYear);	  int    month    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	274	None	replace
1036	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisLast);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisLast);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisLast);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
1037	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisLast);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisLast);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisLast);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
1038	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisLast);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisLast);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisLast);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
1039	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	121	None	replace
1040	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom  +  1);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	121	None	replace
1041	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisDom,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisDom,  thisYear);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	121	None	replace
1042	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	30	None	replace
1043	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthsInYearMonth(thisYear,  month);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	30	None	replace
1044	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	3	None	replace
1045	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  3;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  3;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  3;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	3	None	replace
1046	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  thisDom;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  thisDom;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  1  +  thisDom;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	3	None	replace
1047	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN  +  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN  +  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN  +  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
1048	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  months,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  months,  MIN,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	245	None	replace
1049	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMillis);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
1050	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
1051	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
1052	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
1053	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
1054	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    3);    [timeout]    	non-compiled	[timeout]	203	None	replace
1055	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  3);  [timeout]  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  3);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    3);    [timeout]    	non-compiled	[timeout]	203	None	replace
1056	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [CE]  cannot  find  symbol  day  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  day	172	None	replace
1057	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	172	None	replace
1058	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  hour);  [CE]  cannot  find  symbol  hour  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  hour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  hour);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	172	None	replace
1059	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	107	None	replace
1060	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1061	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  possible  loss  of  precision  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  possible  loss  of  precision	191	None	replace
1062	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  year	128	None	replace
1063	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	128	None	replace
1064	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1065	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1066	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1067	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1068	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  thisDom);  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	275	None	replace
1069	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	275	None	replace
1070	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  year);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  year);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  year	275	None	replace
1071	[BUG]  [BUGGY]  t  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    min,    iMax);    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
1072	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(thisYear,  month  +  1);	  int    month    =    iChronology.getMillisOfDay(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	87	None	replace
1073	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  *  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  *  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
1074	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
1075	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  iMinute	141	None	replace
1076	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iHeight);  [CE]  cannot  find  symbol  iHeight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iHeight);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  iHeight	141	None	replace
1077	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMax	28	None	replace
1078	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMillis);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMillis);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	28	None	replace
1079	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisDay);	  int    month    =    iChronology.getMonthOfYear(thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	55	None	replace
1080	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  thisDom,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  thisDom,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	114	None	replace
1081	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	246	None	replace
1082	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	246	None	replace
1083	[BUG]  [BUGGY]  boolean  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  incompatible  types  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  boolean  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	boolean  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  incompatible  types	152	None	replace
1084	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [timeout]  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1085	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [maxDay]  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [maxDay]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [maxDay]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1086	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	167	None	replace
1087	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMin);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	167	None	replace
1088	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMax	167	None	replace
1089	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  thisYear);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	231	None	replace
1090	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month  +  1);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	231	None	replace
1091	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  thisDay);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	231	None	replace
1092	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumOfDay(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumOfDay(instant,  thisYear);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
1093	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeader);  [CE]  cannot  find  symbol  thisHeader  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeader);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeader);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeader	123	None	replace
1094	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	123	None	replace
1095	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	123	None	replace
1096	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);	  thisYear    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	123	None	replace
1097	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  months,  thisDom);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  months,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  months,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	45	None	replace
1098	[BUG]  [BUGGY]  int  maxDom  =  thisYear.getMinutesInYearMonth(iChronology,  month,  thisDom);  [CE]  int  cannot  be  dereferenced  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  thisYear.getMinutesInYearMonth(iChronology,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  thisYear.getMinutesInYearMonth(iChronology,  month,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  int  cannot  be  dereferenced	45	None	replace
1099	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom)+  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom)+  1;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom)+  1;	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
1100	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	272	None	replace
1101	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMax	272	None	replace
1102	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisWeekMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	272	None	replace
1103	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	103	None	replace
1104	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	103	None	replace
1105	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1106	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1107	[BUG]  [BUGGY]  t  month  =  thisYear.getMonthOfYear(instant,  iChronology);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  thisYear.getMonthOfYear(instant,  iChronology);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  thisYear.getMonthOfYear(instant,  iChronology);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1108	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(thisYear,  month);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1109	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  month);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1110	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	81	None	replace
1111	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	81	None	replace
1112	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1113	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  thisYear,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	113	None	replace
1114	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	192	None	replace
1115	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  cannot  find  symbol  iMinute	192	None	replace
1116	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	192	None	replace
1117	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMin);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMin);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	192	None	replace
1118	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	225	None	replace
1119	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	225	None	replace
1120	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	210	None	replace
1121	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisDom);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	210	None	replace
1122	[BUG]  [BUGGY]  int  month  =  thisYear.getMonthOfYear(instant,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  thisYear.getMonthOfYear(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  thisYear.getMonthOfYear(instant,  month,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	210	None	replace
1123	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	208	None	replace
1124	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	208	None	replace
1125	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  month);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	208	None	replace
1126	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	37	None	replace
1127	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	37	None	replace
1128	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  2);  [CE]  cannot  find  symbol  thisMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  +  2);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    2);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	15	None	replace
1129	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  3);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  3);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1130	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1  +  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  1  +  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1131	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month  +  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month  +  1);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1132	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  thisYear);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1133	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
1134	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
1135	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth,  thisDom);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	138	None	replace
1136	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisHorizontal);  [CE]  cannot  find  symbol  thisHorizontal  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisHorizontal);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisHorizontal);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHorizontal	48	None	replace
1137	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	133	None	replace
1138	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
1139	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
1140	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
1141	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisLastMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	90	None	replace
1142	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear  +  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1143	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1144	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisLastMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisLastMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	47	None	replace
1145	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisHours);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisHours);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisHours	47	None	replace
1146	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDay);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
1147	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  month,  thisDay);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
1148	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
1149	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay,  thisMinute);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	99	None	replace
1150	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	199	None	replace
1151	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	199	None	replace
1152	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	199	None	replace
1153	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
1154	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
1155	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
1156	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
1157	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
1158	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDate);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	136	None	replace
1159	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	136	None	replace
1160	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1161	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1162	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1163	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1164	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1165	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1166	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinuend);  [CE]  cannot  find  symbol  iMinuend  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinuend);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinuend);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMinuend);    	non-compiled	[CE]  cannot  find  symbol  iMinuend	194	None	replace
1167	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinuend);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinuend);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMinuend);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	194	None	replace
1168	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	60	None	replace
1169	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	60	None	replace
1170	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	60	None	replace
1171	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	173	None	replace
1172	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	204	None	replace
1173	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisXear,  thisYear);  [CE]  cannot  find  symbol  thisXear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisXear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisXear,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisXear	204	None	replace
1174	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	204	None	replace
1175	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisWeek,  thisYear);  [CE]  cannot  find  symbol  thisWeek  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisWeek,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisWeek,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	204	None	replace
1176	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	204	None	replace
1177	[BUG]  [BUGGY]  int  minuendDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  minuendDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  minuendDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    minuendMonth,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	117	None	replace
1178	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MILLISECOND,  iMax);  [CE]  cannot  find  symbol  MILLISECOND  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MILLISECOND,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MILLISECOND,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    minuendMonth,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MILLISECOND	117	None	replace
1179	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMin);  [CE]  cannot  find  symbol  thisMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMin);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisMin);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisMax);    	non-compiled	[CE]  cannot  find  symbol  thisMin	145	None	replace
1180	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisDom);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  year	126	None	replace
1181	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMax	221	None	replace
1182	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  -  1);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  -  1);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	221	None	replace
1183	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMine);  [CE]  cannot  find  symbol  iMine  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMine);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMine);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMine);    	non-compiled	[CE]  cannot  find  symbol  iMine	276	None	replace
1184	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  valueToUse,  iMax);  [CE]  cannot  find  symbol  valueToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  valueToUse,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  valueToUse,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    dayToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  valueToUse	251	None	replace
1185	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
1186	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  year);	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
1187	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	211	None	replace
1188	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  thisDom  +  1,  thisDom);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  thisDom  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  thisDom  +  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	271	None	replace
1189	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  1,  thisDom);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	271	None	replace
1190	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months  +  1,  thisDom);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months  +  1,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	271	None	replace
1191	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMin,  iMax);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMin,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMin,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	115	None	replace
1192	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisDom,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  thisDom,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	115	None	replace
1193	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	247	None	replace
1194	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  MIN);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[timeout]	247	None	replace
1195	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN  +  1);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[timeout]	247	None	replace
1196	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisToUse);  [CE]  cannot  find  symbol  thisToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  MIN,  thisToUse);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisToUse	247	None	replace
1197	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iMinuend);  [CE]  cannot  find  symbol  iMinuend  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iMinuend);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iMinuend);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisMinuend);    	non-compiled	[CE]  cannot  find  symbol  iMinuend	236	None	replace
1198	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	224	None	replace
1199	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  iMinute	224	None	replace
1200	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	224	None	replace
1201	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisDate);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	150	None	replace
1202	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate,  month);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	150	None	replace
1203	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2);  [timeout]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    [timeout]    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1204	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [tempOut]  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [tempOut]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [tempOut]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    [timeout]    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1205	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[timeout]	184	None	replace
1206	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month),  thisYear);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month),  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month),  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[timeout]	184	None	replace
1207	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  maxDom	182	None	replace
1208	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  maxDom	182	None	replace
1209	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	182	None	replace
1210	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMillis);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
1211	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
1212	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom  +  1);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	98	None	replace
1213	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	98	None	replace
1214	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	98	None	replace
1215	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeader);  [CE]  cannot  find  symbol  thisHeader  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeader);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeader);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeader	260	None	replace
1216	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	260	None	replace
1217	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDate);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	260	None	replace
1218	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  0);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  0);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  0);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	68	None	replace
1219	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	168	None	replace
1220	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);  [CE]  cannot  find  symbol  thisHour  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHour	168	None	replace
1221	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	168	None	replace
1222	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month  +  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	183	None	replace
1223	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month  -  1);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month  -  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	183	None	replace
1224	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	183	None	replace
1225	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  iMax);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  iMax);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	183	None	replace
1226	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month)+  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	183	None	replace
1227	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	216	None	replace
1228	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	216	None	replace
1229	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	216	None	replace
1230	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1231	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	130	None	replace
1232	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMin);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	130	None	replace
1233	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisDom,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisDom,  thisYear);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
1234	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisXear,  thisYear);  [CE]  cannot  find  symbol  thisXear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisXear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisXear,  thisYear);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisXear	218	None	replace
1235	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	84	None	replace
1236	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	84	None	replace
1237	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	84	None	replace
1238	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	84	None	replace
1239	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	84	None	replace
1240	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMinute);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	200	None	replace
1241	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMinute);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	200	None	replace
1242	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisJear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisJear	262	None	replace
1243	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisDay	262	None	replace
1244	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisDom    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	64	None	replace
1245	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisDom    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	64	None	replace
1246	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	186	None	replace
1247	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinute	186	None	replace
1248	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisXear,  thisYear);  [CE]  cannot  find  symbol  thisXear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisXear,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisXear,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisXear	186	None	replace
1249	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(month,  thisDom);	  int    month    =    iChronology.getYearMonth(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	267	None	replace
1250	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisLastMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  thisLastMonth);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	50	None	replace
1251	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
1252	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  instant);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear,  instant);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	70	None	replace
1253	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  -  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	10	None	replace
1254	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
1255	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
1256	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
1257	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
1258	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
1259	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMax,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	112	None	replace
1260	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMin,  iMax);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMin,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  iMin,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	112	None	replace
1261	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeader);  [CE]  cannot  find  symbol  thisHeader  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeader);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeader);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeader	220	None	replace
1262	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear  +  1);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1263	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisYear,  thisHeap);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	220	None	replace
1264	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
1265	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	169	None	replace
1266	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMinute);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMinute	169	None	replace
1267	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  -  1);  [CE]  cannot  find  symbol  thisMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisMonth    +    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	16	None	replace
1268	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth)+  1;  [CE]  cannot  find  symbol  thisMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth)+  1;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth)+  1;	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisMonth    +    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	16	None	replace
1269	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    thisMillis);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	143	None	replace
1270	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	277	None	replace
1271	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  date);  [CE]  cannot  find  symbol  date  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  date);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  date);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    isize);    	non-compiled	[CE]  cannot  find  symbol  date	265	None	replace
1272	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    isize);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	265	None	replace
1273	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iRight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  iRight);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    isize);    	non-compiled	[CE]  cannot  find  symbol  iRight	265	None	replace
1274	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  minuendMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  minuendMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	206	None	replace
1275	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  1);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisMax);    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
1276	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
1277	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1278	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  iMax);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	116	None	replace
1279	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMin,  iMax);  [CE]  cannot  find  symbol  thisMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMin,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMin,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMin	116	None	replace
1280	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	71	None	replace
1281	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom  +  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	176	None	replace
1282	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  2,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  2,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  2,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	176	None	replace
1283	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month  +  1);	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	187	None	replace
1284	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month;  [CE]  ')'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month;	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  ')'  expected	219	None	replace
1285	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	255	None	replace
1286	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	255	None	replace
1287	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	255	None	replace
1288	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  -  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  -  1);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1289	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  3);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month  +  3);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1290	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(year,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(year,  thisYear);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	164	None	replace
1291	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(null,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(null,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(null,  thisYear);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	164	None	replace
1292	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	240	None	replace
1293	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear  -  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    -    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	175	None	replace
1294	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
1295	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1296	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisMax);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	201	None	replace
1297	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisMax);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	201	None	replace
1298	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
1299	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
1300	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	89	None	replace
1301	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  month,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	89	None	replace
1302	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisMinute);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	89	None	replace
1303	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(yearToUse,  thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	89	None	replace
1304	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(thisYear,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	137	None	replace
1305	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	59	None	replace
1306	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
1307	[BUG]  [BUGGY]  float  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
1308	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  minuendMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  minuendMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	142	None	replace
1309	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear,  thisDom,  thisHeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	142	None	replace
1310	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	43	None	replace
1311	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	43	None	replace
1312	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	196	None	replace
1313	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	196	None	replace
1314	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
1315	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDayOfMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
1316	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	101	None	replace
1317	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	101	None	replace
1318	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(month,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	101	None	replace
1319	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	79	None	replace
1320	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1321	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	79	None	replace
1322	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1323	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  -  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisYear  -  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear    -    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	179	None	replace
1324	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinuendMonth,  iMax);  [CE]  cannot  find  symbol  thisMinuendMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinuendMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinuendMonth,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisWeekMonth,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMinuendMonth	244	None	replace
1325	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  thisDom  +  1,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  thisDom  +  1,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  thisDom  +  1,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	14	None	replace
1326	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  float  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  float  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
1327	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  maxDom  =  iChronology.getMONTthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
1328	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear;	  	non-compiled	[CE]  ')'  expected	229	None	add
1329	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [tempOut]  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [tempOut]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [tempOut]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1330	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  +  1);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  +  1);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month  +  1);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1331	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [timeout]  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1332	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
1333	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
1334	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	77	None	replace
1335	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisWeekMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisWeekMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	213	None	replace
1336	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  MIN,  iMax);  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    months,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	243	None	replace
1337	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month)+  1;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month)+  1;	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1338	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	278	None	replace
1339	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMax	180	None	replace
1340	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  year);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	180	None	replace
1341	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1342	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom  +  1);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1343	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1344	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom)-  1;	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1345	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	223	None	replace
1346	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  2);  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	223	None	replace
1347	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  3);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	223	None	replace
1348	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
1349	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
1350	[BUG]  [BUGGY]  if(month  <  =  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  =  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  =  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
1351	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;  [CE]  cannot  find  symbol  maxDom  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  cannot  find  symbol  maxDom	159	None	replace
1352	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)+  1;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)+  1;	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1353	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	280	None	replace
1354	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	280	None	replace
1355	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisWeekMonth);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	280	None	replace
1356	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  cannot  find  symbol  thisMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	228	None	replace
1357	[BUG]  [BUGGY]  if(month  <  =  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  =  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  =  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  illegal  start  of  expression	228	None	replace
1358	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	228	None	replace
1359	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	228	None	replace
1360	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  ')'  expected	228	None	replace
1361	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
1362	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	158	None	replace
1363	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	94	None	replace
1364	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisLastMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisLastMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	94	None	replace
1365	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	104	None	replace
1366	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeader);  [CE]  cannot  find  symbol  thisHeader  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeader);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeader);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeader	124	None	replace
1367	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeap);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	124	None	replace
1368	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	124	None	replace
1369	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
1370	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisXear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisXear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisXear);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
1371	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	4	None	replace
1372	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1);  [timeout]  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month  +  1);  [timeout]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1373	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [temp]  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [temp]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [temp]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1374	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [max]  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [max]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [max]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1375	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
1376	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  iMax);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
1377	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear  +  1);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
1378	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeap);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHeap);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	250	None	replace
1379	[BUG]  [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  not  a  statement  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	null  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  not  a  statement	58	None	replace
1380	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
1381	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
1382	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
1383	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
1384	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	189	None	replace
1385	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisDate);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	189	None	replace
1386	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	189	None	replace
1387	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
1388	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisMinute);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
1389	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth,  thisMax);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
1390	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(month,  thisYear,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1391	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	11	None	replace
1392	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek,  thisYear);  [CE]  cannot  find  symbol  thisWeek  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	69	None	replace
1393	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  month);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
1394	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	41	None	replace
1395	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMax	127	None	replace
1396	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	38	None	replace
1397	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  year);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  year);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	67	None	replace
1398	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	111	None	replace
1399	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
1400	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear));    	non-compiled	[CE]  cannot  find  symbol  maxDom	109	None	replace
1401	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  maxDom	61	None	replace
1402	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  maxDom	61	None	replace
1403	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  iMinute);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  iMinute	188	None	replace
1404	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	100	None	replace
1405	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	100	None	replace
1406	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1407	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom)-  1;	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1408	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1409	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1410	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  3);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  3);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
1411	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	165	None	replace
1412	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	165	None	replace
1413	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	80	None	replace
1414	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	80	None	replace
1415	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	80	None	replace
1416	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	80	None	replace
1417	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	7	None	replace
1418	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  year);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	222	None	replace
1419	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	122	None	replace
1420	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  thisLeapMonth);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	52	None	replace
1421	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months,  thisDom);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	91	None	replace
1422	[BUG]  [BUGGY]  int  maxDom  =  thisYear.getMaximumDaysInYearMonth(iChronology,  month,  thisDom);  [CE]  int  cannot  be  dereferenced  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  thisYear.getMaximumDaysInYearMonth(iChronology,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  thisYear.getMaximumDaysInYearMonth(iChronology,  month,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  int  cannot  be  dereferenced	91	None	replace
1423	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom)+  1;  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom)+  1;	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1424	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
1425	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisWeekMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	181	None	replace
1426	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(thisYear,  month);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1427	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1428	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1429	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	156	None	replace
1430	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;  [CE]  cannot  find  symbol  maxDom  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	119	None	replace
1431	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(thisYear,  thisDom);  [CE]  cannot  find  symbol  maxDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(thisYear,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	119	None	replace
1432	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  float  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  float  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    float  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
1433	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  char  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  char  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    char  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
1434	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month  -  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month  -  1);	  int    month    =    iChronology.getMonthOfYear()    -    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	53	None	replace
1435	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear()  -  1L;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear()  -  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear()  -  1L;	  int    month    =    iChronology.getMonthOfYear()    -    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	53	None	replace
1436	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  Integer  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  Integer  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    Integer  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
1437	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  MIN);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	270	None	replace
1438	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisMin,  iMax);  [CE]  cannot  find  symbol  thisMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisMin,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisMin,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMin	270	None	replace
1439	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisWeekMonth,  iMax);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisWeekMonth,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisWeekMonth,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	270	None	replace
1440	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
1441	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
1442	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
1443	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
1444	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
1445	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  year);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	5	None	replace
1446	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	106	None	add
1447	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDateOfYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getDateOfYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getDateOfYearMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
1448	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
1449	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisYear  =  iChronology.getYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisYear  =  iChronology.getYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisYear  =  iChronology.getYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	106	None	add
1450	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  year);  [CE]  cannot  find  symbol  year  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  year);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  year	171	None	replace
1451	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom  +  1);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1452	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom)-  1;	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1453	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom)+  1;	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1454	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  months,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  months,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  months,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1455	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  month);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1456	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
1457	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
1458	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	63	None	replace
1459	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  year  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	63	None	replace
1460	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	63	None	replace
1461	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  maxDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;	  thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	120	None	replace
1462	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	9	None	replace
1463	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear()  +  1L;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear()  +  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear()  +  1L;	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
1464	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1465	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1466	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	83	None	replace
1467	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  cannot  find  symbol  maxDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	83	None	replace
1468	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1469	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	83	None	replace
1470	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  year);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  year);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	97	None	replace
1471	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisHeight);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisHeight);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	97	None	replace
1472	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	161	None	replace
1473	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getHoursOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getHoursOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getHoursOfDay(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1474	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom  +  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom  +  1);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
1475	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  months,  thisDom);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  months,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  months,  thisDom);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	269	None	replace
1476	[BUG]  [BUGGY]  int  maxDom  =  thisYear.getMinimumDaysInYearMonth(iChronology,  month,  thisDom);  [CE]  int  cannot  be  dereferenced  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  thisYear.getMinimumDaysInYearMonth(iChronology,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  thisYear.getMinimumDaysInYearMonth(iChronology,  month,  thisDom);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  int  cannot  be  dereferenced	269	None	replace
1477	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  cannot  find  symbol  maxDom  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(thisYear,  month);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	118	None	replace
1478	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  year);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	118	None	replace
1479	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	118	None	replace
1480	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  maxDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	215	None	replace
1481	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1482	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	195	None	replace
1483	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysMonth(instant,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysMonth(instant,  thisYear,  thisMillis);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	39	None	replace
1484	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
1485	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  thisYear,  thisHeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	97	None	replace
1486	[BUG]  [BUGGY]  t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
1487	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  min,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  min,  iMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	245	None	replace
1488	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1489	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getYearOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1490	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1491	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	82	None	add
1492	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month	  	non-compiled	[CE]  ')'  expected	82	None	add
1493	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  day);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  day);	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
1494	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
1495	[BUG]  [BUGGY]  t  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
1496	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDate);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDate	166	None	replace
1497	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  MIN);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  MIN);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1498	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  2,  thisDom  -  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  2,  thisDom  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  -  2,  thisDom  -  1);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1499	[BUG]  [BUGGY]  thisYear  =  iChronology.dayOfMonth(instant,  thisYear);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.dayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.dayOfMonth(instant,  thisYear);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	220	None	replace
1500	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  month);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1501	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisJear,  thisDom);  [CE]  cannot  find  symbol  thisJear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisJear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisJear,  thisDom);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	220	None	replace
1502	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisXear,  thisYear);  [CE]  cannot  find  symbol  thisXear  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearOfMonth(instant,  thisXear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearOfMonth(instant,  thisXear,  thisYear);	  thisYear    =    iChronology.getYearOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisXear	220	None	replace
1503	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisDom);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	273	None	replace
1504	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
1505	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfMinute(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
1506	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear();  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear();  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        thisYear);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear();  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	106	None	add
1507	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1508	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisMonth);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1509	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1510	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisMinute);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1511	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisValue);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisValue);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1512	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear,  thisDom,  thisLastMonth);	  int    month    =    iChronology.getMonthOfYearDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	259	None	replace
1513	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1514	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisMine);  [CE]  cannot  find  symbol  thisMine  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisMine);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisMine);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMine	90	None	replace
1515	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisToUse);  [CE]  cannot  find  symbol  thisToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisToUse);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisToUse	90	None	replace
1516	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHours);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisHours);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHours	90	None	replace
1517	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisEear);  [CE]  cannot  find  symbol  thisEear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisEear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  thisYear,  thisEear);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisEear	90	None	replace
1518	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
1519	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
1520	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHours);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHours);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHours);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
1521	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
1522	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	105	None	replace
1523	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  theYear,  iMax);  [CE]  cannot  find  symbol  theYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  theYear,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  theYear,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  theYear	115	None	replace
1524	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfYear(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMillisOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	86	None	replace
1525	[BUG]  [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMillisOfDay(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMillisOfDay(instant,  thisDom);	  int    month    =    iChronology.getMillisOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	86	None	replace
1526	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  months	213	None	replace
1527	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	181	None	replace
1528	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	181	None	replace
1529	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMinute);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	181	None	replace
1530	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom  +  1);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom  +  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  maxDom	181	None	replace
1531	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
1532	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear),  thisDom);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear),  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear),  thisDom);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	159	None	replace
1533	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  year);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
1534	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	156	None	replace
1535	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
1536	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisMax);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	49	None	replace
1537	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisToUse);  [CE]  cannot  find  symbol  thisToUse  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisToUse);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisToUse	49	None	replace
1538	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHours);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisHours);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHours	49	None	replace
1539	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisJear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear,  thisJear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	49	None	replace
1540	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisJear,  thisDom);  [CE]  cannot  find  symbol  thisJear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisJear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisJear,  thisDom);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	260	None	replace
1541	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMine);  [CE]  cannot  find  symbol  thisMine  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMine);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMine);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMine	260	None	replace
1542	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisXear,  thisDom);  [CE]  cannot  find  symbol  thisXear  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisXear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonthOfYear(instant,  thisXear,  thisDom);	  thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisXear	260	None	replace
1543	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  isize);  [CE]  cannot  find  symbol  isize  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  isize);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom,  isize);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  isize	45	None	replace
1544	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  year	193	None	replace
1545	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  4);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  4);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  4);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	7	None	replace
1546	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	196	None	replace
1547	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisDom);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	196	None	replace
1548	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxutesInYearMonth(thisYear,  month,  iMax);	  int    maxDom    =    iChronology.getMaxutesInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
1549	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
1550	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeap);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeap);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeap);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
1551	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
1552	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	27	None	replace
1553	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisMonth);  [CE]  cannot  find  symbol  maxDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  maxDom	10	None	replace
1554	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1555	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month),  thisDom);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month),  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month),  thisDom);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  ';'  expected	272	None	replace
1556	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear  +  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
1557	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisWeekMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom,  thisWeekMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	138	None	replace
1558	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthMillis(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthMillis(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthMillis(thisYear,  month);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	231	None	replace
1559	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMinute);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	171	None	replace
1560	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisLastMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	171	None	replace
1561	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear,  thisDom);  [CE]  cannot  find  symbol  year  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear,  thisDom);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  year	171	None	replace
1562	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisMin,  thisYear);  [CE]  cannot  find  symbol  thisMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisMin,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisMin,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMin	246	None	replace
1563	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHour,  thisYear);  [CE]  cannot  find  symbol  thisHour  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHour,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHour,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHour	246	None	replace
1564	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
1565	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
1566	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
1567	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	36	None	replace
1568	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisDom);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1569	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  year);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1570	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
1571	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
1572	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
1573	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
1574	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHours);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHours);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHours);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	158	None	replace
1575	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisDay	126	None	replace
1576	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	126	None	replace
1577	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisDom);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
1578	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisMonth);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
1579	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  year);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
1580	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHorizontal);  [CE]  cannot  find  symbol  thisHorizontal  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHorizontal);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHorizontal);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeart);    	non-compiled	[CE]  cannot  find  symbol  thisHorizontal	76	None	replace
1581	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisDom);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	37	None	replace
1582	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	233	None	replace
1583	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMillis,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
1584	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	134	None	replace
1585	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	103	None	replace
1586	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	103	None	replace
1587	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	103	None	replace
1588	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1589	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month),  thisDom);  [CE]  ';'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month),  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month),  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  ';'  expected	221	None	replace
1590	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)	221	None	replace
1591	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  year	224	None	replace
1592	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom  -  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisDom  -  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1593	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year  -  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year  -  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	209	None	replace
1594	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  min,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  min,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	270	None	replace
1595	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  months,  MIN,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	270	None	replace
1596	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthMillis(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthMillis(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthMillis(instant,  month);	  int    month    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	234	None	replace
1597	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  thisDom,  thisMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    1,    thisDom);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMax	176	None	replace
1598	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	98	None	replace
1599	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisDay);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	98	None	replace
1600	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDom,  thisMinute);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	98	None	replace
1601	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
1602	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	149	None	replace
1603	[BUG]  [BUGGY]  t  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1604	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	150	None	replace
1605	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisJear,  thisDom);  [CE]  cannot  find  symbol  thisJear  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisJear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisJear,  thisDom);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	124	None	replace
1606	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisXear,  thisYear);  [CE]  cannot  find  symbol  thisXear  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisXear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisXear,  thisYear);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisXear	124	None	replace
1607	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMine);  [CE]  cannot  find  symbol  thisMine  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMine);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMine);	  thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMine	124	None	replace
1608	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [timeout]  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[timeout]	249	None	replace
1609	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);  [timeout]  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[timeout]	249	None	replace
1610	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxYearOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxYearOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxYearOfMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
1611	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	133	None	replace
1612	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	133	None	replace
1613	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	29	None	replace
1614	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MAX_MONTH,  MIN);  [CE]  cannot  find  symbol  MAX_MONTH  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MAX_MONTH,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MAX_MONTH,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MAX_MONTH,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	253	None	replace
1615	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1616	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisMinute);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1617	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisValue);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisValue);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1618	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom,  thisLastMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	146	None	replace
1619	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	104	None	replace
1620	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom  *  1);  [timeout]  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom  *  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    	non-compiled	[timeout]	19	None	replace
1621	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDate,  thisDom);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	40	None	replace
1622	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2,  thisYear  -  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  2,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
1623	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	174	None	replace
1624	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayToUse,  MIN,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayToUse,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayToUse,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    dayToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	251	None	replace
1625	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayToUse,  MIN);  [CE]  cannot  find  symbol  dayToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayToUse,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  dayToUse,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    dayToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	251	None	replace
1626	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  maxDom  =  iChronology.getMillisOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
1627	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMONTHOFYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getMONTHOFYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  maxDom  =  iChronology.getMONTHOFYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
1628	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getYearOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  maxDom  =  iChronology.getYearOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  maxDom  =  iChronology.getYearOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	229	None	add
1629	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom,  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom,  thisMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisDom);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	211	None	replace
1630	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);	  int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	255	None	replace
1631	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear));  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear));  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear));	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	184	None	replace
1632	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear),  thisMonth);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear),  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear),  thisMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	184	None	replace
1633	[BUG]  [BUGGY]  t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  thisDom);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1634	[BUG]  [BUGGY]  t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisMax);    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
1635	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN  +  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month,  MIN  +  1);	  int    maxDom    =    iChronology.getMinutesInYearMonth(thisYear,    month,    thisMax);    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
1636	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisDom,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisDom,  thisYear);	  int    month    =    iChronology.getMonthOfDay(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	258	None	replace
1637	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	258	None	replace
1638	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  MIN,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  MIN,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  MIN,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    minuendMonth,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	117	None	replace
1639	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  MIN);  [CE]  cannot  find  symbol  minuendMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    minuendMonth,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	117	None	replace
1640	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	230	None	replace
1641	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxMonthOfYear(instant,  thisYear);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
1642	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxYearOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxYearOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxYearOfYear(instant,  thisYear);	  int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
1643	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom));	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	109	None	replace
1644	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom));  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom));	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	109	None	replace
1645	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	254	None	replace
1646	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
1647	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisMine);  [CE]  cannot  find  symbol  thisMine  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisMine);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisMine);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMine	250	None	replace
1648	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisToUse);  [CE]  cannot  find  symbol  thisToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisToUse);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisToUse	250	None	replace
1649	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHours);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisHours);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHours	250	None	replace
1650	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisJear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisJear);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	250	None	replace
1651	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaxDaysInYearMonth(instant,  thisYear,  thisLastMonth);	  int    maxDom    =    iChronology.getMaxDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	250	None	replace
1652	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	5	None	replace
1653	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	129	None	replace
1654	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	147	None	replace
1655	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisMine);  [CE]  cannot  find  symbol  thisMine  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisMine);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(month,  thisYear,  thisMine);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMine	94	None	replace
1656	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	135	None	replace
1657	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iMin);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  iMin);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  iMin	91	None	replace
1658	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisHeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  thisHeapMonth);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	91	None	replace
1659	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  isize);  [CE]  cannot  find  symbol  isize  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  isize);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month,  thisDom,  isize);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  isize	91	None	replace
1660	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom,  iLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom,  iLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	114	None	replace
1661	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  datePart,  iMax);  [CE]  cannot  find  symbol  datePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  datePart,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  datePart,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	114	None	replace
1662	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom,  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom,  thisDom,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    thisDom,    iMax);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	114	None	replace
1663	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  year);	  int    month    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	274	None	replace
1664	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisDom);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisDom    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	64	None	replace
1665	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisDom);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisDom);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisDom    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	64	None	replace
1666	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)-  1;  [timeout]  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)-  1;  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month)-  1;  [timeout]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1667	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [maxDay]  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [maxDay]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month);  [maxDay]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1668	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisDom);  [timeout]  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisDom);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(instant,  month,  thisDom);  [timeout]	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1669	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  iMax);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1670	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month),  thisDom);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month),  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month),  thisDom);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  ';'  expected	93	None	replace
1671	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;  [CE]  cannot  find  symbol  maxDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  maxDom	9	None	replace
1672	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	152	None	replace
1673	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMean);  [CE]  cannot  find  symbol  thisMean  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMean);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMean);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMean	185	None	replace
1674	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  int  cannot  be  dereferenced  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	199	None	replace
1675	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();  [CE]  int  cannot  be  dereferenced  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	199	None	replace
1676	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  ')'  expected	199	None	replace
1677	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
1678	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisDom);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	38	None	replace
1679	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysMonth(instant,  month);	  thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1680	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1681	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
1682	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  2);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
1683	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    *    1);    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  1);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  3);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	18	None	add
1684	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
1685	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
1686	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month).intValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
1687	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
1688	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	85	None	replace
1689	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisJear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisJear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	240	None	replace
1690	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  iMax);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
1691	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  isize);  [CE]  cannot  find  symbol  isize  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  isize);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinimumDaysInYearMonth(thisYear,  month,  thisDom,  isize);	  int    maxDom    =    iChronology.getMinimumDaysInYearMonth(thisYear,    month,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  isize	269	None	replace
1692	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [maxDay]  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [maxDay]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [maxDay]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1693	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months,  MIN,  thisDom);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months,  MIN,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  months,  MIN,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    months,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	243	None	replace
1694	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1695	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	155	None	add
1696	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getStandardOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getStandardOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getStandardOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	155	None	add
1697	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom  -  1);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisDom  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear    -    1);    [timeout]    	non-compiled	[timeout]	179	None	replace
1698	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	59	None	replace
1699	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	59	None	replace
1700	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMin);  [CE]  cannot  find  symbol  thisMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMin);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMin);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMin	28	None	replace
1701	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  year);	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	187	None	replace
1702	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLast,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLast,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLast,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLast);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	151	None	replace
1703	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	63	None	replace
1704	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);//int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  maxDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);//int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);//int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  maxDom	63	None	replace
1705	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	101	None	replace
1706	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	275	None	replace
1707	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  isize);  [CE]  cannot  find  symbol  isize  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  isize);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  isize);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  isize	275	None	replace
1708	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  datePart);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  datePart);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  datePart	275	None	replace
1709	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	69	None	replace
1710	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	20	None	replace
1711	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	20	None	replace
1712	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom,  thisMinute);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	20	None	replace
1713	[BUG]  [BUGGY]  t  month  =  iChronology.dayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.dayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.dayOfMonth(instant,  thisYear);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1714	[BUG]  [BUGGY]  boolean  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  boolean  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	boolean  month  =  iChronology.getMonthOfYear(instant,  thisYear);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	257	None	replace
1715	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMine);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMine);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMine);	  t    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1716	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	226	None	replace
1717	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate);	  t    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
1718	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	186	None	replace
1719	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMin);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMin);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	186	None	replace
1720	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	186	None	replace
1721	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [maxDay]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [maxDay]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [maxDay]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    [timeout]    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1722	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  thisDom,  thisDom);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  thisDom,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  *  thisDom,  thisDom);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	271	None	replace
1723	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMaximumDaysInYearMonth(thisYear,  month  +  1,  thisDom,  iMax);	  int    maxDom    =    iChronology.getMaximumDaysInYearMonth(thisYear,    month    +    1,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	271	None	replace
1724	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1725	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1726	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisValue);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisValue);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1727	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisEnd);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisEnd);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom,  thisEnd);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	131	None	replace
1728	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  thisMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	30	None	replace
1729	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDate,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	136	None	replace
1730	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDate);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDate);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDate);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDate);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	136	None	replace
1731	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  months);	  int    month    =    iChronology.getMonthsInYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	202	None	replace
1732	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
1733	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMinYearOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMinYearOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  maxDom  =  iChronology.getMinYearOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
1734	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMinOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMinOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  maxDom  =  iChronology.getMinOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
1735	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int    maxDom    =    iChronology.getDayOfMonth(instant,    thisYear);    int  maxDom  =  iChronology.getMinuteOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	248	None	add
1736	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  thisDom  -  1;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  thisDom  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  thisDom  -  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	11	None	replace
1737	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	153	None	replace
1738	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  31);  [CE]  cannot  find  symbol  maxDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  31);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  31);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	223	None	replace
1739	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  maxDom  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	122	None	replace
1740	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisJear,  thisDom);  [CE]  cannot  find  symbol  thisJear  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  thisJear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  thisJear,  thisDom);	  thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	122	None	replace
1741	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisHeapMonth,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisHeapMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisHeapMonth,  thisYear);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	148	None	replace
1742	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  11);  [CE]  cannot  find  symbol  maxDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  11);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  11);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	225	None	replace
1743	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	2	None	replace
1744	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    thisMinute);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	212	None	replace
1745	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [thisDom]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1746	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [timeout]  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [timeout]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [timeout]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1747	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [thisDom]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [thisDom]  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [thisDom]	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1748	[BUG]  [BUGGY]  int  timeout  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  timeout  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  timeout  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    maxDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	66	None	replace
1749	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
1750	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month),  thisDom);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYearMonth(instant,  month),  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYearMonth(instant,  month),  thisDom);	  thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	219	None	replace
1751	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
1752	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	232	None	replace
1753	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHours);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisHours);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHours	189	None	replace
1754	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear,  thisJear);	  int    thisMonth    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	189	None	replace
1755	[BUG]  [BUGGY]  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	161	None	replace
1756	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  maxDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	161	None	replace
1757	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisMin,  thisYear);  [CE]  cannot  find  symbol  thisMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisMin,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisMin,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMin	165	None	replace
1758	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour,  thisYear);  [CE]  cannot  find  symbol  thisHour  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHour	165	None	replace
1759	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  datePart,  iMax);  [CE]  cannot  find  symbol  datePart  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  datePart,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  datePart,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    minuendToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	242	None	replace
1760	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendToUse,  MIN);  [CE]  cannot  find  symbol  minuendToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendToUse,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendToUse,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    minuendToUse,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	242	None	replace
1761	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	228	None	replace
1762	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1763	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  month);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  month);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	6	None	replace
1764	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfMonth(instant,  thisYear);	  int    month    =    iChronology.getMonthOfDay();    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	54	None	replace
1765	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDaysMonth(instant,  thisYear,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1766	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisJear,  thisDom);  [CE]  cannot  find  symbol  thisJear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisJear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisJear,  thisDom);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisJear	121	None	replace
1767	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisJear,  thisDom);  [CE]  cannot  find  symbol  thisJear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  thisJear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  thisJear,  thisDom);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	218	None	replace
1768	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(instant,  null,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(instant,  null,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(instant,  null,  thisYear);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
1769	[BUG]  [BUGGY]  thisYear  =  iChronology.getYear(thisYear,  instant);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getYear(thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getYear(thisYear,  instant);	  thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	218	None	replace
1770	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	210	None	replace
1771	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDom,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    month,    thisDom);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	210	None	replace
1772	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMax	119	None	replace
1773	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	119	None	replace
1774	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinuend);  [CE]  cannot  find  symbol  thisMinuend  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinuend);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinuend);	  thisYear    =    iChronology.getDayOfMonth(instant,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  thisMinuend	119	None	replace
1775	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(year,  month,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(year,  month,  thisYear);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(year,  month,  thisYear);	  int    maxDom    =    iChronology.getMinutesInYearMonth(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	51	None	replace
1776	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	100	None	replace
1777	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisDom,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisDom,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisDom,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	100	None	replace
1778	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  thisDom);  [timeout]  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  *  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[timeout]	14	None	replace
1779	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisLeapMonth);  [timeout]  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisLeapMonth);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisDom,  thisLeapMonth);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    +    1,    thisDom);    [timeout]    	non-compiled	[timeout]	14	None	replace
1780	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear),  month  -  1;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear),  month  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear),  month  -  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	3	None	replace
1781	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  MIN);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1,  MIN);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month    -    MIN);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	247	None	replace
1782	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear()  /  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear()  /  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear()  /  1;	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
1783	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant  +  1);	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
1784	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant)+  1;	  int    month    =    iChronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	56	None	replace
1785	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1786	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	200	None	replace
1787	[BUG]  [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  iChronologist  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear,  thisDom);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronologist.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iChronologist	157	None	replace
1788	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfYear(instant)-  1;	  int    month    =    iChronology.getMonthOfYear()    -    1;    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	53	None	replace
1789	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear  -  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    -    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
1790	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	add	int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    -    1);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	175	8	replace
1791	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear    -    1);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	175	8	replace
1792	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisDom);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisDom);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	8	None	replace
1793	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	8	None	replace
1794	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
1795	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getYearOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	add
1796	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(year,  month,  thisYear,  thisDom);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(year,  month,  thisYear,  thisDom);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(year,  month,  thisYear,  thisDom);	  int    maxDom    =    iChronology.getDaysInYearMonth(month,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  year	142	None	replace
1797	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisJear,  thisDom);  [CE]  cannot  find  symbol  thisJear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  thisJear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  thisJear,  thisDom);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	118	None	replace
1798	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  1);  [CE]  cannot  find  symbol  maxDom  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  1);	  thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  maxDom	118	None	replace
1799	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHours);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHours);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHours	43	None	replace
1800	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  dayToUse);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  dayToUse);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	112	None	replace
1801	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMin,  iMax);  [CE]  cannot  find  symbol  thisMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMin,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  thisMin,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisMin	112	None	replace
1802	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  datePart,  iMax);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  datePart,  iMax);  [BUGGY]      if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN,  datePart,  iMax);	  int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month,    MIN,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	112	None	replace
1803	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
1804	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	160	None	add
1805	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	170	None	replace
1806	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear,  instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	170	None	replace
1807	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax,  thisDom);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	201	None	replace
1808	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    int    thisMonth    =    iChronology.getDayofMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
1809	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHours);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisHours);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHours	280	None	replace
1810	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	280	None	replace
1811	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	298	298	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisDom);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	266	None	replace
